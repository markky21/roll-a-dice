{"version":3,"sources":["utils/router.utils.ts","components/FormDialog.tsx","components/ImageWrapper.tsx","modules/Chatter/index.ts","modules/RoomCreate/components/RoomCreateForm.tsx","modules/RoomCreate/RoomCreate.tsx","routes/Room/RoomPage/RoomPage.enhancer.tsx","modules/LogsDashboard/components/LogsListItem.tsx","modules/LogsDashboard/components/LogDiceThrow.tsx","modules/LogsDashboard/components/LogNewPlayer.tsx","modules/LogsDashboard/components/LogsTimeline.tsx","modules/LogsDashboard/components/LogsExpansion.tsx","modules/LogsDashboard/components/LogsByPlayers.tsx","modules/LogsDashboard/components/LogsTabs.tsx","modules/LogsDashboard/LogsDashboard.tsx","modules/Players/components/PlayerTile.tsx","modules/Players/components/PlayerProfileForm.tsx","modules/Players/components/PlayerProfile.tsx","modules/Players/Players.tsx","components/SpeedDial.tsx","containers/RoomCreateInRoom.tsx","routes/Room/RoomPage/components/RoomSpeedDial.tsx","routes/Room/RoomPage/components/RoomPageView.tsx","routes/Room/RoomPage/index.ts","routes/Room/RoomPage/RoomPage.tsx"],"names":["locationHelper","locationHelperBuilder","history","createBrowserHistory","UserIsAuthenticated","connectedRouterRedirect","redirectPath","RouterPath","HOME_PATH","AuthenticatingComponent","Loader","wrapperDisplayName","authenticatedSelector","firebaseSelectors","isAuthenticated","authenticatingSelector","redirectAction","newLoc","dispatch","push","type","payload","message","allowRedirectBack","state","firebase","auth","isEmpty","isInitializing","isLoaded","ownProps","getRedirectQueryParam","ROOMS_PATH","FormDialog","React","memo","props","open","onClose","children","title","theme","useTheme","fullScreen","useMediaQuery","breakpoints","down","aria-labelledby","styles","createStyles","image","width","height","backgroundPosition","backgroundSize","useStyles","makeStyles","ImageWrapper","src","classes","in","length","className","Chatter","lazy","RoomCreateForm","reduxForm","form","validate","values","errors","createRoomFormModel","roomName","name","maxPlayers","forEach","field","diceType","handleSubmit","pristine","submitting","invalid","useSelector","mainSelectors","getFormCreateRoom","onSubmit","roomImage","DialogContent","dividers","campaignTitle","description","gameMasterAvatar","style","DialogActions","Button","color","disabled","onClick","RoomCreate","initialValues","enhancedRoomList","compose","setDisplayName","withRouter","LogsListItem","withStyles","itemHeader","paddingRight","spacing","boxSizing","itemContent","profile","log","displayName","photoURL","avatarUrl","characterAvatarUrl","characterName","ListItem","alignItems","ListItemAvatar","Avatar","alt","ListItemText","primary","Grid","container","direction","justify","Typography","component","variant","dateUtils","timeStampToDetailedTime","timestamp","LogDiceThrow","resultSorted","diceUtils","sortObjectWithDiceKey","result","item","xs","Object","keys","map","diceKey","Fragment","key","join","LogNewPlayer","LogsTimeline","root","backgroundColor","palette","background","paper","overflowY","profiles","logs","List","reverse","id","Divider","light","authorUid","Log","DICE_ROLL","NEW_PLAYER","LogsExpansion","ExpansionPanel","elevation","ExpansionPanelSummary","expandIcon","aria-controls","ExpansionPanelDetails","renderlog","LogsByPlayers","profileUid","filter","LogsTabs","position","zIndex","overflow","bar","borderBottom","tab","overflowX","tabContent","margin","visible","useState","value","setValue","firestoreSelectors","selectedRoomPlayers","selectedRoomLogs","Slide","Paper","AppBar","Tabs","onChange","event","newValue","indicatorColor","textColor","aria-label","Tab","label","a11yProps","axis","index","onChangeIndex","TabPanel","dir","other","role","hidden","Box","p","LogsDashboard","top","left","PlayerTile","tile","borderRadius","marginRight","maxWidth","padding","titleDisable","warning","actionGrid","right","titleBar","player","onEdit","GridListTile","GridListTileBar","connected","actionIcon","Tooltip","IconButton","gameMaster","clsx","uid","PlayerProfileForm","playersCharacterFormModel","fieldKey","maxLength","getFormPlayerProfile","characterDescription","notes","PlayerProfile","firestore","useFirestore","selectedRoomUid","roomsSelectors","selectedRoom","players","formValues","undefined","doc","FirestoreCollection","ROOMS","update","then","room","e","console","Players","display","flexWrap","justifyContent","gridList","transform","usersProfiles","userProfile","gameMasterUid","selectedRoomGameMasterUid","editProfile","setEditProfile","GridList","cols","playerUid","Grow","timeout","SpeedDialWrapper","actions","setOpen","handleClose","SpeedDial","ariaLabel","icon","SpeedDialIcon","onOpen","action","SpeedDialAction","tooltipTitle","callback","RoomCreateInRoom","selectedRoomFormData","RoomSpeedDialWrapper","snackbar","useDispatch","isGameMasterOfSelectedRoom","drawerOpened","chatOpened","playersOpened","showRoomForm","setShowRoomForm","text","snackbarConfig","setSnackbarConfig","actionsAdditional","cb","roomsActions","setDrawerOpenValue","setChatOpenValue","setPlayersOpenValue","navigator","permissions","query","clipboard","writeText","window","location","href","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","Alert","severity","mainGrid","gridTemplateColumns","gridTemplateRows","columnGap","rowGap","gridItemLogs","gridColumn","gridRow","gridItemChatter","gridItemDiceCard","gridItemPlayers","speedDial","bottom","diceDashboard","maxHeight","transition","noHeight","RoomView","diceRolling","isUserARoomPlayerOrGameMaster","diceCardFullHeight","DiceCard","DiceDashboard","match","selectedRoomData","storeLocationMatch","locationSelectors","useEffect","JSON","stringify","locationActions","matchChange","setSelectedRoom","params","documentRef","runTransaction","t","get","Date","now","data","email","playersUid","err","onEnterTheRoomAddUserToPlayers","createdAt","chatsActions","setSelectedChat","chatUid"],"mappings":"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","file":"static/js/6.01a7db52.chunk.js","sourcesContent":["import locationHelperBuilder from 'redux-auth-wrapper/history4/locationHelper';\nimport { connectedRouterRedirect } from 'redux-auth-wrapper/history4/redirect';\nimport { createBrowserHistory } from 'history';\nimport { RouterPath } from '../models/paths';\n\nimport { AppState } from '../store/main';\nimport { firebaseSelectors } from '../store/firebase/firebase.selectors';\nimport { Loader } from '../components/Loader';\n\nconst locationHelper = locationHelperBuilder({});\nconst history = createBrowserHistory();\n\nconst AUTHED_REDIRECT = 'AUTHED_REDIRECT';\nconst UNAUTHED_REDIRECT = 'UNAUTHED_REDIRECT';\n\n/**\n * Higher Order Component that redirects to `/login` instead\n * rendering if user is not authenticated (default of redux-auth-wrapper).\n * @param {Component} componentToWrap - Component to wrap\n * @return {Component} wrappedComponent\n */\nexport const UserIsAuthenticated = connectedRouterRedirect({\n  redirectPath: RouterPath.HOME_PATH,\n  AuthenticatingComponent: Loader,\n  wrapperDisplayName: 'UserIsAuthenticated',\n  // Want to redirect the user when they are done loading and authenticated\n  authenticatedSelector: firebaseSelectors.isAuthenticated,\n  authenticatingSelector: firebaseSelectors.authenticatingSelector,\n  redirectAction: ((newLoc: any) => (dispatch: any) => {\n    // Use push, replace, and go to navigate around.\n    history.push(newLoc);\n    dispatch({\n      type: UNAUTHED_REDIRECT,\n      payload: { message: 'User is not authenticated.' },\n    });\n  }) as any,\n});\n\n/**\n * Higher Order Component that redirects to listings page or most\n * recent route instead rendering if user is not authenticated. This is useful\n * routes that should not be displayed if a user is logged in, such as the\n * login route.\n * @param {Component} componentToWrap - Component to wrap\n * @return {Component} wrappedComponent\n */\nexport const UserIsNotAuthenticated = connectedRouterRedirect({\n  AuthenticatingComponent: Loader,\n  wrapperDisplayName: 'UserIsNotAuthenticated',\n  allowRedirectBack: false,\n  // Want to redirect the user when they are done loading and authenticated\n  authenticatedSelector: (state: AppState) => {\n    const {\n      firebase: { auth },\n    } = state;\n    return auth.isEmpty;\n  },\n  authenticatingSelector: ({ firebase: { auth, isInitializing } }) => !auth.isLoaded || isInitializing,\n  redirectPath: (state, ownProps) => locationHelper.getRedirectQueryParam(ownProps) || RouterPath.ROOMS_PATH,\n  redirectAction: ((newLoc: any) => (dispatch: any) => {\n    // Use push, replace, and go to navigate around.\n    history.push(newLoc);\n    dispatch({\n      type: AUTHED_REDIRECT,\n      payload: { message: 'User is not authenticated.' },\n    });\n  }) as any,\n});\n\n/*\n/!**\n * Render children based on route config objects\n * @param {Array} routes - Routes settings array\n * @param {Object} match - Routes settings array\n * @param {Object} parentProps - Props to pass to children from parent\n *!/\nexport function renderChildren(routes, match, parentProps) {\n  return routes.map(route => (\n    <Route\n      key={`${match.url}-${route.path}`}\n      path={`${match.url}/${route.path}`}\n      render={props => <route.component {...parentProps} {...props} />}\n    />\n  ));\n}*/\n","import React from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { Dialog, DialogTitle, useMediaQuery } from '@material-ui/core';\n\nexport interface FormDialogProps<T> {\n  open: boolean;\n  onClose: () => void;\n  title: string;\n  children: any;\n}\n\nexport function FormDialogC<T = any>(props: FormDialogProps<T>) {\n  const { open, onClose, children = [], title } = props;\n\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('xs'));\n\n  return (\n    <Dialog fullScreen={fullScreen} open={open} onClose={onClose} aria-labelledby=\"responsive-dialog-title\">\n      <DialogTitle>{title}</DialogTitle>\n      {children}\n    </Dialog>\n  );\n}\n\nexport const FormDialog = React.memo(FormDialogC);\n","import React from 'react';\nimport {CardMedia, Collapse, createStyles} from '@material-ui/core';\nimport {makeStyles} from '@material-ui/core/styles';\n\nconst styles = createStyles({\n  image: {\n    width: '100%',\n    height: '25vh',\n    backgroundPosition: 'top',\n    backgroundSize: 'cover',\n  },\n});\n\ninterface ImageWrapperProps {\n  src: string;\n  title: string;\n}\n\nconst useStyles = makeStyles(styles);\n\nfunction ImageWrapperC(props: ImageWrapperProps) {\n  const { src = '', title } = props;\n  const classes = useStyles();\n\n  return (\n    <Collapse in={src.length > 8}>{src && <CardMedia className={classes.image} image={src} title={title} />}</Collapse>\n  );\n}\nexport const ImageWrapper = React.memo(ImageWrapperC);\n","import React from 'react';\n\nexport const Chatter = React.lazy(() => import('./Chatter'));\n","import React from 'react';\nimport { Button, DialogActions, DialogContent } from '@material-ui/core';\nimport { InjectedFormProps, reduxForm } from 'redux-form';\nimport { useSelector } from 'react-redux';\n\nimport { createRoomFormModel } from '../../../models/rooms.model';\nimport { FormFieldCheckboxGroup, FormFieldText } from '../../../components/FormComponents';\nimport { ImageWrapper } from '../../../components/ImageWrapper';\nimport { mainSelectors } from '../../../store/main.selectors';\n\nconst validate = (values: any) => {\n  const errors: any = {};\n\n  [createRoomFormModel.roomName.name, createRoomFormModel.maxPlayers.name].forEach(field => {\n    if (!values[field]) {\n      errors[field] = 'Required';\n    }\n  });\n\n  if (!(values[createRoomFormModel.diceType.name] && values[createRoomFormModel.diceType.name].length)) {\n    errors[createRoomFormModel.diceType.name] = 'Select at least one dice';\n  }\n  return errors;\n};\n\ninterface RoomCreateFormProps extends InjectedFormProps {\n  onClose: () => void;\n}\n\nfunction RoomCreateFormC(props: RoomCreateFormProps) {\n  const { handleSubmit, pristine, submitting, onClose, invalid } = props;\n  const form = useSelector(mainSelectors.getFormCreateRoom);\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <ImageWrapper src={form?.roomImage} title=\"Room image\" />\n\n      <DialogContent dividers>\n        <FormFieldText {...createRoomFormModel.roomName} />\n        <FormFieldText {...createRoomFormModel.roomImage} />\n        <FormFieldText {...createRoomFormModel.campaignTitle} />\n        <FormFieldText {...createRoomFormModel.description} />\n        <FormFieldText {...createRoomFormModel.gameMasterAvatar} />\n        <div style={{ width: '50%' }}>\n          <FormFieldText {...createRoomFormModel.maxPlayers} />\n        </div>\n        <FormFieldCheckboxGroup {...createRoomFormModel.diceType} />\n      </DialogContent>\n      <DialogActions>\n        <Button type=\"submit\" color=\"primary\" disabled={invalid || pristine || submitting}>\n          Submit\n        </Button>\n        <Button type=\"button\" onClick={onClose} color=\"primary\">\n          Cancel\n        </Button>\n      </DialogActions>\n    </form>\n  );\n}\n\nexport const RoomCreateForm = reduxForm({\n  form: 'createRoom',\n  validate,\n})(RoomCreateFormC as any) as any;\n","import React from 'react';\nimport { RoomCreateForm } from './components/RoomCreateForm';\n\nimport { IRoomCreateForm } from '../../models/rooms.model';\nimport { FormDialog } from '../../components/FormDialog';\n\nexport interface RoomCreateProps {\n  open: boolean;\n  onClose: () => void;\n  onSubmit: (formValues: IRoomCreateForm) => void;\n  initialValues?: IRoomCreateForm;\n}\n\nexport function RoomCreateC(props: RoomCreateProps) {\n  const { open, onClose, onSubmit, initialValues } = props;\n\n  return (\n    <FormDialog open={open} onClose={onClose} title=\"Create new room\">\n      <RoomCreateForm onClose={onClose} onSubmit={onSubmit} initialValues={initialValues} />\n    </FormDialog>\n  );\n}\n\nexport const RoomCreate = React.memo(RoomCreateC);\n","import { compose } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport { setDisplayName } from 'recompose';\nimport { UserIsAuthenticated } from '../../../utils/router.utils';\n\nexport const enhancedRoomList = compose(\n  // Set component display name (more clear in dev/error tools)\n  setDisplayName('EnhancedRoomList'),\n  // Add props.match\n  withRouter,\n  // Redirect to /login if user is not logged in\n  UserIsAuthenticated\n);\n","import React from 'react';\nimport { Avatar, Grid, ListItem, ListItemAvatar, ListItemText, Typography } from '@material-ui/core';\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\n\nimport { dateUtils } from '../../../utils/date.utils';\nimport { IPlayerProfile, IRoomLog } from '../../../models/rooms.model';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    itemHeader: {\n      width: '40%',\n      paddingRight: theme.spacing(2),\n      boxSizing: 'border-box',\n    },\n    itemContent: {\n      width: '60%',\n      boxSizing: 'border-box',\n    },\n  });\n\nexport interface LogListItemProps extends WithStyles<typeof styles> {\n  profile: IPlayerProfile;\n  log: IRoomLog;\n  children?: any;\n}\n\nfunction LogListItemC(props: LogListItemProps) {\n  const { profile, log, classes, children } = props;\n  const { displayName, photoURL, avatarUrl, characterAvatarUrl, characterName } = profile || {};\n\n  return (\n    <ListItem alignItems=\"flex-start\">\n      <div className={classes.itemHeader}>\n        <ListItemAvatar>\n          <Avatar alt={displayName} src={characterAvatarUrl || avatarUrl || photoURL} />\n        </ListItemAvatar>\n        <ListItemText\n          primary={\n            <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"flex-start\">\n              <Typography component={'span'} variant={'body1'}>\n                {characterName || displayName}\n              </Typography>\n              <Typography component={'span'} variant={'caption'} color={'textSecondary'}>\n                {dateUtils.timeStampToDetailedTime(log.timestamp)}\n              </Typography>\n            </Grid>\n          }\n        />\n      </div>\n      <div className={classes.itemContent}>{children}</div>\n    </ListItem>\n  );\n}\n\nexport const LogsListItem = React.memo(withStyles(styles)(LogListItemC));\n","import React from 'react';\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\nimport { Grid, Typography } from '@material-ui/core';\n\nimport { IRoomLog } from '../../../models/rooms.model';\nimport { diceUtils } from '../../../utils/dice.utils';\n\nconst styles = (theme: Theme) => createStyles({});\n\nexport interface LogDiceThrowProps extends WithStyles<typeof styles> {\n  log: IRoomLog;\n}\n\nfunction LogDiceThrowC(props: LogDiceThrowProps) {\n  const { log } = props;\n\n  const resultSorted = diceUtils.sortObjectWithDiceKey(log.payload?.result || []);\n  return (\n    <Grid container spacing={0}>\n      <Grid item xs={6}>\n        <Typography component={'span'} variant={'caption'} color={'textSecondary'}>\n          log type:\n        </Typography>\n      </Grid>\n      <Grid item xs={6}>\n        <Typography component={'span'} variant={'overline'} color={'secondary'}>\n          {log.type}\n        </Typography>\n      </Grid>\n\n      {Object.keys(resultSorted).map(diceKey => (\n        <React.Fragment key={diceKey}>\n          <Grid item xs={3}>\n            <Typography component={'span'} variant={'caption'} color={'textSecondary'}>\n              {diceKey}\n            </Typography>\n          </Grid>\n          <Grid item xs={9}>\n            <Typography component={'span'} variant={'body1'} color={'secondary'}>\n              {resultSorted[diceKey] && resultSorted[diceKey].join(', ')}\n            </Typography>\n          </Grid>\n        </React.Fragment>\n      ))}\n    </Grid>\n  );\n}\n\nexport const LogDiceThrow = React.memo(withStyles(styles)(LogDiceThrowC));\n","import React from 'react';\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\nimport { Grid, Typography } from '@material-ui/core';\n\nimport { IRoomLog } from '../../../models/rooms.model';\n\nconst styles = (theme: Theme) => createStyles({});\n\nexport interface LogNewPlayerProps extends WithStyles<typeof styles> {\n  log: IRoomLog;\n}\n\nfunction LogNewPlayerC(props: LogNewPlayerProps) {\n  const { log } = props;\n\n  return (\n    <React.Fragment>\n      <Grid container spacing={0}>\n        <Grid item xs={6}>\n          <Typography component={'span'} variant={'caption'} color={'textSecondary'}>\n            log type:\n          </Typography>\n        </Grid>\n        <Grid item xs={6}>\n          <Typography component={'span'} variant={'overline'} color={'secondary'}>\n            {log.type}\n          </Typography>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}\n\nexport const LogNewPlayer = React.memo(withStyles(styles)(LogNewPlayerC));\n","import React from 'react';\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\nimport { Dictionary } from 'react-redux-firebase';\nimport { Divider, List } from '@material-ui/core';\n\nimport { IPlayerProfile, IRoomLog, Log } from '../../../models/rooms.model';\nimport { LogsListItem } from './LogsListItem';\nimport { LogDiceThrow } from './LogDiceThrow';\nimport { LogNewPlayer } from './LogNewPlayer';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n      backgroundColor: theme.palette.background.paper,\n      overflowY: 'scroll',\n    },\n  });\n\nexport interface LogsTimelineProps extends WithStyles<typeof styles> {\n  profiles: Dictionary<IPlayerProfile>;\n  logs: IRoomLog[];\n}\n\nfunction LogsTimelineC(props: LogsTimelineProps) {\n  const { profiles, logs, classes } = props;\n\n  const renderElement = () => {\n    if (!logs || !logs.length) return '';\n    return [...logs].reverse().map((log, id) => (\n      <React.Fragment key={log.timestamp}>\n        {!!id && <Divider variant=\"inset\" component=\"li\" light={true} />}\n        <LogsListItem profile={profiles[log.authorUid]} log={log}>\n          {log.type === Log.DICE_ROLL && log.payload && <LogDiceThrow log={log} />}\n          {log.type === Log.NEW_PLAYER && <LogNewPlayer log={log} />}\n        </LogsListItem>\n      </React.Fragment>\n    ));\n  };\n\n  return <List className={classes.root}>{renderElement()}</List>;\n}\n\nexport const LogsTimeline = React.memo(withStyles(styles)(LogsTimelineC));\n","import React from 'react';\nimport {\n  Divider,\n  ExpansionPanel,\n  ExpansionPanelDetails,\n  ExpansionPanelSummary,\n  Grid,\n  Typography,\n} from '@material-ui/core';\nimport Avatar from '@material-ui/core/Avatar';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport { IPlayerProfile, IRoomLog, Log } from '../../../models/rooms.model';\nimport { LogDiceThrow } from './LogDiceThrow';\nimport { LogNewPlayer } from './LogNewPlayer';\n\nexport interface LogsExpansionProps {\n  profile: IPlayerProfile;\n  logs: IRoomLog[];\n}\n\nfunction LogsExpansionC(props: LogsExpansionProps) {\n  const { logs, profile } = props;\n  const renderlog = (logs: IRoomLog[]) => {\n    return [...logs].reverse().map((log, id) => (\n      <ul key={log.timestamp}>\n        {!!id && <Divider component=\"div\" light={true} />}\n        {log.type === Log.DICE_ROLL && log.payload && <LogDiceThrow log={log} />}\n        {log.type === Log.NEW_PLAYER && <LogNewPlayer log={log} />}\n      </ul>\n    ));\n  };\n\n  return (\n    <ExpansionPanel elevation={0}>\n      <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />} aria-controls=\"panel1a-content\" id=\"panel1a-header\">\n        <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" spacing={2}>\n          <Grid item>\n            <Avatar\n              src={profile.characterAvatarUrl || profile.avatarUrl || profile.photoURL}\n              alt={profile.displayName}\n            />\n          </Grid>\n          <Grid item>\n            <Typography>{profile.characterName || profile.displayName}</Typography>\n          </Grid>\n        </Grid>\n      </ExpansionPanelSummary>\n      <ExpansionPanelDetails>\n        <article>{renderlog(logs)}</article>\n      </ExpansionPanelDetails>\n    </ExpansionPanel>\n  );\n}\n\nexport const LogsExpansion = React.memo(LogsExpansionC);\n","import React from 'react';\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\nimport { Dictionary } from 'react-redux-firebase';\nimport { List } from '@material-ui/core';\n\nimport { IPlayerProfile, IRoomLog } from '../../../models/rooms.model';\nimport { LogsExpansion } from './LogsExpansion';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n      backgroundColor: theme.palette.background.paper,\n      overflowY: 'scroll',\n    },\n  });\n\nexport interface LogsByPlayersProps extends WithStyles<typeof styles> {\n  profiles: Dictionary<IPlayerProfile>;\n  logs: IRoomLog[];\n}\n\nfunction LogsByPlayersC(props: LogsByPlayersProps) {\n  const { profiles, logs, classes } = props;\n\n  const renderElement = () => {\n    return (\n      <React.Fragment>\n        {Object.keys(profiles).map(profileUid => (\n          <LogsExpansion\n            key={profileUid}\n            profile={profiles[profileUid]}\n            logs={logs.filter(log => log.authorUid === profileUid)}\n          />\n        ))}\n      </React.Fragment>\n    );\n  };\n\n  return <List className={classes.root}>{renderElement()}</List>;\n}\n\nexport const LogsByPlayers = React.memo(withStyles(styles)(LogsByPlayersC));\n","import AppBar from '@material-ui/core/AppBar';\nimport Paper from '@material-ui/core/Paper';\nimport React from 'react';\nimport SwipeableViews from 'react-swipeable-views';\nimport { Box, Slide, Tab, Tabs, Typography, useTheme } from '@material-ui/core';\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\nimport { LogsTimeline } from './LogsTimeline';\nimport { useSelector } from 'react-redux';\n\nimport { firestoreSelectors } from '../../../store/firebase/firestore.selectors';\nimport { LogsByPlayers } from './LogsByPlayers';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      backgroundColor: theme.palette.background.paper,\n      width: '100%',\n      height: '100%',\n      position: 'relative' as 'relative',\n      zIndex: 10,\n      overflow: 'hidden',\n    },\n    bar: {\n      borderBottom: '1px solid rgba(0, 0, 0, 0.12)',\n    },\n    tab: {\n      overflowX: 'hidden',\n      height: `calc(100% - ${theme.spacing(6)}px)`,\n      overflowY: 'scroll',\n    },\n    tabContent: {\n      margin: theme.spacing(-2),\n    },\n  });\n\nexport interface LogsTabsProps extends WithStyles<typeof styles> {\n  visible?: boolean;\n}\n\nfunction LogsTabsC(props: LogsTabsProps) {\n  const { classes, visible = true } = props;\n\n  const theme = useTheme();\n  const [value, setValue] = React.useState(0);\n  const profiles = useSelector(firestoreSelectors.selectedRoomPlayers);\n  const logs = useSelector(firestoreSelectors.selectedRoomLogs);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleChangeIndex = index => {\n    setValue(index);\n  };\n\n  return (\n    <Slide direction=\"right\" in={visible}>\n      <Paper className={classes.root} elevation={2}>\n        <AppBar className={classes.bar} position=\"static\" color=\"default\" elevation={0}>\n          <Tabs\n            value={value}\n            onChange={handleChange}\n            indicatorColor=\"secondary\"\n            textColor=\"primary\"\n            variant=\"fullWidth\"\n            aria-label=\"full width tabs example\"\n          >\n            <Tab label=\"Logs Timeline\" {...a11yProps(0)} />\n            <Tab label=\"Players Logs\" {...a11yProps(1)} />\n          </Tabs>\n        </AppBar>\n        <div className={classes.tab}>\n          <SwipeableViews\n            axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n            index={value}\n            onChangeIndex={handleChangeIndex}\n          >\n            <TabPanel value={value} index={0} dir={theme.direction}>\n              <div className={classes.tabContent}>\n                <LogsTimeline profiles={profiles} logs={logs} />\n              </div>\n            </TabPanel>\n            <TabPanel value={value} index={1} dir={theme.direction}>\n              <div className={classes.tabContent}>\n                <LogsByPlayers profiles={profiles} logs={logs} />\n              </div>\n            </TabPanel>\n          </SwipeableViews>\n        </div>\n      </Paper>\n    </Slide>\n  );\n}\n\nexport const LogsTabs = withStyles(styles)(LogsTabsC);\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  dir?: string;\n  index: any;\n  value: any;\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </Typography>\n  );\n}\n\nfunction a11yProps(index: any) {\n  return {\n    id: `full-width-tab-${index}`,\n    'aria-controls': `full-width-tabpanel-${index}`,\n  };\n}\n","import React from 'react';\nimport { Slide } from '@material-ui/core';\n\nimport { LogsTabs } from './components/LogsTabs';\n\nexport interface LogsDashboardProps {\n  visible?: boolean;\n}\n\nfunction LogsDashboardC(props: LogsDashboardProps) {\n  const { visible = true } = props;\n\n  return (\n    <Slide direction=\"left\" in={visible}>\n      <div style={{ position: 'absolute', top: 0, left: 0, height: '100%', width: '100%', zIndex: 10 }}>\n        <LogsTabs />\n      </div>\n    </Slide>\n  );\n}\n\nexport const LogsDashboard = React.memo(LogsDashboardC);\n","import AccountBoxIcon from '@material-ui/icons/AccountBox';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport clsx from 'clsx';\nimport GavelIcon from '@material-ui/icons/Gavel';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport React from 'react';\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\nimport { Grid, GridListTile, GridListTileBar, IconButton, Tooltip } from '@material-ui/core';\n\nimport { IPlayerProfile } from '../../../models/rooms.model';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    tile: {\n      borderRadius: theme.spacing(1),\n      marginRight: theme.spacing(2),\n      maxWidth: theme.spacing(30),\n      overflow: 'hidden',\n      padding: '0 !Important',\n      width: '100%',\n    },\n    title: {\n      color: theme.palette.primary.light,\n    },\n    titleDisable: {\n      color: theme.palette.warning.light,\n    },\n    actionGrid: {\n      position: 'absolute' as 'absolute',\n      zIndex: 10,\n      top: 0,\n      right: 0,\n    },\n    titleBar: {\n      background: 'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\n    },\n  });\n\ninterface PlayerTileProps extends WithStyles<typeof styles> {\n  player: IPlayerProfile;\n  onEdit?: (uid: string) => void;\n}\n\nfunction PlayerTileC(props: PlayerTileProps) {\n  const { classes, player, onEdit } = props;\n\n  return (\n    <GridListTile className={classes.tile}>\n      <img src={player.characterAvatarUrl || player.avatarUrl || player.photoURL} alt={player.displayName} />\n      <GridListTileBar\n        title={player.characterName || player.displayName}\n        classes={{\n          root: classes.titleBar,\n          title: player.connected ? classes.title : classes.titleDisable,\n        }}\n        actionIcon={\n          <Tooltip title={player.connected ? 'Online' : 'Offline'}>\n            <IconButton aria-label={`star ${player.displayName}`}>\n              {player.connected ? (\n                <CheckCircleIcon className={classes.title} />\n              ) : (\n                <HighlightOffIcon className={classes.titleDisable} />\n              )}\n            </IconButton>\n          </Tooltip>\n        }\n      />\n\n      {(player.gameMaster || onEdit) && (\n        <Grid\n          container\n          direction=\"row\"\n          justify=\"flex-end\"\n          alignItems=\"center\"\n          spacing={0}\n          className={classes.actionGrid}\n        >\n          {player.gameMaster && (\n            <Grid item>\n              <Tooltip className={clsx(player.connected ? classes.title : classes.titleDisable)} title={'Game Master'}>\n                <IconButton aria-label={''}>\n                  <GavelIcon />\n                </IconButton>\n              </Tooltip>\n            </Grid>\n          )}\n          {onEdit && (\n            <Grid item>\n              <Tooltip\n                className={clsx(player.connected ? classes.title : classes.titleDisable)}\n                title={'Edit character'}\n              >\n                <IconButton onClick={() => onEdit(player.uid)} aria-label={`edit character`}>\n                  <AccountBoxIcon />\n                </IconButton>\n              </Tooltip>\n            </Grid>\n          )}\n        </Grid>\n      )}\n    </GridListTile>\n  );\n}\n\nexport const PlayerTile = React.memo(withStyles(styles)(PlayerTileC));\n","import React from 'react';\nimport { Button, DialogActions, DialogContent } from '@material-ui/core';\nimport { InjectedFormProps, reduxForm } from 'redux-form';\nimport { useSelector } from 'react-redux';\n\nimport { FormFieldText } from '../../../components/FormComponents';\nimport { ImageWrapper } from '../../../components/ImageWrapper';\nimport { mainSelectors } from '../../../store/main.selectors';\nimport { playersCharacterFormModel } from '../../../models/rooms.model';\n\nconst validate = (values: any) => {\n  const errors: any = {};\n\n  Object.keys(playersCharacterFormModel).forEach(fieldKey => {\n    if (\n      playersCharacterFormModel[fieldKey].maxLength &&\n      values[playersCharacterFormModel[fieldKey].name]?.length > playersCharacterFormModel[fieldKey].maxLength\n    ) {\n      errors[fieldKey] = `Max length ${playersCharacterFormModel[fieldKey].maxLength} exceeded`;\n    }\n  });\n\n  return errors;\n};\n\ninterface PlayerProfileFormProps extends InjectedFormProps {\n  onClose: () => void;\n}\n\nfunction PlayerProfileFormC(props: PlayerProfileFormProps) {\n  const { handleSubmit, pristine, submitting, onClose, invalid } = props;\n  const form = useSelector(mainSelectors.getFormPlayerProfile);\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <ImageWrapper src={form.characterAvatarUrl} title=\"Character image\" />\n      <DialogContent dividers>\n        <FormFieldText {...playersCharacterFormModel.characterName} />\n        <FormFieldText {...playersCharacterFormModel.characterAvatarUrl} />\n        <FormFieldText {...playersCharacterFormModel.characterDescription} />\n        <FormFieldText {...playersCharacterFormModel.notes} />\n      </DialogContent>\n      <DialogActions>\n        <Button type=\"submit\" color=\"primary\" disabled={invalid || pristine || submitting}>\n          Submit\n        </Button>\n        <Button type=\"button\" onClick={onClose} color=\"primary\">\n          Cancel\n        </Button>\n      </DialogActions>\n    </form>\n  );\n}\n\nexport const PlayerProfileForm = reduxForm({\n  form: 'playerProfile',\n  validate,\n})(PlayerProfileFormC as any) as any;\n","import React from 'react';\n\nimport { Dictionary, useFirestore } from 'react-redux-firebase';\nimport { FirestoreCollection } from '../../../models/firebase.model';\nimport { firestoreSelectors } from '../../../store/firebase/firestore.selectors';\nimport { FormDialog } from '../../../components/FormDialog';\nimport { IPlayerProfile, IRoomPlayerProfileForm } from '../../../models/rooms.model';\nimport { PlayerProfileForm } from './PlayerProfileForm';\nimport { roomsSelectors } from '../../../store/rooms/rooms.selectors';\nimport { useSelector } from 'react-redux';\n\nexport interface PlayerProfileProps {\n  open: boolean;\n  onClose: () => void;\n  profileUid: string;\n}\n\nexport function PlayerProfile(props: PlayerProfileProps) {\n  const { open, onClose, profileUid } = props;\n\n  const firestore = useFirestore();\n  const selectedRoomUid = useSelector(roomsSelectors.selectedRoomUid);\n  const selectedRoom = useSelector(firestoreSelectors.selectedRoom);\n\n  const onSubmit = (formValues: IRoomPlayerProfileForm) => {\n    Object.keys(formValues).forEach(key => (formValues as any)[key] === undefined && delete (formValues as any)[key]);\n\n    const players: Dictionary<IPlayerProfile> = { ...selectedRoom.players, [profileUid]: formValues };\n    firestore\n      .doc(`${FirestoreCollection.ROOMS}/${selectedRoomUid}`)\n      .update({ players })\n      .then(room => {\n        onClose();\n      })\n      .catch((e: boolean) => {\n        // TODO implement error message\n        console.log({ e });\n      });\n  };\n\n  return (\n    <FormDialog open={open} onClose={onClose} title=\"Edit character\">\n      {selectedRoom?.players[profileUid] && (\n        <PlayerProfileForm onClose={onClose} onSubmit={onSubmit} initialValues={selectedRoom.players[profileUid]} />\n      )}\n    </FormDialog>\n  );\n}\n","import React, { useState } from 'react';\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\nimport { GridList, Grow, Slide } from '@material-ui/core';\nimport { useSelector } from 'react-redux';\n\nimport { firestoreSelectors } from '../../store/firebase/firestore.selectors';\nimport { PlayerTile } from './components/PlayerTile';\nimport { IPlayerProfile } from '../../models/rooms.model';\nimport { PlayerProfile } from './components/PlayerProfile';\nimport { firebaseSelectors } from '../../store/firebase/firebase.selectors';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'space-around',\n      overflow: 'hidden',\n      backgroundColor: theme.palette.background.paper,\n    },\n    gridList: {\n      height: theme.spacing(20),\n      width: '100%',\n      flexWrap: 'nowrap',\n      transform: 'translateZ(0)',\n    },\n  });\n\ninterface PlayersProps extends WithStyles<typeof styles> {\n  visible?: boolean;\n}\n\nfunction PlayersC(props: PlayersProps) {\n  const { classes, visible } = props;\n\n  const players = useSelector(firestoreSelectors.selectedRoomPlayers);\n  const usersProfiles = useSelector(firestoreSelectors.usersProfiles);\n  const userProfile = useSelector(firebaseSelectors.userProfile);\n  const gameMasterUid = useSelector(firestoreSelectors.selectedRoomGameMasterUid);\n  const [editProfile, setEditProfile] = useState<string>(null);\n\n  const renderPlayers = () =>\n    Object.keys(players).map((playerUid, id) => {\n      const player: IPlayerProfile = { ...players[playerUid], connected: usersProfiles[playerUid]?.connected };\n\n      return (\n        <Grow in key={playerUid} timeout={1000 * id + 300}>\n          <PlayerTile\n            player={player}\n            onEdit={\n              (userProfile.uid === gameMasterUid || userProfile.uid === playerUid) && (uid => setEditProfile(uid))\n            }\n          />\n        </Grow>\n      );\n    });\n\n  return (\n    <React.Fragment>\n      {players && (\n        <Slide direction=\"up\" in={visible}>\n          <GridList className={classes.gridList} cols={2.5}>\n            {renderPlayers()}\n          </GridList>\n        </Slide>\n      )}\n\n      <PlayerProfile open={!!editProfile} onClose={() => setEditProfile(null)} profileUid={editProfile} />\n    </React.Fragment>\n  );\n}\n\nexport const Players = withStyles(styles)(PlayersC);\n","import React from 'react';\nimport SpeedDial from '@material-ui/lab/SpeedDial';\nimport SpeedDialAction from '@material-ui/lab/SpeedDialAction';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\n\nconst styles = (theme: Theme) => createStyles({});\ntype extend = WithStyles<typeof styles>;\n\nexport interface ISpeedDialAction {\n  icon: React.ReactElement;\n  name: string;\n  callback?: (callback: () => void) => void;\n}\n\ninterface SpeedDialCProps extends extend {\n  direction?: 'up' | 'down' | 'left' | 'right';\n  actions: ISpeedDialAction[];\n}\n\nfunction SpeedDialC(props: SpeedDialCProps) {\n  const { direction = 'left', actions } = props;\n\n  const [open, setOpen] = React.useState(false);\n  const handleClose = () => setOpen(false);\n  const handleOpen = () => setOpen(true);\n\n  return (\n    <SpeedDial\n      ariaLabel=\"SpeedDial example\"\n      icon={<SpeedDialIcon />}\n      onClose={handleClose}\n      onOpen={handleOpen}\n      open={open}\n      direction={direction}\n    >\n      {actions.map(action => (\n        <SpeedDialAction\n          key={action.name}\n          icon={action.icon}\n          tooltipTitle={action.name}\n          onClick={() => (action.callback ? action.callback(handleClose) : handleClose())}\n        />\n      ))}\n    </SpeedDial>\n  );\n}\n\nexport const SpeedDialWrapper =  React.memo(withStyles(styles)(SpeedDialC));\n","import React from 'react';\nimport { useFirestore } from 'react-redux-firebase';\nimport { useSelector } from 'react-redux';\n\nimport { FirestoreCollection } from '../models/firebase.model';\nimport { firestoreSelectors } from '../store/firebase/firestore.selectors';\nimport { IRoomCreateForm } from '../models/rooms.model';\nimport { RoomCreate } from '../modules/RoomCreate/RoomCreate';\nimport { roomsSelectors } from '../store/rooms/rooms.selectors';\n\ninterface RoomCreateInRoomProps {\n  open: boolean;\n  onClose: () => void;\n}\n\nexport function RoomCreateInRoom(props: RoomCreateInRoomProps) {\n  const { open, onClose } = props;\n  const firestore = useFirestore();\n  const selectedRoomFormData = useSelector(firestoreSelectors.selectedRoomFormData) as IRoomCreateForm;\n  const selectedRoomUid = useSelector(roomsSelectors.selectedRoomUid) as string;\n\n  const handleSubmit = (formValues: IRoomCreateForm) => {\n    Object.keys(formValues).forEach(key => (formValues as any)[key] === undefined && delete (formValues as any)[key]);\n\n    firestore\n      .doc(`${FirestoreCollection.ROOMS}/${selectedRoomUid}`)\n      .update({ ...formValues })\n      .then(room => {\n        onClose();\n      })\n      .catch((e: boolean) => {\n        // TODO implement error message\n        console.log({ e });\n      });\n  };\n\n  return <RoomCreate open={open} onClose={onClose} onSubmit={handleSubmit} initialValues={selectedRoomFormData} />;\n}\n","import EditIcon from '@material-ui/icons/Edit';\nimport ForumIcon from '@material-ui/icons/Forum';\nimport GroupIcon from '@material-ui/icons/Group';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport React, { useState } from 'react';\nimport ShareIcon from '@material-ui/icons/Share';\nimport { Alert } from '@material-ui/lab';\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\nimport { Snackbar } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { ISpeedDialAction, SpeedDialWrapper } from '../../../../components/SpeedDial';\nimport { mainSelectors } from '../../../../store/main.selectors';\nimport { roomsActions } from '../../../../store/rooms/rooms.actions';\nimport { roomsSelectors } from '../../../../store/rooms/rooms.selectors';\nimport { RoomCreateInRoom } from '../../../../containers/RoomCreateInRoom';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    snackbar: {\n      top: theme.spacing(8),\n    },\n  });\ninterface RoomSpeedDialCProps extends WithStyles<typeof styles> {}\n\nfunction RoomSpeedDialC(props: RoomSpeedDialCProps) {\n  const { classes } = props;\n  const dispatch = useDispatch();\n\n  const isGameMasterOfSelectedRoom = useSelector(mainSelectors.isGameMasterOfSelectedRoom);\n  const drawerOpened = useSelector(roomsSelectors.drawerOpened);\n  const chatOpened = useSelector(roomsSelectors.chatOpened);\n  const playersOpened = useSelector(roomsSelectors.playersOpened);\n  const [showRoomForm, setShowRoomForm] = useState(false);\n  const [snackbarConfig, setSnackbarConfig] = React.useState<{\n    type: 'success' | 'error';\n    open: boolean;\n    text: string;\n  }>({\n    type: 'success',\n    open: false,\n    text: '',\n  });\n\n  function copyRoomUrlToClipboard(): void {\n    navigator.permissions.query({ name: 'clipboard-write' as any }).then(result => {\n      if (result.state === 'granted' || result.state === 'prompt') {\n        navigator.clipboard.writeText(window.location.href).then(\n          () => setSnackbarConfig({ type: 'success', open: true, text: 'Room URL copied to clipboard!' }),\n          () => setSnackbarConfig({ type: 'error', open: true, text: 'Upss.. there was an error' })\n        );\n      }\n    });\n  }\n\n  const actionsAdditional: ISpeedDialAction[] = isGameMasterOfSelectedRoom\n    ? [\n        {\n          icon: <EditIcon />,\n          name: 'Edit Room Description',\n          callback: cb => setShowRoomForm(true),\n        },\n      ]\n    : [];\n  const actions: ISpeedDialAction[] = [\n    {\n      icon: drawerOpened ? <NavigateBeforeIcon /> : <NavigateNextIcon />,\n      name: drawerOpened ? 'Hide Nav' : 'Show Nav',\n      callback: cb => dispatch(roomsActions.setDrawerOpenValue(!drawerOpened)),\n    },\n    {\n      icon: <ForumIcon />,\n      name: chatOpened ? 'Hide chat' : 'Show Chat',\n      callback: cb => dispatch(roomsActions.setChatOpenValue(!chatOpened)),\n    },\n    {\n      icon: <GroupIcon />,\n      name: playersOpened ? 'Hide players' : 'Show players',\n      callback: cb => dispatch(roomsActions.setPlayersOpenValue(!playersOpened)),\n    },\n    {\n      icon: <ShareIcon />,\n      name: 'Copy Room Url',\n      callback: cb => copyRoomUrlToClipboard(),\n    },\n    ...actionsAdditional,\n  ];\n\n  return (\n    <React.Fragment>\n      <SpeedDialWrapper actions={actions} direction={'right'} />\n      <Snackbar\n        className={classes.snackbar}\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n        open={snackbarConfig.open}\n        autoHideDuration={6000}\n        onClose={() => setSnackbarConfig({ ...snackbarConfig, open: false })}\n      >\n        <Alert onClose={() => setSnackbarConfig({ ...snackbarConfig, open: false })} severity={snackbarConfig.type}>\n          {snackbarConfig.text}\n        </Alert>\n      </Snackbar>\n      <RoomCreateInRoom open={showRoomForm} onClose={() => setShowRoomForm(false)} />\n    </React.Fragment>\n  );\n}\n\nexport const RoomSpeedDialWrapper = withStyles(styles)(RoomSpeedDialC);\n","import clsx from 'clsx';\nimport React from 'react';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport { useSelector } from 'react-redux';\n\nimport { Chatter } from '../../../../modules/Chatter';\nimport { DiceCard } from '../../../../modules/DiceCard/DiceCard';\nimport { DiceDashboard } from '../../../../modules/DiceDashboard/DiceDashboard';\nimport { firestoreSelectors } from '../../../../store/firebase/firestore.selectors';\nimport { LogsDashboard } from '../../../../modules/LogsDashboard/LogsDashboard';\nimport { mainSelectors } from '../../../../store/main.selectors';\nimport { Players } from '../../../../modules/Players/Players';\nimport { RoomSpeedDialWrapper } from './RoomSpeedDial';\nimport { roomsSelectors } from '../../../../store/rooms/rooms.selectors';\n\nconst styles = (theme: Theme) => ({\n  root: {\n    position: 'relative' as 'relative',\n    margin: theme.spacing(-6, -4),\n    height: `calc(100vh - ${theme.spacing(10)}px)`,\n    padding: theme.spacing(1, 1, 0, 1),\n  },\n  mainGrid: {\n    display: 'grid',\n    gridTemplateColumns: '1fr auto',\n    gridTemplateRows: '1fr auto auto',\n    columnGap: theme.spacing(2) + 'px',\n    rowGap: theme.spacing(2) + 'px',\n    width: '100%',\n    height: '100%',\n  },\n  gridItemLogs: {\n    position: 'relative' as 'relative',\n    gridColumn: '2',\n    gridRow: '1',\n  },\n  gridItemChatter: {\n    position: 'relative' as 'relative',\n    gridColumn: '2',\n    gridRow: '2 / span 2',\n  },\n  gridItemDiceCard: {\n    position: 'relative' as 'relative',\n    gridColumn: '1 / span 2',\n    gridRow: '1 / span 2',\n  },\n  gridItemPlayers: {\n    position: 'relative' as 'relative',\n    gridColumn: '1',\n    gridRow: '3',\n  },\n  speedDial: {\n    position: 'absolute' as 'absolute',\n    bottom: theme.spacing(1),\n    left: theme.spacing(1),\n    zIndex: 10,\n  },\n  diceDashboard: {\n    position: 'absolute' as 'absolute',\n    zIndex: 1000,\n    top: theme.spacing(1),\n    left: theme.spacing(1),\n  },\n\n  maxHeight: {\n    maxHeight: '3000px',\n    transition: 'max-height 225ms cubic-bezier(0, 0, 0.2, 1) 0ms',\n  },\n  noHeight: {\n    maxHeight: 0,\n  },\n});\n\nconst useStyles = makeStyles(styles);\n\nexport function RoomView() {\n  const classes = useStyles();\n\n  const playersOpened = useSelector(roomsSelectors.playersOpened);\n  const chatOpened = useSelector(roomsSelectors.chatOpened);\n  const diceRolling = useSelector(roomsSelectors.diceRolling);\n  const selectedRoom = useSelector(firestoreSelectors.selectedRoom);\n\n  const isUserARoomPlayerOrGameMaster = useSelector(mainSelectors.isUserARoomPlayerOrGameMaster);\n\n  const diceCardFullHeight = !playersOpened || !selectedRoom;\n\n  return (\n    <section className={classes.root}>\n      <div className={classes.mainGrid}>\n        <div className={classes.gridItemLogs}>\n          <LogsDashboard visible={!diceRolling && !!selectedRoom}/>\n        </div>\n\n        <div className={classes.gridItemDiceCard}>\n          <DiceCard />\n\n          <nav className={classes.diceDashboard}>\n            <DiceDashboard\n              visible={!diceRolling && !!selectedRoom && isUserARoomPlayerOrGameMaster}\n              room={selectedRoom}\n            />\n          </nav>\n\n          <nav className={classes.speedDial}>\n            <RoomSpeedDialWrapper />\n          </nav>\n        </div>\n\n        <div className={classes.gridItemChatter}>\n          <Chatter visible={chatOpened && !diceRolling && isUserARoomPlayerOrGameMaster} />\n        </div>\n\n        <div className={classes.gridItemPlayers}>\n          <div className={clsx(classes.maxHeight, diceCardFullHeight && classes.noHeight)}>\n            <Players visible={!diceCardFullHeight} />\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n","import { enhancedRoomList } from './RoomPage.enhancer';\nimport { RoomC } from './RoomPage';\n\nexport default enhancedRoomList(RoomC);\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useFirestore } from 'react-redux-firebase';\n\nimport { chatsActions } from '../../../store/chats/chats.actions';\nimport { firebaseSelectors } from '../../../store/firebase/firebase.selectors';\nimport { FirestoreCollection } from '../../../models/firebase.model';\nimport { firestoreSelectors } from '../../../store/firebase/firestore.selectors';\nimport { locationActions } from '../../../store/location/location.actions';\nimport { LocationMatch } from '../../../store/location/location.model';\nimport { locationSelectors } from '../../../store/location/location.selectors';\nimport { roomsActions } from '../../../store/rooms/rooms.actions';\nimport { roomsSelectors } from '../../../store/rooms/rooms.selectors';\nimport { DiceServiceContextC } from '../../../contexts/DiceService.context';\nimport { RoomView } from './components/RoomPageView';\nimport { IPlayerProfile, IRoomLog, Log } from '../../../models/rooms.model';\n\n//\n\nexport interface RoomListProps {\n  match: LocationMatch;\n}\n\nexport function RoomC(props: RoomListProps) {\n  const { match } = props;\n\n  const dispatch = useDispatch();\n  const firestore = useFirestore();\n\n  const selectedRoomData = useSelector(firestoreSelectors.selectedRoom);\n  const selectedRoomUid = useSelector(roomsSelectors.selectedRoomUid);\n  const storeLocationMatch = useSelector(locationSelectors.match);\n  const userProfile = useSelector(firebaseSelectors.userProfile);\n\n  /**\n   * Effects logic\n   */\n  function onChangeSetLocationMatch(): void {\n    if (JSON.stringify(match) !== JSON.stringify(storeLocationMatch)) {\n      dispatch(locationActions.matchChange(match));\n    }\n    dispatch(roomsActions.setSelectedRoom((storeLocationMatch.params as any)['roomId']));\n  }\n  function onUnmountSetSelectedRoomToNull(): void {\n    dispatch(roomsActions.setSelectedRoom(null));\n  }\n  function onChangeSetSelectedChat(): void {\n    dispatch(chatsActions.setSelectedChat(selectedRoomData?.chatUid || null));\n  }\n  function onEnterTheRoomAddUserToPlayers(): void {\n    if (!selectedRoomData) return;\n\n    if (selectedRoomData?.maxPlayers <= Object.keys(selectedRoomData.players).length) {\n      // TODO toast message\n      return;\n    }\n    if (!selectedRoomData?.players || !userProfile.uid || selectedRoomData.gameMasterUid === userProfile.uid) return;\n    if (selectedRoomData.players[userProfile.uid]) return;\n\n    const documentRef = firestore.doc(`${FirestoreCollection.ROOMS}/${selectedRoomUid}`);\n    firestore.runTransaction(t => {\n      return t\n        .get(documentRef)\n        .then(doc => {\n          const log: IRoomLog = { authorUid: userProfile.uid, timestamp: Date.now(), type: Log.NEW_PLAYER };\n          const logs = [...doc.data().logs, log];\n          const player: IPlayerProfile = {\n            displayName: userProfile.displayName,\n            email: userProfile.email,\n            photoURL: userProfile.photoURL,\n            uid: userProfile.uid,\n          };\n          const players = { ...doc.data().players, [userProfile.uid]: player };\n          const playersUid = [...doc.data().playersUid, userProfile.uid];\n          return t.update(documentRef, { logs, players, playersUid });\n        })\n        .catch((err: any) => {\n          // TODO: add toast message\n          // TRANSACTION_FAILURE action dispatched\n          console.log('Transaction failure:', err);\n        });\n    });\n  }\n\n  /**\n   * Effects\n   */\n  useEffect(() => onChangeSetLocationMatch());\n\n  useEffect(() => {\n    onEnterTheRoomAddUserToPlayers();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedRoomUid, selectedRoomData?.createdAt, userProfile.uid]);\n\n  useEffect(() => {\n    return () => onUnmountSetSelectedRoomToNull();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    onChangeSetSelectedChat();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedRoomData?.chatUid]);\n\n  return (\n    <React.Fragment>\n      {selectedRoomUid &&\n        [selectedRoomUid].map(uid => (\n          <DiceServiceContextC key={uid as string}>\n            <RoomView />\n          </DiceServiceContextC>\n        ))}\n    </React.Fragment>\n  );\n}\n"],"sourceRoot":""}