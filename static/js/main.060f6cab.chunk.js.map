{"version":3,"sources":["services/store.service.ts","services/dice.service.ts","utils/dice.utils.ts","contexts/DiceService.context.tsx","store/chats/chats.reducer.ts","store/location/location.reducer.ts","store/rooms/rooms.reducer.ts","store/main.ts","config/store.config.ts","models/rooms.model.ts","store/location/location.selectors.ts","store/chats/chats.selectors.ts","store/chats/chats.actions.ts","store/chats/chats.model.ts","store/location/location.model.ts","models/paths.ts","modules/ChatList/components/ChatListElements.tsx","modules/ChatList/ChatList.tsx","store/main.selectors.ts","components/Loader.tsx","store/location/location.actions.ts","store/rooms/rooms.actions.ts","components/FormComponents.tsx","store/firebase/firebase.selectors.ts","utils/text.utils.ts","utils/date.utils.ts","modules/DiceDashboard/components/DiceDashboardForm.tsx","modules/DiceDashboard/components/DiceDashboardResult.tsx","modules/DiceDashboard/DiceDashbard.tsx","config/dice.config.ts","modules/DiceCard/DiceCard.tsx","store/rooms/rooms.model.ts","models/firebase.model.ts","queries/chat.query.ts","queries/profile.query.ts","queries/rooms.query.ts","containers/WhenAuthenticated.tsx","containers/Core.tsx","routes/ChatList/index.ts","containers/ProfileAvatar.tsx","components/Ornament.tsx","layouts/Header/Header.tsx","components/LoaderScreen.tsx","layouts/Navigator/components/NavigatorItem.tsx","containers/RoomCard.tsx","layouts/Navigator/Navigator.tsx","styles/theme.styles.ts","layouts/NavBar.tsx","layouts/CoreLayout.tsx","modules/AppStats/AppStats.tsx","routes/Home/components/HomeWrapper.tsx","queries/app.query.ts","routes/Home/HomePage.tsx","routes/Room/index.ts","routes/RoomList/index.ts","routes/index.tsx","config/firebase.config.ts","App.tsx","serviceWorker.ts","index.tsx","config/main.config.ts","store/rooms/rooms.selectors.ts","models/dice.model.ts","store/firebase/firestore.selectors.ts"],"names":["StoreService","store","takeUntil$","Subject","_store$","ReplaySubject","_storeUnsubscribeFn","this","subscribe","next","getState","store$","pipe","map","state","form","diceSetForm","firestore","data","selectedRoom","filter","room","getSelectedRoomData$","logs","getSelectedRoomDataLogs$","pop","log","distinctUntilChanged","a","b","timestamp","firebase","profile","action","dispatch","instance","asObservable","DiceService","diceThrow$","diceBeforeThrow$","diceThrowResult$","roomUid","storeService","getInstance","createSubscriptions","setDiceRolling","takeUntil","diceThrow","emit","firestoreAddNewThrow","performDiceThrowWhenNewDiceThrowLogAppears","diceRolling","roomsActions","diceThrowResult","payload","documentRef","doc","FirestoreCollection","ROOMS","runTransaction","t","get","then","newLog","authorUid","uid","Date","now","toString","type","Log","DICE_ROLL","update","err","console","getLastRoomLogOnChange$","withLatestFrom","getUserProfile$","getDiceSetForm","values","JSON","stringify","dices","Object","keys","diceName","dice","length","join","diceSetToString","DiceServiceContext","React","createContext","DiceServiceContextC","children","useFirestore","diceService","useSelector","firebaseSelectors","userProfile","roomsSelectors","selectedRoomUid","useEffect","hostDestroyed","Provider","value","initialState","selectedChat","chatsReducer","ChatsAction","SELECTED","match","params","isExact","path","url","locationReducer","LocationAction","MATCH_CHANGE","drawerOpened","chatOpened","playersOpened","roomsReducer","RoomsAction","SET_DRAWER_OPEN_VALUE","SET_CHAT_OPEN_VALUE","SET_PLAYERS_OPEN_VALUE","SET_DICE_ROLLING","combineReducers","firebaseReducer","enhancers","window","location","hostname","devToolsExtension","__REDUX_DEVTOOLS_EXTENSION__","push","middleware","thunk","withExtraArgument","getFirebase","getFirestore","module","createStore","chats","rooms","formReducer","asyncReducers","compose","applyMiddleware","configureStore","___INITIAL_STATE__","authError","createRoomFormModel","roomName","name","label","fullWidth","description","multiline","campaignTitle","roomImage","gameMasterAvatar","maxPlayers","InputProps","inputProps","min","max","diceType","options","Dice","D4","D6","D8","D10","D12","D20","D100","d4","d6","d8","d10","d12","d20","d100","locationSelectors","chatsSelectors","profilesUidFromSelectedChat","userChats","players","chatsActions","setSelectedChat","RouterPath","ChatListType","ChatListElements","memo","withStyles","theme","createStyles","root","width","backgroundColor","palette","background","paper","height","overflowY","item","cursor","props","classes","onChatClick","List","className","chatId","id","Grow","key","in","timeout","ListItem","onClick","selected","button","dense","alignItems","ListItemAvatar","Avatar","firstLettersJoined","ListItemText","primary","secondary","timeStampToFormattedDate","createdAt","ChatList","maxWidth","margin","overflow","searchBar","borderBottom","searchInput","fontSize","typography","block","display","addUser","marginRight","spacing","contentWrapper","showSearchBar","viewType","CARD","firestoreSelectors","useDispatch","Paper","AppBar","position","color","elevation","Toolbar","Grid","container","xs","TextField","placeholder","disableUnderline","mainSelectors","getAllNeededPlayersUid","selectedRoomPlayers","selectedChatPlayers","v","i","indexOf","isGameMasterOfSelectedRoom","gameMaster","getFormCreateRoom","createRoom","isUserARoomPlayerOrGameMaster","Loader","flexDirection","justifyContent","zIndex","left","top","progress","svg","style","src","process","alt","locationActions","matchChange","setSelectedRoom","setDrawerOpenValue","setChatOpenValue","setPlayersOpenValue","useStyles","makeStyles","formField","marginBottom","sliderFormField","marginLeft","FormFieldHelperText","touched","error","FormFieldText","component","input","meta","invalid","custom","variant","helperText","FormFieldCheckboxGroup","htmlFor","native","control","checked","onChange","inputValue","checkboxesFormControls","index","includes","event","arr","target","splice","row","FormFieldSlider","valuetext","inputRest","labelPlacement","defaultValue","getAriaValueText","aria-labelledby","valueLabelDisplay","step","marks","e","isRequesting","status","requesting","every","auth","authenticatingSelector","isInitializing","isLoaded","isAuthenticated","isEmpty","userConnected","connected","applicationStats","sentence","split","word","charAt","substring","toUpperCase","time","dayjs","format","inputSlider","paddingRight","minWidth","DiceDashboardForm","reduxForm","initialValues","onSubmit","preventDefault","DiceDashboardResult","throwResult","resultObject","diceSet","forEach","result","Typography","renderResultItem","DiceDashboard","details","content","flex","cover","playIcon","clickable","visible","destroyed$","useContext","useState","setThrowResult","Card","clsx","CardContent","Collapse","CardMedia","image","title","diceDefaultConfig","idCanvas","idLabel","idSet","idSelectorDiv","idInfoDiv","useTrueRandom","useShadows","whiteDice","noresult","DiceCard","diceCanvas","grabbing","canvasRef","useRef","diceContainerEl","diceInitialized","setDiceInitialized","mouseDown","setMouseDown","canvasWidth","current","getBoundingClientRect","timer","dice_initialize","diceSet$","handleDiceSetFormChanges$","onMouseDown","isDown","ref","onMouseUp","chatsQuery","uidNonEmptyArray","collection","CHATS","where","storeAs","profileQuery","getProfilesByUid","uids","roomsQuery","DocUid","WhenAuthenticated","useFirebase","uniqProfilesUid","updateUserStatus","USERS","onDisconnect","useFirebaseConnect","useFirestoreConnect","Fragment","Core","ChatListLazy","lazy","CHATS_PATH_ID","CHATS_PATH","ProfileAvatar","iconButtonAvatar","padding","avatarSize","border","main","history","useHistory","anchorEl","setAnchorEl","IconButton","currentTarget","avatarUrl","photoURL","displayName","keepMounted","open","Boolean","onClose","MenuItem","logout","HOME_PATH","login","provider","ROOMS_PATH","alert","message","Ornament","ornament","backgroundImage","backgroundRepeatX","backgroundRepeatY","backgroundSize","vartical","Header","secondaryBar","menuButton","link","textDecoration","common","white","borderColor","bottom","opacity","avatar","onDrawerToggle","Hidden","smUp","aria-label","LoaderScreen","visibility","transitionDelay","transition","isAuthenticating","Fade","NavigatorItem","paddingTop","paddingBottom","itemCategoryWrapper","minHeight","itemCategory","itemCategoryAbsolute","itemActiveItem","itemPrimary","itemIcon","expansionPanel","borderRadius","expansionPanelSummary","expansionPanelSummaryContainer","expandIcon","divider","boxShadow","icon","text","navLink","active","expandable","defaultExpanded","setNavLink","to","ExpansionPanel","ExpansionPanelSummary","aria-controls","ListItemIcon","ExpansionPanelDetails","RoomCard","cards","media","gutterBottom","Navigator","logo","other","locationPath","selectedRoomData","Drawer","ROOMS_PATH_ID","disablePadding","EMBEDDED","ROOM_PATH","createMuiTheme","light","dark","default","fontFamily","h5","fontWeight","letterSpacing","shape","MuiTab","disableRipple","mixins","toolbar","overrides","MuiDrawer","MuiButton","textTransform","contained","MuiTabs","indicator","borderTopLeftRadius","borderTopRightRadius","breakpoints","up","MuiIconButton","MuiTooltip","tooltip","MuiDivider","MuiListItemText","fontWeightMedium","MuiListItemIcon","MuiAvatar","themeFn","styles","drawer","flexShrink","NavBar","mobileOpen","implementation","PaperProps","handleDrawerToggle","xsDown","Copyright","align","Link","href","getFullYear","lineLoader","app","appWhenAuth","footer","CoreLayout","setMobileOpen","ThemeProvider","CssBaseline","Slide","direction","LinearProgress","AppStats","textAlign","lineHeight","appStats","statsView","diceThrows","justify","stat","cssGrid","gridTemplateColumns","gridTemplateRows","rowGap","columnGap","cssItem1","gridColumn","gridRow","cssItem2","mainInfoCard","diceCard","diceDashboard","right","HomeWrapper","showDiceCard","setShowDiceCard","appQuery","HomePage","storeLocationMatch","RoomLazy","Room","RoomListLazy","RoomList","ROOM_CREATE_PATH","backdrop","CreateRoutes","fallback","Backdrop","exact","settings","reactReduxFirebaseProps","firebaseApp","config","useFirestoreForProfile","createFirestoreInstance","App","prefersDarkMode","useMediaQuery","useMemo","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","version","env","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","getChat","selectedRoomFormData","userRoomsAsGameMaster","userRoomsAsPlayer","allUserRoomsUid","usersProfiles","p","selectedRoomGameMasterProfile"],"mappings":"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","file":"static/js/main.060f6cab.chunk.js","sourcesContent":["import { Observable, ReplaySubject, Subject } from 'rxjs';\nimport {AnyAction, Store} from 'redux';\n\nimport { store } from '../config/store.config';\nimport { AppState, IDiceSetForm } from '../store/main';\nimport { IProfile, IRoom, IRoomLog } from '../models/rooms.model';\nimport { distinctUntilChanged, filter, map } from 'rxjs/operators';\n\nexport class StoreService {\n  private static instance: StoreService | null;\n\n  public store: Store = store;\n\n  private readonly takeUntil$ = new Subject();\n  private readonly _store$ = new ReplaySubject<AppState>(1);\n  private readonly _storeUnsubscribeFn: Function;\n\n  private constructor() {\n    this._storeUnsubscribeFn = this.store.subscribe(() => {\n      this._store$.next(this.store.getState());\n    });\n  }\n\n  public get store$(): Observable<AppState> {\n    return this._store$.asObservable();\n  }\n\n  public getDiceSetForm(): Observable<IDiceSetForm> {\n    return this.store$.pipe(map(state => state.form.diceSetForm));\n  }\n\n  public getSelectedRoomData$(): Observable<IRoom> {\n    return this.store$.pipe(\n      map(state => state.firestore.data.selectedRoom),\n      filter(room => !!room)\n    ) as Observable<IRoom>;\n  }\n\n  public getSelectedRoomDataLogs$(): Observable<Array<IRoomLog>> {\n    return this.getSelectedRoomData$().pipe(map(room => room.logs));\n  }\n\n  public getLastRoomLogOnChange$(): Observable<IRoomLog> {\n    return this.getSelectedRoomDataLogs$().pipe(\n      map(logs => [...logs].pop()),\n      // @ts-ignore\n      filter(log => !!log),\n      distinctUntilChanged((a, b) => a.timestamp === b.timestamp)\n    ) as Observable<IRoomLog>;\n  }\n\n  public getUserProfile$(): Observable<IProfile> {\n    return this.store$.pipe(map(state => state.firebase.profile));\n  }\n\n  public dispatch(action: AnyAction): AnyAction {\n    return this.store.dispatch(action);\n  }\n\n  public hostDestroyed(): void {\n    this.takeUntil$.next();\n    this._storeUnsubscribeFn();\n    StoreService.instance = null;\n  }\n\n  static getInstance(): StoreService {\n    if (!StoreService.instance) {\n      StoreService.instance = new StoreService();\n    }\n\n    return StoreService.instance;\n  }\n}\n","import { Observable, ReplaySubject, Subject } from 'rxjs';\nimport { firestore } from 'firebase/app';\nimport { distinctUntilChanged, filter, map, takeUntil, withLatestFrom } from 'rxjs/operators';\n\nimport { IDiceBeforeThrow, IDiceThrow, IDiceThrowResult } from '../models/dice.model';\nimport { roomsActions } from '../store/rooms/rooms.actions';\nimport { FirestoreCollection } from '../models/firebase.model';\nimport { IProfile, IRoom, IRoomLog, Log } from '../models/rooms.model';\nimport { StoreService } from './store.service';\nimport { diceSetToString } from '../utils/dice.utils';\n\nexport class DiceService {\n  private static instance: DiceService | null;\n\n  public readonly diceThrow$ = new Subject<IDiceThrow>();\n  public readonly diceBeforeThrow$ = new Subject<IDiceBeforeThrow>();\n  public readonly diceThrowResult$ = new ReplaySubject<IDiceThrowResult>(1);\n  public profile: IProfile | null = null;\n  public roomUid: string | null = null;\n\n  private readonly takeUntil$ = new Subject();\n  private readonly storeService: StoreService = StoreService.getInstance();\n\n  private constructor(private firestore: firestore.Firestore) {\n    this.createSubscriptions();\n  }\n\n  public hostDestroyed(): void {\n    this.takeUntil$.next();\n    DiceService.instance = null;\n    this.setDiceRolling(false);\n  }\n\n  public get handleDiceSetFormChanges$(): Observable<string> {\n    return this.storeService.getDiceSetForm().pipe(\n      map(form => form?.values),\n      distinctUntilChanged((a, b) => JSON.stringify(a) === JSON.stringify(b)),\n      filter(dices => !!dices),\n      map(dices => diceSetToString(dices)),\n      takeUntil(this.takeUntil$)\n    );\n  }\n\n  static getInstance(firestore: firestore.Firestore): DiceService {\n    if (!DiceService.instance) {\n      DiceService.instance = new DiceService(firestore);\n    }\n\n    return DiceService.instance;\n  }\n\n  private createSubscriptions(): void {\n    // this.diceThrow$.pipe(takeUntil(this.takeUntil$)).subscribe(diceThrow => {\n    //   console.log('diceThrow$: ', diceThrow);\n    // });\n\n    this.diceBeforeThrow$.pipe(takeUntil(this.takeUntil$)).subscribe(diceThrow => {\n      this.setDiceRolling(true);\n      // console.log('diceBeforeThrow$: ', diceThrow);\n    });\n\n    this.diceThrowResult$.pipe(takeUntil(this.takeUntil$)).subscribe(diceThrow => {\n      this.setDiceRolling(false);\n      diceThrow.emit && this.firestoreAddNewThrow(diceThrow);\n      // console.log('diceThrowResult$: ', diceThrow);\n    });\n\n    this.performDiceThrowWhenNewDiceThrowLogAppears();\n  }\n\n  /**\n   * Set UI flag to tell if dice are rolling\n   */\n  private setDiceRolling(diceRolling: boolean): void {\n    this.storeService.dispatch(roomsActions.diceRolling(diceRolling));\n  }\n\n  private firestoreAddNewThrow(diceThrowResult: IDiceThrowResult): void {\n    if (!this.roomUid) {\n      return;\n    }\n\n    const { emit, ...payload } = diceThrowResult;\n    const documentRef = this.firestore.doc(`${FirestoreCollection.ROOMS}/${this.roomUid}`);\n\n    this.firestore.runTransaction((t: firestore.Transaction) => {\n      return t\n        .get(documentRef)\n        .then(doc => {\n          const newLog: IRoomLog = {\n            authorUid: this.profile?.uid as string,\n            payload,\n            timestamp: Date.now().toString(),\n            type: Log.DICE_ROLL,\n          };\n          const logs: IRoomLog[] = [...(doc.data() as IRoom).logs, newLog];\n          return t.update(documentRef, { logs });\n        })\n        .catch((err: any) => {\n          // TODO: add toast message\n          // TRANSACTION_FAILURE action dispatched\n          console.log('Transaction failure:', err);\n        });\n    });\n  }\n\n  private performDiceThrowWhenNewDiceThrowLogAppears() {\n    this.storeService\n      .getLastRoomLogOnChange$()\n      .pipe(\n        filter((log: IRoomLog) => log.type === Log.DICE_ROLL),\n        withLatestFrom(this.storeService.getUserProfile$()),\n        filter(([log, profile]) => !!profile.uid && log.authorUid !== profile.uid),\n        takeUntil(this.takeUntil$)\n      )\n      .subscribe(([log]: [IRoomLog, IProfile]) => {\n        this.diceThrow$.next({ ...log.payload });\n      });\n  }\n}\n","export function diceSetToString(dices: { [key: string]: Number }) {\n  return Object.keys(dices)\n    .map(diceName => (!!dices[diceName] ? dices[diceName] + diceName : ''))\n    .filter(dice => !!dice.length)\n    .join('+');\n}\n","import React, { useEffect } from 'react';\nimport { useFirestore } from 'react-redux-firebase';\nimport { useSelector } from 'react-redux';\n\nimport { DiceService } from '../services/dice.service';\nimport { firebaseSelectors } from '../store/firebase/firebase.selectors';\nimport { roomsSelectors } from '../store/rooms/rooms.selectors';\n\nexport const DiceServiceContext = React.createContext<DiceService | null>(null);\n\ninterface DiceServiceContextProps {}\n\nexport const DiceServiceContextC: React.FC<DiceServiceContextProps> = ({ children }) => {\n  const firestore = useFirestore();\n\n  const diceService = DiceService.getInstance(firestore);\n  const profile = useSelector(firebaseSelectors.userProfile);\n  const roomUid = useSelector(roomsSelectors.selectedRoomUid);\n\n  useEffect(() => {\n    diceService.profile = profile;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [profile]);\n\n  useEffect(() => {\n    diceService.roomUid = roomUid || null;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [roomUid]);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(() => () => diceService.hostDestroyed(), []);\n\n  return <DiceServiceContext.Provider value={diceService}>{children}</DiceServiceContext.Provider>;\n};\n","import { Reducer } from 'redux';\nimport { ChatsAction, ChatsState } from './chats.model';\n\nexport const initialState: ChatsState = {\n  selectedChat: null,\n};\n\nexport const chatsReducer: Reducer<ChatsState> = (state = initialState, action) => {\n  switch (action.type) {\n    case ChatsAction.SELECTED: {\n      return { ...state, selectedChat: action.payload };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n","import { Reducer } from 'redux';\nimport { LocationAction, LocationState } from './location.model';\n\nexport const initialState: LocationState = {\n  match: {\n    params: {},\n    isExact: false,\n    path: '',\n    url: '',\n  },\n};\n\nexport const locationReducer: Reducer<LocationState> = (state: LocationState = initialState, action) => {\n  switch (action.type) {\n    case LocationAction.MATCH_CHANGE: {\n      return { ...state, match: action.payload };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n","import { Reducer } from 'redux';\nimport { RoomsAction, RoomsState } from './rooms.model';\n\nexport const initialState: RoomsState = {\n  selectedRoom: null,\n  drawerOpened: true,\n  chatOpened: true,\n  playersOpened: true,\n  diceRolling: false,\n};\n\nexport const roomsReducer: Reducer<RoomsState> = (state = initialState, action) => {\n  switch (action.type) {\n    case RoomsAction.SELECTED: {\n      return { ...state, selectedRoom: action.payload };\n    }\n    case RoomsAction.SET_DRAWER_OPEN_VALUE: {\n      return { ...state, drawerOpened: action.payload };\n    }\n    case RoomsAction.SET_CHAT_OPEN_VALUE: {\n      return { ...state, chatOpened: action.payload };\n    }\n    case RoomsAction.SET_PLAYERS_OPEN_VALUE: {\n      return { ...state, playersOpened: action.payload };\n    }\n    case RoomsAction.SET_DICE_ROLLING: {\n      return { ...state, diceRolling: action.payload };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n","import { Action, combineReducers, Reducer } from 'redux';\nimport { firebaseReducer, FirebaseReducer, FirestoreReducer } from 'react-redux-firebase';\nimport { FormReducer, reducer as formReducer } from 'redux-form';\n// @ts-ignore\nimport firestore from 'redux-firestore/lib/reducer';\n\nimport {\n  FirebaseQuerySchema,\n  FirebaseUserProfile,\n  FirestoreQuerySchema,\n  FirestoreSchema,\n} from './firebase/firebase.types';\nimport { IProfile, IRoomCreateForm } from '../models/rooms.model';\nimport { chatsReducer } from './chats/chats.reducer';\nimport { ChatsState } from './chats/chats.model';\nimport { locationReducer } from './location/location.reducer';\nimport { LocationState } from './location/location.model';\nimport { RoomsState } from './rooms/rooms.model';\nimport { roomsReducer } from './rooms/rooms.reducer';\n\n/**********************************************************\n * Interfaces\n **********************************************************/\n\ninterface RootState {\n  firestore: FirestoreReducer.Reducer & {\n    data: FirestoreSchema & FirestoreQuerySchema;\n  };\n  firebase: FirebaseReducer.Reducer<FirebaseUserProfile> & {\n    auth: IProfile;\n    profile: IProfile;\n    data: FirebaseQuerySchema | any;\n  };\n}\n\n/**********************************************************\n * functions\n **********************************************************/\nexport function makeRootReducer<S = any, A extends Action = Action>(asyncReducers?: Reducer<S, A>) {\n  return combineReducers({\n    firebase: firebaseReducer,\n    firestore,\n    chats: chatsReducer,\n    rooms: roomsReducer,\n    location: locationReducer,\n    form: formReducer,\n    ...asyncReducers,\n  });\n}\n\nconst rootReducer = combineReducers<RootState>({\n  firebase: firebaseReducer as any,\n  firestore,\n});\n\nexport interface IDiceSetForm {\n  registeredFields: {\n    [key: string]: Object;\n  };\n  values: {\n    [key: string]: number;\n  };\n}\n\nexport interface AppState extends ReturnType<typeof rootReducer> {\n  chats: ChatsState;\n  rooms: RoomsState;\n  location: LocationState;\n  form: FormReducer & { diceSetForm: IDiceSetForm; createRoom: { values: IRoomCreateForm } };\n}\n","import thunk from 'redux-thunk';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { getFirebase } from 'react-redux-firebase';\nimport { getFirestore } from 'redux-firestore';\n\nimport { makeRootReducer } from '../store/main';\n\nconst initialState = (window as any).___INITIAL_STATE__ || {\n  firebase: { authError: null },\n};\n\nexport const store = configureStore(initialState);\n\nfunction configureStore(initialState: any): any {\n  // ======================================================\n  // Store Enhancers\n  // ======================================================\n  const enhancers = [];\n\n  if (window && window.location && window.location.hostname === 'localhost') {\n    const devToolsExtension = (window as any).__REDUX_DEVTOOLS_EXTENSION__;\n    if (typeof devToolsExtension === 'function') {\n      enhancers.push(devToolsExtension());\n    }\n  }\n\n  // ======================================================\n  // Middleware Configuration\n  // ======================================================\n  const middleware = [\n    thunk.withExtraArgument({ getFirebase, getFirestore }),\n    // This is where you add other middleware like redux-observable\n  ];\n\n  // ======================================================\n  // Store Instantiation and HMR Setup\n  // ======================================================\n  const store = createStore(makeRootReducer(), initialState, compose(applyMiddleware(...middleware), ...enhancers));\n\n  if ((module as any).hot) {\n    // Enable Webpack hot module replacement for reducers\n    (module as any).hot.accept('../store/main', () => {\n      const nextRootReducer = require('../store/main'); // eslint-disable-line global-require, @typescript-eslint/no-var-requires\n      store.replaceReducer(nextRootReducer);\n    });\n  }\n\n  return store;\n}\n","import { Dice, IDiceThrowResult } from './dice.model';\n\nexport enum Log {\n  DICE_ROLL = 'DICE_ROLL',\n}\n\nexport interface IProfile {\n  uid: string;\n  avatarUrl?: string;\n  displayName: string;\n  email: string;\n  photoURL: string;\n  connected?: boolean;\n}\n\nexport interface IRoomLog {\n  timestamp: string;\n  type: Log;\n  authorUid: string;\n  payload: Omit<IDiceThrowResult, 'emit'>;\n}\n\nexport interface IRoom extends IRoomCreateForm {\n  createdAt: string;\n  gameMaster: IProfile;\n  players: string[];\n  logs: IRoomLog[];\n  chatUid?: string;\n}\n\nexport interface IRoomCreateForm {\n  roomName: string;\n  diceType: Dice[];\n  description: string;\n  roomImage: string;\n  gameMasterAvatar: string;\n  campaignTitle: string;\n  maxPlayers: number;\n}\n\nexport const createRoomFormModel = {\n  roomName: { name: 'roomName', label: 'Name of the Room *', fullWidth: true },\n  description: { name: 'description', label: 'Room description', multiline: true, fullWidth: true },\n  campaignTitle: { name: 'campaignTitle', label: 'Current campaign tittle', multiline: false, fullWidth: true },\n  roomImage: { name: 'roomImage', label: 'Room image URL', multiline: false, fullWidth: true },\n  gameMasterAvatar: { name: 'gameMasterAvatar', label: 'Game master avatar URL', multiline: false, fullWidth: true },\n  maxPlayers: {\n    name: 'maxPlayers',\n    label: 'Maximum players *',\n    multiline: false,\n    fullWidth: true,\n    type: 'number',\n    InputProps: { inputProps: { min: 1, max: 8 } },\n  },\n  diceType: {\n    name: 'diceType',\n    label: 'Allowed dice *',\n    options: [\n      { label: Dice.D4, value: Dice.D4 },\n      { label: Dice.D6, value: Dice.D6 },\n      { label: Dice.D8, value: Dice.D8 },\n      { label: Dice.D10, value: Dice.D10 },\n      { label: Dice.D12, value: Dice.D12 },\n      { label: Dice.D20, value: Dice.D20 },\n      { label: Dice.D100, value: Dice.D100 },\n    ],\n  },\n  d4: { name: Dice.D4, label: Dice.D4 },\n  d6: { label: Dice.D6, name: Dice.D6 },\n  d8: { label: Dice.D8, name: Dice.D8 },\n  d10: { label: Dice.D10, name: Dice.D10 },\n  d12: { label: Dice.D12, name: Dice.D12 },\n  d20: { label: Dice.D20, name: Dice.D20 },\n  d100: { label: Dice.D100, name: Dice.D100 },\n};\n\nexport const diceSetFormModel = {\n  diceD4: { name: Dice.D4, label: Dice.D4, defaultValue: 1 },\n  diceD6: { name: Dice.D6, label: Dice.D6, defaultValue: 1 },\n  diceD8: { name: Dice.D8, label: Dice.D8, defaultValue: 1 },\n  diceD10: { name: Dice.D10, label: Dice.D10, defaultValue: 1 },\n  diceD12: { name: Dice.D12, label: Dice.D12, defaultValue: 1 },\n  diceD20: { name: Dice.D20, label: Dice.D20, defaultValue: 1 },\n  diceD100: { name: Dice.D100, label: Dice.D100, defaultValue: 1 },\n};\n\nexport interface IDiceDashboardForm {\n  [key: string]: number;\n}\n","import { AppState } from '../main';\nimport { LocationMatch } from './location.model';\n\nexport const locationSelectors = {\n  match: (state: AppState): LocationMatch => state.location.match,\n};\n","import { AppState } from '../main';\n\nexport const chatsSelectors = {\n  selectedChat: (state: AppState): string | null => state.chats.selectedChat,\n\n  profilesUidFromSelectedChat: (state: AppState): string[] => {\n    if (!state.chats.selectedChat) return [];\n\n    return state.firestore.data?.userChats?.[state.chats.selectedChat]?.players || [];\n  },\n};\n","import { action } from 'typesafe-actions';\nimport { ChatsAction } from './chats.model';\n\nexport const chatsActions = {\n  setSelectedChat: (payload: string | null) => action(ChatsAction.SELECTED, payload),\n};\n","export enum ChatsAction {\n  SELECTED = '@@chats/SELECTED',\n}\n\nexport interface ChatsState {\n  readonly selectedChat: string | null;\n}\n","import { RouterPath } from '../../models/paths';\n\nexport enum LocationAction {\n  MATCH_CHANGE = '@@location/MATCH_CHANGE',\n}\n\nexport interface LocationMatch<Params extends { [K in keyof Params]?: string } = {}> {\n  params: Params;\n  isExact: boolean;\n  path: RouterPath | string;\n  url: string;\n}\n\nexport interface LocationState {\n  readonly match: LocationMatch;\n}\n","export enum RouterPath {\n  CHATS_PATH = '/chats',\n  CHATS_PATH_ID = '/chats/:chatId',\n  HOME_PATH = '/',\n  ROOM_CREATE_PATH = '/rooms/create',\n  ROOM_PATH = '/room',\n  ROOMS_PATH = '/rooms',\n  ROOMS_PATH_ID = '/room/:roomId',\n}\n","import React from 'react';\nimport { Avatar, Grow, List, ListItem, ListItemAvatar, ListItemText } from '@material-ui/core';\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\nimport { Dictionary } from 'react-redux-firebase';\n\nimport { firstLettersJoined } from '../../../utils/text.utils';\nimport { IChat } from '../../../models/chats.model';\nimport { timeStampToFormattedDate } from '../../../utils/date.utils';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n      backgroundColor: theme.palette.background.paper,\n      height: '20vh',\n      overflowY: 'scroll',\n    },\n    item: {\n      cursor: 'pointer',\n    },\n  });\n\ninterface ChatListElementProps extends WithStyles<typeof styles> {\n  chats: Dictionary<IChat>;\n  selectedChat: string | null;\n  onChatClick: (chatId: string) => void;\n}\n\nfunction ChatListElementC(props: ChatListElementProps) {\n  const { classes, chats, onChatClick, selectedChat } = props;\n\n  const renderElement = () =>\n    Object.keys(chats).map((chatId, id) => (\n      <Grow key={chatId} in timeout={1000 * id + 300}>\n        <ListItem\n          onClick={() => onChatClick(chatId)}\n          selected={chatId === selectedChat}\n          className={classes.item}\n          button\n          dense\n          alignItems=\"flex-start\"\n        >\n          <ListItemAvatar>\n            <Avatar>{firstLettersJoined(chats[chatId].roomName || 'No name')}</Avatar>\n          </ListItemAvatar>\n          <ListItemText\n            primary={chats[chatId].roomName || 'No name'}\n            secondary={timeStampToFormattedDate(chats[chatId].createdAt)}\n          />\n        </ListItem>\n      </Grow>\n    ));\n\n  return <List className={classes.root}>{renderElement()}</List>;\n}\n\nexport const ChatListElements =  React.memo(withStyles(styles)(ChatListElementC));\n","import AppBar from '@material-ui/core/AppBar';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport React, { useEffect } from 'react';\nimport SearchIcon from '@material-ui/icons/Search';\nimport TextField from '@material-ui/core/TextField';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\nimport { Dictionary } from 'react-redux-firebase';\nimport { Grow } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { IChat } from '../../models/chats.model';\nimport { ChatListElements } from './components/ChatListElements';\nimport { chatsActions } from '../../store/chats/chats.actions';\nimport { chatsSelectors } from '../../store/chats/chats.selectors';\nimport { firestoreSelectors } from '../../store/firebase/firestore.selectors';\n\nexport enum ChatListType {\n  EMBEDDED = 'EMBEDDED',\n  CARD = 'CARD',\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    paper: {\n      maxWidth: 936,\n      margin: 'auto',\n      overflow: 'hidden',\n    },\n    searchBar: {\n      borderBottom: '1px solid rgba(0, 0, 0, 0.12)',\n    },\n    searchInput: {\n      fontSize: theme.typography.fontSize,\n    },\n    block: {\n      display: 'block',\n    },\n    addUser: {\n      marginRight: theme.spacing(1),\n    },\n    contentWrapper: {\n      margin: '16px 16px',\n    },\n  });\n\nexport interface ChatListProps extends WithStyles<typeof styles> {\n  showSearchBar?: boolean;\n  viewType?: ChatListType;\n}\n\nfunction ChatListC(props: ChatListProps) {\n  const { classes, showSearchBar = true, viewType = ChatListType.CARD } = props;\n  const userChats: Dictionary<IChat> = useSelector(firestoreSelectors.userChats) || {};\n  const selectedChat: string | null = useSelector(chatsSelectors.selectedChat);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    return () => {\n      dispatch(chatsActions.setSelectedChat(null));\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (!selectedChat && Object.keys(userChats || {}).length) {\n      dispatch(chatsActions.setSelectedChat(Object.keys(userChats as any)[0]));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [!!selectedChat, Object.keys(userChats || {}).length === 0]);\n\n  const onChatClick = (chatId: string) => {\n    dispatch(chatsActions.setSelectedChat(chatId));\n  };\n\n  return (\n    <Grow in>\n      {viewType === ChatListType.CARD ? (\n        <Paper className={classes.paper}>\n          {showSearchBar && (\n            <AppBar className={classes.searchBar} position=\"static\" color=\"default\" elevation={0}>\n              <Toolbar>\n                <Grid container spacing={2} alignItems=\"center\">\n                  <Grid item>\n                    <SearchIcon className={classes.block} color=\"inherit\" />\n                  </Grid>\n                  <Grid item xs>\n                    <TextField\n                      fullWidth\n                      placeholder=\"Search chat by room name or players\"\n                      InputProps={{\n                        disableUnderline: true,\n                        className: classes.searchInput,\n                      }}\n                    />\n                  </Grid>\n                </Grid>\n              </Toolbar>\n            </AppBar>\n          )}\n          <div className={classes.contentWrapper}>\n            <ChatListElements chats={userChats} onChatClick={onChatClick} selectedChat={selectedChat} />\n          </div>\n        </Paper>\n      ) : (\n        <ChatListElements chats={userChats} onChatClick={onChatClick} selectedChat={selectedChat} />\n      )}\n    </Grow>\n  );\n}\n\nexport const ChatList = withStyles(styles)(ChatListC);\n","import { AppState } from './main';\nimport { firestoreSelectors } from './firebase/firestore.selectors';\nimport { chatsSelectors } from './chats/chats.selectors';\nimport { IRoomCreateForm } from '../models/rooms.model';\n\nexport const mainSelectors = {\n  getAllNeededPlayersUid: (state: AppState): string[] => {\n    const selectedRoomPlayers = firestoreSelectors.selectedRoom(state)?.players || [];\n    const selectedChatPlayers = chatsSelectors.profilesUidFromSelectedChat(state) || [];\n    return [...selectedChatPlayers, ...selectedRoomPlayers].filter((v, i, a) => a.indexOf(v) === i);\n  },\n\n  isGameMasterOfSelectedRoom: (state: AppState): boolean => {\n    const selectedRoomGameMaster = state.firestore.data.selectedRoom\n      ? state.firestore.data.selectedRoom.gameMaster.uid\n      : 'unknown';\n\n    return selectedRoomGameMaster === state.firebase.profile.uid;\n  },\n\n  getFormCreateRoom: (state: AppState): IRoomCreateForm => state.form.createRoom.values,\n\n  isUserARoomPlayerOrGameMaster: (state: AppState): boolean => {\n    if (!state.firestore.data.selectedRoom || !state.firebase.profile.uid) return false;\n    return (\n      state.firestore.data.selectedRoom?.players.indexOf(state.firebase.profile.uid) > -1 ||\n      state.firestore.data.selectedRoom?.gameMaster.uid === state.firebase.profile.uid\n    );\n  },\n};\n","import React from 'react';\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      alignItems: 'center',\n      flexDirection: 'column',\n      justifyContent: 'flex-start',\n      height: '100%',\n      width: '100%',\n      backgroundColor: theme.palette.background.default,\n      position: 'absolute',\n      zIndex: 10000,\n      left: 0,\n      top: 0,\n    },\n    progress: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '100%',\n    },\n    svg: {\n      width: '15vw',\n      height: '15vh',\n    },\n  });\n\ninterface LoaderProps extends WithStyles<typeof styles> {\n  style?: Object;\n}\n\nfunction LoaderC(props: LoaderProps) {\n  const { classes, style } = props;\n\n  return (\n    <div className={classes.root} style={style}>\n      <div className={classes.progress}>\n        <img className={classes.svg} src={`${process.env.PUBLIC_URL}/assets/svg/loader-knot.svg`} alt=\"Roll a Dice...\" />\n      </div>\n    </div>\n  );\n}\n\nexport const Loader =  React.memo(withStyles(styles)(LoaderC));\n","import { action } from 'typesafe-actions';\n\nimport { LocationAction, LocationMatch } from './location.model';\n\nexport const locationActions = {\n  matchChange: (payload: LocationMatch) => action(LocationAction.MATCH_CHANGE, payload),\n};\n","import { action } from 'typesafe-actions';\nimport { RoomsAction } from './rooms.model';\n\nexport const roomsActions = {\n  setSelectedRoom: (payload: string | null) => action(RoomsAction.SELECTED, payload),\n  setDrawerOpenValue: (payload: boolean) => action(RoomsAction.SET_DRAWER_OPEN_VALUE, payload),\n  setChatOpenValue: (payload: boolean) => action(RoomsAction.SET_CHAT_OPEN_VALUE, payload),\n  setPlayersOpenValue: (payload: boolean) => action(RoomsAction.SET_PLAYERS_OPEN_VALUE, payload),\n  diceRolling: (payload: boolean) => action(RoomsAction.SET_DICE_ROLLING, payload),\n};\n","import React from 'react';\nimport {\n  Checkbox,\n  FormControl,\n  FormControlLabel,\n  FormGroup,\n  FormHelperText,\n  FormLabel,\n  InputLabel,\n  Select,\n  Slider,\n  TextField,\n} from '@material-ui/core';\nimport { Field } from 'redux-form';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\n\n/*\n * Model\n */\ninterface FormFieldGenericProps<T = any> {\n  name: string;\n  label: string;\n  value?: T;\n  min?: number;\n  max?: number;\n  [key: string]: any;\n}\nexport interface IGroupOption {\n  label: string;\n  value: string | number;\n}\n\ninterface FormFieldWithOptionsProps extends FormFieldGenericProps {\n  options: IGroupOption[];\n}\n\n/*\n * Styles\n */\n\nconst styles = (theme: Theme) => ({\n  formField: { marginBottom: theme.spacing(2) },\n  sliderFormField: {\n    width: '100%',\n    marginLeft: 0,\n  },\n});\n\nconst useStyles = makeStyles(styles);\n\n/*\n * Components\n */\n\nexport const FormFieldHelperText = ({ touched, error }: any) => {\n  if (!(touched && error)) {\n    return;\n  } else {\n    return <FormHelperText>{touched && error}</FormHelperText>;\n  }\n};\n\nexport const FormFieldText = React.memo((props: FormFieldGenericProps) => {\n  const classes = useStyles();\n\n  const formField = ({ label, input, meta: { touched, invalid, error }, ...custom }: any) => (\n    <TextField\n      variant=\"outlined\"\n      label={label}\n      placeholder={label}\n      error={touched && invalid}\n      helperText={touched && error}\n      {...input}\n      {...custom}\n    />\n  );\n\n  return <Field {...props} component={formField} className={classes.formField} />;\n});\n\nexport const FormFieldSelect = React.memo((props: FormFieldGenericProps) => {\n  const classes = useStyles();\n\n  const field = ({ input, label, meta: { touched, error }, children, ...custom }: FormFieldGenericProps) => {\n    return (\n      <FormControl error={touched && error}>\n        <InputLabel htmlFor=\"age-native-simple\">Age</InputLabel>\n        <Select\n          variant=\"outlined\"\n          native\n          {...input}\n          {...custom}\n          inputProps={{\n            name: 'age',\n            id: 'age-native-simple',\n          }}\n        >\n          {children}\n        </Select>\n        {FormFieldHelperText({ touched, error })}\n      </FormControl>\n    );\n  };\n\n  return <Field {...props} type=\"checkbox\" component={field} className={classes.formField} />;\n});\n\nexport const FormFieldCheckbox = React.memo((props: FormFieldGenericProps) => {\n  const classes = useStyles();\n\n  const field = ({ input, label }: FormFieldGenericProps) => {\n    return <FormControlLabel control={<Checkbox checked={!!input.value} onChange={input.onChange} />} label={label} />;\n  };\n\n  return <Field {...props} type=\"checkbox\" component={field} className={classes.formField} />;\n});\n\nexport const FormFieldCheckboxGroup = React.memo((props: FormFieldWithOptionsProps) => {\n  const classes = useStyles();\n\n  const field = ({ input, meta, options, label }: FormFieldWithOptionsProps) => {\n    const { name, onChange } = input;\n    const { touched, error } = meta;\n    const inputValue = input.value;\n\n    const checkboxesFormControls = options.map(({ label, value }: any, index: number) => {\n      const handleChange = (event: any) => {\n        const arr = [...inputValue];\n        if (event.target.checked) {\n          arr.push(value);\n        } else {\n          arr.splice(arr.indexOf(value), 1);\n        }\n        return onChange(arr);\n      };\n      const checked = inputValue.includes(value);\n      return (\n        <FormControlLabel\n          key={index}\n          control={<Checkbox checked={checked} onChange={handleChange} name={`${name}[${index}]`} value={value} />}\n          label={label}\n        />\n      );\n    });\n\n    return (\n      <FormControl error={touched && !!error} component=\"fieldset\">\n        <FormLabel component=\"legend\">{label}</FormLabel>\n        <FormGroup row>{checkboxesFormControls}</FormGroup>\n        {FormFieldHelperText({ touched, error })}\n      </FormControl>\n    );\n  };\n\n  return <Field {...props} type=\"checkbox\" component={field} className={classes.formField} />;\n});\n\nexport const FormFieldSlider = React.memo((props: FormFieldGenericProps) => {\n  const classes = useStyles();\n\n  function valuetext(value: number) {\n    return `${value}`;\n  }\n\n  const formField = ({\n    min = 0,\n    max = 16,\n    label,\n    input: { value, onChange, ...inputRest },\n    meta: { touched, invalid, error },\n    ...custom\n  }: any) => {\n    return (\n      <FormControlLabel\n        className={classes.sliderFormField}\n        label={label}\n        labelPlacement=\"start\"\n        control={\n          <Slider\n            defaultValue={0}\n            getAriaValueText={valuetext}\n            aria-labelledby=\"number-of-dices\"\n            valueLabelDisplay=\"auto\"\n            step={1}\n            marks\n            min={min}\n            max={max}\n            value={typeof value === 'number' ? value : 0}\n            onChange={(e: Event, value: number) => onChange(value)}\n            {...inputRest}\n            {...custom}\n          />\n        }\n      />\n    );\n  };\n\n  return <Field {...props} component={formField} className={classes.formField} />;\n});\n","import { AppState } from '../main';\nimport { IApplicationStats } from '../../models/firebase.model';\n\nexport const firebaseSelectors = {\n  isRequesting: (state: AppState): boolean => !Object.values(state.firestore.status.requesting).every(v => !v),\n\n  userProfile: (state: AppState) => state.firebase.auth,\n\n  authenticatingSelector: (state: AppState) => {\n    const {\n      firebase: { auth, isInitializing },\n    } = state;\n    return !auth.isLoaded || isInitializing;\n  },\n\n  isAuthenticated: (state: AppState) => {\n    const {\n      firebase: { auth },\n    } = state;\n    return !auth.isEmpty && !!auth.uid;\n  },\n\n  userConnected: (state: AppState): boolean => state.firebase.data.connected,\n\n  applicationStats: (state: AppState): IApplicationStats => state.firebase.data.applicationStats,\n};\n","export const firstLettersJoined: (sentence: string) => string = sentence =>\n  sentence\n    .split(' ')\n    .map(word => word.charAt(0))\n    .join('')\n    .substring(0, 2)\n    .toUpperCase();\n","import dayjs from 'dayjs';\n\nexport const timeStampToFormattedDate: (time: string | number) => string = time =>\n  dayjs(time).format('dddd, MMMM D YYYY');\n","import React from 'react';\nimport { InjectedFormProps, reduxForm } from 'redux-form';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\n\nimport { createRoomFormModel } from '../../../models/rooms.model';\nimport { Dice } from '../../../models/dice.model';\nimport { FormFieldSlider } from '../../../components/FormComponents';\n\nconst styles = (theme: Theme) => ({\n  inputSlider: {\n    width: '100%',\n    marginLeft: theme.spacing(0),\n    paddingRight: theme.spacing(2),\n    minWidth: theme.spacing(40),\n  },\n});\n\ninterface DiceDashboardFormProps extends InjectedFormProps {\n  diceType: Dice[];\n}\n\nconst useStyles = makeStyles(styles);\n\nfunction DiceDashboardFormC(props: DiceDashboardFormProps) {\n  const { diceType } = props;\n  const classes = useStyles();\n  return (\n    <form onSubmit={(e: any) => e.preventDefault()}>\n      <h2>Set your dices!</h2>\n\n      <div className={classes.inputSlider}>\n        {diceType?.map(dice => (\n          <FormFieldSlider key={dice} {...(createRoomFormModel[dice] as any)} />\n        ))}\n      </div>\n    </form>\n  );\n}\nexport const DiceDashboardForm = React.memo(\n  reduxForm({\n    form: 'diceSetForm',\n    initialValues: {\n      [Dice.D4]: 0,\n      [Dice.D6]: 0,\n      [Dice.D8]: 0,\n      [Dice.D10]: 0,\n      [Dice.D12]: 0,\n      [Dice.D20]: 0,\n      [Dice.D100]: 0,\n    },\n  })(DiceDashboardFormC as any) as any\n);\n","import React from 'react';\nimport { List, ListItem, Typography } from '@material-ui/core';\n\nimport { IDiceThrowResult } from '../../../models/dice.model';\n\ninterface DiceDashboardResultProps {\n  throwResult: IDiceThrowResult | null;\n}\n\nfunction DiceDashboardResultC(props: DiceDashboardResultProps) {\n  const { throwResult } = props;\n\n  const renderResultItem = () => {\n    if (!throwResult) {\n      return '';\n    }\n\n    const resultObject: any = {};\n    throwResult?.diceSet.forEach((diceName, id) => {\n      resultObject[diceName] = [...(resultObject[diceName] || []), throwResult?.result[id]];\n    });\n\n    return Object.keys(resultObject).map(diceName => (\n      <ListItem key={diceName}>\n        <Typography variant=\"h2\" component=\"div\">\n          {diceName}: {resultObject[diceName].join(', ')}\n        </Typography>\n      </ListItem>\n    ));\n  };\n\n  return (\n    <article>\n      <h2>Throw result:</h2>\n      <List>{renderResultItem()}</List>\n    </article>\n  );\n}\nexport const DiceDashboardResult = DiceDashboardResultC;\n","import clsx from 'clsx';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Card, CardContent, CardMedia, Collapse, Grow } from '@material-ui/core';\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { DiceDashboardForm } from './components/DiceDashboardForm';\nimport { DiceDashboardResult } from './components/DiceDashboardResult';\nimport { DiceServiceContext } from '../../contexts/DiceService.context';\nimport { IDiceThrowResult } from '../../models/dice.model';\nimport { IRoom } from '../../models/rooms.model';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      backgroundColor: '#f4f4f2ef',\n    },\n    details: {\n      display: 'flex',\n      flexDirection: 'column',\n    },\n    content: {\n      flex: '1 0 auto',\n    },\n    cover: {\n      width: theme.spacing(18),\n    },\n    playIcon: {\n      height: 38,\n      width: 38,\n    },\n    clickable: {\n      cursor: 'pointer',\n    },\n  });\n\nexport interface DiceDashboardProps extends WithStyles<typeof styles> {\n  visible?: boolean;\n  room?: IRoom | null;\n}\n\nfunction DiceDashboardC(props: DiceDashboardProps) {\n  const { classes, visible = true, room } = props;\n\n  const destroyed$ = new Subject();\n\n  const diceService = useContext(DiceServiceContext);\n  const [throwResult, setThrowResult] = useState<IDiceThrowResult | null>(null);\n\n  useEffect(() => {\n    diceService?.diceThrowResult$.pipe(takeUntil(destroyed$)).subscribe(result => setThrowResult(result));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [!!diceService]);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(() => () => destroyed$.next(), []);\n\n  return (\n    <Grow in={visible}>\n      <Card className={clsx(classes.root, !!throwResult && classes.clickable)} onClick={() => setThrowResult(null)}>\n        <div className={classes.details}>\n          <CardContent className={classes.content}>\n            <Collapse in={!throwResult}>\n              <DiceDashboardForm diceType={room?.diceType} />\n            </Collapse>\n\n            <Collapse in={!!throwResult}>\n              <DiceDashboardResult throwResult={throwResult} />\n            </Collapse>\n          </CardContent>\n        </div>\n        {room?.gameMasterAvatar && (\n          <CardMedia className={classes.cover} image={room?.gameMasterAvatar} title=\"Bot avatar\" />\n        )}\n      </Card>\n    </Grow>\n  );\n}\n\nexport const DiceDashboard = withStyles(styles)(DiceDashboardC);\n","export const diceDefaultConfig = {\n  idCanvas: 'canvas',\n  idLabel: 'label',\n  idSet: 'set',\n  idSelectorDiv: 'selector_div',\n  idInfoDiv: 'info_div',\n  useTrueRandom: false,\n  useShadows: true,\n  whiteDice: false,\n  noresult: false,\n  diceThrow$: null,\n  diceThrowResult$: null,\n};\n","import clsx from 'clsx';\nimport React, { useContext, useEffect, useRef, useState } from 'react';\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\nimport { Paper, Grow } from '@material-ui/core';\n\nimport { diceDefaultConfig } from '../../config/dice.config';\nimport { DiceServiceContext } from '../../contexts/DiceService.context';\nimport { timer } from 'rxjs';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n      height: `calc(100% - ${theme.spacing(2)}px)`,\n      position: 'relative' as 'relative',\n    },\n    diceCanvas: {\n      width: '100%',\n      height: '100%',\n      cursor: 'grab',\n    },\n    grabbing: {\n      cursor: 'grabbing',\n    },\n  });\n\ninterface DiceCardProps extends WithStyles<typeof styles> {\n  visible?: boolean;\n}\n\nfunction DiceCardC(props: DiceCardProps) {\n  const { classes, visible = true } = props;\n\n  const canvasRef = React.useRef(null);\n  const diceContainerEl = useRef(null);\n\n  const [diceInitialized, setDiceInitialized] = useState(false);\n  const [mouseDown, setMouseDown] = useState(false);\n  const diceService = useContext(DiceServiceContext);\n  const canvasWidth: number = (canvasRef.current && (canvasRef.current as any).getBoundingClientRect().width) || 0;\n\n  useEffect(() => {\n    if (!!diceService && !diceInitialized && canvasWidth !== 0) {\n      timer(300).subscribe(() => {\n        (window as any).dice_initialize(diceContainerEl.current, {\n          ...diceDefaultConfig,\n          diceThrow$: diceService.diceThrow$,\n          diceThrowResult$: diceService.diceThrowResult$,\n          diceBeforeThrow$: diceService.diceBeforeThrow$,\n          diceSet$: diceService.handleDiceSetFormChanges$,\n        });\n        setDiceInitialized(true);\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [!!canvasWidth, !!diceService]);\n\n  const onMouseDown = (isDown: boolean): void => {\n    setMouseDown(isDown);\n  };\n\n  return (\n    <Grow in={visible}>\n      <Paper elevation={3} className={classes.root}>\n        <div\n          id=\"diceCanvasContainer\"\n          ref={diceContainerEl}\n          className={clsx(classes.diceCanvas, mouseDown && classes.grabbing)}\n          onMouseDown={() => onMouseDown(true)}\n          onMouseUp={() => onMouseDown(false)}\n        >\n          <div ref={canvasRef} id=\"canvas\" />\n        </div>\n      </Paper>\n    </Grow>\n  );\n}\n\nexport const DiceCard = withStyles(styles)(DiceCardC);\n","export enum RoomsAction {\n  SELECTED = '@@rooms/SELECTED',\n  SET_DRAWER_OPEN_VALUE = '@@rooms/SET_DRAWER_OPEN_VALUE',\n  SET_CHAT_OPEN_VALUE = '@@rooms/SET_CHAT_OPEN_VALUE',\n  SET_PLAYERS_OPEN_VALUE = '@@rooms/SET_PLAYERS_OPEN_VALUE',\n  SET_DICE_ROLLING = '@@rooms/SET_DICE_ROLLING',\n}\n\nexport interface RoomsState {\n  readonly selectedRoom: string | null;\n  readonly drawerOpened: boolean;\n  readonly chatOpened: boolean;\n  readonly playersOpened: boolean;\n  readonly diceRolling: boolean;\n}\n","export enum FirestoreCollection {\n  CHATS = 'chats',\n  USERS = 'users',\n  ROOMS = 'rooms',\n}\n\nexport interface IApplicationStats {\n  rooms: number;\n  diceThrows: number;\n  players: number;\n}\n","import { ReduxFirestoreQuerySetting } from 'react-redux-firebase';\nimport { FirestoreCollection } from '../models/firebase.model';\n\nexport const chatsQuery = {\n  getUserChats: (uid: string): ReduxFirestoreQuerySetting => {\n    const uidNonEmptyArray = uid && uid?.length !== 0 ? uid : 'unknown';\n\n    return {\n      collection: FirestoreCollection.CHATS,\n      where: [['players', 'array-contains', uidNonEmptyArray]],\n      storeAs: 'userChats',\n    };\n  },\n};\n","import { ReduxFirestoreQuerySetting } from 'react-redux-firebase';\n\nexport const profileQuery = {\n  getProfilesByUid: (uids: string[] = []): ReduxFirestoreQuerySetting => ({\n    collection: 'users',\n    where: [['uid', 'in', uids]],\n    storeAs: 'usersProfiles',\n  }),\n  connected: { path: '.info/connected',  storeAs: 'connected' },\n};\n","import { ReduxFirestoreQuerySetting } from 'react-redux-firebase';\nimport { FirestoreCollection } from '../models/firebase.model';\n\nexport const roomsQuery = {\n         getUserRoomsAsGameMaster: (uid: string): ReduxFirestoreQuerySetting => ({\n           collection: FirestoreCollection.ROOMS,\n           where: [['gameMaster.uid', '==', uid]],\n           storeAs: 'userRoomsAsGameMaster',\n         }),\n\n         getUserRoomsAsPlayer: (uid: string): ReduxFirestoreQuerySetting => ({\n           collection: FirestoreCollection.ROOMS,\n           where: [['players', 'array-contains', uid]],\n           storeAs: 'userRoomsAsPlayer',\n         }),\n\n         getRoom: (DocUid: string): ReduxFirestoreQuerySetting => {\n           const doc = DocUid.length ? DocUid : 'unknown';\n           return {\n             collection: FirestoreCollection.ROOMS,\n             doc,\n             storeAs: 'selectedRoom',\n           };\n         },\n       };\n","import React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useFirebase, useFirebaseConnect, useFirestore, useFirestoreConnect } from 'react-redux-firebase';\n\nimport { chatsQuery } from '../queries/chat.query';\nimport { firebaseSelectors } from '../store/firebase/firebase.selectors';\nimport { profileQuery } from '../queries/profile.query';\nimport { roomsQuery } from '../queries/rooms.query';\nimport { roomsSelectors } from '../store/rooms/rooms.selectors';\nimport { mainSelectors } from '../store/main.selectors';\nimport { FirestoreCollection } from '../models/firebase.model';\n\nexport function WhenAuthenticated() {\n  const firestore = useFirestore();\n  const firebase = useFirebase();\n\n  const profile = useSelector(firebaseSelectors.userProfile);\n  const selectedRoomUid = useSelector(roomsSelectors.selectedRoomUid);\n  const uniqProfilesUid: string[] = [...useSelector(mainSelectors.getAllNeededPlayersUid)];\n  const userConnected = useSelector(firebaseSelectors.userConnected);\n\n  function updateUserStatus(connected: boolean): void {\n    const docUserRef = firestore.doc(`${FirestoreCollection.USERS}/${profile.uid}`);\n    docUserRef.update({ connected });\n  }\n\n  function updateUserStatusOnDisconnect(): void {\n    const docUserRef = firebase.ref(`${FirestoreCollection.USERS}/${profile.uid}`);\n    docUserRef.onDisconnect().update({ connected: false });\n  }\n\n  useEffect(() => {\n    if (userConnected !== true || !profile.uid) {\n      return;\n    }\n    updateUserStatus(userConnected);\n    updateUserStatusOnDisconnect();\n    return () => {\n      updateUserStatus(false);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [userConnected, profile.uid]);\n\n  useFirebaseConnect([profileQuery.connected]);\n\n  useFirestoreConnect([\n    /**\n     * Get all profiles data listed in array (for chat and room)\n     */\n    profileQuery.getProfilesByUid(uniqProfilesUid.length ? uniqProfilesUid : ['unknown']),\n    /**\n     * Get all profiles listed in chat messages\n     */\n    chatsQuery.getUserChats(profile.uid),\n    /**\n     * Get all rooms where user is MG\n     */\n    roomsQuery.getUserRoomsAsGameMaster(profile.uid || 'unknown'),\n    /**\n     * Get all rooms where user is Player\n     */\n    roomsQuery.getUserRoomsAsPlayer(profile.uid || 'unknown'),\n    /**\n     * Get selectedRoom by player\n     */\n    roomsQuery.getRoom(selectedRoomUid || 'unknown'),\n  ]);\n  return <React.Fragment />;\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { WhenAuthenticated } from './WhenAuthenticated';\nimport { firebaseSelectors } from '../store/firebase/firebase.selectors';\n\ninterface CoreProps {\n  children: React.ReactElement;\n}\n\nexport function Core(props: CoreProps) {\n  const isAuthenticated = useSelector(firebaseSelectors.isAuthenticated);\n\n  return (\n    <React.Fragment>\n      {isAuthenticated && <WhenAuthenticated />}\n      {props.children}\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport { RouteProps } from 'react-router';\n\nimport { RouterPath } from '../../models/paths';\n\n// @ts-ignore\nconst ChatListLazy = React.lazy(() => import('./ChatListPage'));\n\nexport const ChatList: RouteProps = {\n  path: [RouterPath.CHATS_PATH_ID, RouterPath.CHATS_PATH],\n  component: ChatListLazy as React.ComponentClass,\n};\n","import { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Avatar from '@material-ui/core/Avatar';\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useFirebase } from 'react-redux-firebase';\nimport { Menu, MenuItem } from '@material-ui/core';\n\nimport { useSelector } from 'react-redux';\nimport { firebaseSelectors } from '../store/firebase/firebase.selectors';\nimport { RouterPath } from '../models/paths';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    iconButtonAvatar: {\n      padding: 4,\n    },\n    avatarSize: {\n      border: `4px solid ${theme.palette.primary.main}`,\n      width: theme.spacing(6),\n      height: theme.spacing(6),\n    },\n  });\n\ninterface ProfileAvatarProps extends WithStyles<typeof styles> {}\n\nfunction ProfileAvatarC(props: ProfileAvatarProps) {\n  const firebase = useFirebase();\n  const history = useHistory();\n  const profile = useSelector(firebaseSelectors.userProfile);\n  const isAuthenticated = useSelector(firebaseSelectors.isAuthenticated);\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleLogout = () => {\n    firebase.logout().then(() => {\n      setAnchorEl(null);\n      history.push(RouterPath.HOME_PATH);\n    });\n  };\n\n  const handleLogin = () => {\n    firebase\n      .login({ provider: 'google', type: 'popup' })\n      .then(() => {\n        setAnchorEl(null);\n        history.push(RouterPath.ROOMS_PATH);\n      })\n      .catch(err => alert(err.message));\n  };\n\n  const { classes } = props;\n\n  return (\n    <React.Fragment>\n      <IconButton color=\"inherit\" className={classes.iconButtonAvatar} onClick={handleClick}>\n        <Avatar src={profile.avatarUrl || profile.photoURL} alt={profile.displayName} className={classes.avatarSize} />\n      </IconButton>\n\n      <Menu id=\"simple-menu\" anchorEl={anchorEl} keepMounted open={Boolean(anchorEl)} onClose={() => setAnchorEl(null)}>\n        {isAuthenticated ? (\n          <MenuItem onClick={handleLogout}>Logout</MenuItem>\n        ) : (\n          <MenuItem onClick={handleLogin}>Login with Google</MenuItem>\n        )}\n      </Menu>\n    </React.Fragment>\n  );\n}\n\nexport const ProfileAvatar = withStyles(styles)(ProfileAvatarC);\n","import clsx from 'clsx';\nimport React from 'react';\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ornament: {\n      backgroundImage: `url(${process.env.PUBLIC_URL}/assets/svg/ornament-knot.svg)`,\n      width: '100%',\n      height: '100%',\n      backgroundRepeatX: 'repeat',\n      backgroundRepeatY: 'no-repeat',\n      backgroundSize: 'contain',\n    },\n    vartical: {\n      backgroundImage: `url(${process.env.PUBLIC_URL}/assets/svg/ornament-knot-vartical.svg)`,\n      backgroundRepeatX: 'no-repeat',\n      backgroundRepeatY: 'repeat',\n    },\n  });\n\ninterface OrnamentProps extends WithStyles<typeof styles> {\n  vartical?: boolean;\n}\n\nfunction OrnamentC(props: OrnamentProps) {\n  const { classes, vartical } = props;\n\n  return <div className={clsx(classes.ornament, vartical && classes.vartical)} />;\n}\n\nexport const Ornament =  React.memo(withStyles(styles)(OrnamentC));\n","import AppBar from '@material-ui/core/AppBar';\nimport Grid from '@material-ui/core/Grid';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport React from 'react';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\n\nimport { ProfileAvatar } from '../../containers/ProfileAvatar';\nimport { Ornament } from '../../components/Ornament';\n\nconst lightColor = 'rgba(255, 255, 255, 0.7)';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    secondaryBar: {\n      zIndex: 0,\n    },\n    menuButton: {\n      marginLeft: -theme.spacing(1),\n    },\n    link: {\n      textDecoration: 'none',\n      color: lightColor,\n      '&:hover': {\n        color: theme.palette.common.white,\n      },\n    },\n    button: {\n      borderColor: lightColor,\n    },\n    ornament: {\n      bottom: '2px',\n      height: '24px',\n      opacity: 0.2,\n      position: 'absolute',\n      zIndex: -1,\n      width: ' 100%',\n    },\n    avatar: {\n      marginBottom: '-16px',\n    },\n  });\n\ninterface HeaderProps extends WithStyles<typeof styles> {\n  onDrawerToggle: () => void;\n}\n\nfunction HeaderC(props: HeaderProps) {\n  const { classes, onDrawerToggle } = props;\n\n  return (\n    <React.Fragment>\n      <AppBar color=\"primary\" position=\"sticky\" elevation={2}>\n        <Toolbar>\n          <Grid container spacing={1} alignItems=\"center\">\n            <Hidden smUp>\n              <Grid item>\n                <IconButton\n                  color=\"inherit\"\n                  aria-label=\"open drawer\"\n                  onClick={onDrawerToggle}\n                  className={classes.menuButton}\n                >\n                  <MenuIcon />\n                </IconButton>\n              </Grid>\n            </Hidden>\n            <Grid item xs />\n            <Grid item>\n              <div className={classes.avatar}>\n                <ProfileAvatar />\n              </div>\n            </Grid>\n          </Grid>\n        </Toolbar>\n        <div className={classes.ornament}>\n          <Ornament />\n        </div>\n      </AppBar>\n    </React.Fragment>\n  );\n}\n\nexport const Header =  React.memo(withStyles(styles)(HeaderC));\n","import React from 'react';\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\nimport { Fade } from '@material-ui/core';\n\nimport { Loader } from './Loader';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    container: {\n      opacity: 0,\n      visibility: 'hidden',\n      transitionDelay: '1300ms',\n      transition: 'opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms',\n    },\n    visible: {\n      opacity: 1,\n      visibility: 'visible',\n    },\n  });\n\ninterface LoaderScreenProps extends WithStyles<typeof styles> {\n  children: React.ReactElement;\n  isAuthenticating: boolean;\n}\n\nexport const LoaderScreenC = (props: LoaderScreenProps) => {\n  const { children, isAuthenticating = true } = props;\n\n  return (\n    <React.Fragment>\n      <Fade in={isAuthenticating}>\n        <Loader />\n      </Fade>\n      {children}\n    </React.Fragment>\n  );\n};\n\nexport const LoaderScreen =  React.memo(withStyles(styles)(LoaderScreenC));\n","import clsx from 'clsx';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport React from 'react';\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\nimport { DrawerProps } from '@material-ui/core/Drawer';\nimport { ExpansionPanel, ExpansionPanelDetails, ExpansionPanelSummary } from '@material-ui/core';\nimport { NavLink } from 'react-router-dom';\nimport { Omit } from '@material-ui/types';\n\nimport { RouterPath } from '../../../models/paths';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    item: {\n      paddingTop: 1,\n      paddingBottom: 1,\n      color: 'rgba(255, 255, 255, 0.7)',\n      '&:hover,&:focus': {\n        backgroundColor: 'rgba(255, 255, 255, 0.08)',\n      },\n    },\n    itemCategoryWrapper: {\n      minHeight: '60px',\n    },\n    itemCategory: {\n      width: '100%',\n      paddingTop: theme.spacing(2),\n      paddingBottom: theme.spacing(2),\n    },\n    itemCategoryAbsolute: {\n      position: 'absolute',\n      top: 0,\n    },\n    itemActiveItem: {\n      color: theme.palette.secondary.main,\n    },\n    itemPrimary: {\n      fontSize: 'inherit',\n    },\n    itemIcon: {\n      minWidth: 'auto',\n      marginRight: theme.spacing(2),\n    },\n    expansionPanel: {\n      borderRadius: '0 !important',\n      padding: '0 !important',\n      margin: '0 !important',\n      backgroundColor: (theme.palette.background as any).secondary,\n    },\n    expansionPanelSummary: {\n      margin: '0 !important',\n      padding: '0 16px 0px 0 !important',\n    },\n    expansionPanelSummaryContainer: {\n      padding: '0 !important',\n      margin: '0 !important',\n    },\n    expandIcon: {\n      color: 'rgba(255, 255, 255, 0.7)',\n    },\n    divider: {\n      boxShadow: '0 -1px 0 #404854 inset',\n    },\n  });\n\nexport interface NavigatorItemProps extends Omit<DrawerProps, 'classes'>, WithStyles<typeof styles> {\n  active?: boolean;\n  children?: React.ReactElement | React.ReactFragment;\n  icon?: React.ReactElement;\n  navLink?: RouterPath;\n  text?: string;\n  expandable?: boolean;\n  defaultExpanded?: boolean;\n}\n\nfunction NavigatorItemC(props: NavigatorItemProps) {\n  const { classes, children, icon, text, navLink, active, expandable, defaultExpanded } = props;\n\n  const setNavLink = (children: React.ReactElement) =>\n    navLink ? <NavLink to={navLink}>{children}</NavLink> : <React.Fragment>{children}</React.Fragment>;\n\n  return expandable ? (\n    <ExpansionPanel className={clsx(classes.expansionPanel, classes.divider)} defaultExpanded={defaultExpanded}>\n      <ExpansionPanelSummary\n        aria-controls=\"additional-actions1-content\"\n        aria-label=\"Expand\"\n        classes={{ content: classes.expansionPanelSummaryContainer, expandIcon: classes.expandIcon }}\n        className={classes.expansionPanelSummary}\n        expandIcon={<ExpandMoreIcon />}\n        id=\"additional-actions1-header\"\n      >\n        <div className={classes.itemCategoryWrapper} />\n\n        {setNavLink(\n          <ListItem\n            button\n            className={clsx(\n              classes.item,\n              classes.itemCategory,\n              active && classes.itemActiveItem,\n              classes.itemCategoryAbsolute\n            )}\n          >\n            {icon && <ListItemIcon className={classes.itemIcon}>{icon}</ListItemIcon>}\n            {text && <ListItemText classes={{ primary: classes.itemPrimary }}>{text}</ListItemText>}\n          </ListItem>\n        )}\n      </ExpansionPanelSummary>\n      {children && <ExpansionPanelDetails>{children}</ExpansionPanelDetails>}\n    </ExpansionPanel>\n  ) : (\n    setNavLink(\n      <ListItem\n        button\n        className={clsx(classes.item, classes.itemCategory, active && classes.itemActiveItem, classes.divider)}\n      >\n        {icon && <ListItemIcon className={classes.itemIcon}>{icon}</ListItemIcon>}\n        {text && <ListItemText classes={{ primary: classes.itemPrimary }}>{text}</ListItemText>}\n      </ListItem>\n    )\n  );\n}\n\nexport const NavigatorItem =  React.memo(withStyles(styles)(NavigatorItemC));\n","import React from 'react';\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\nimport { Card, CardContent, CardMedia, Typography } from '@material-ui/core';\n\nimport { IRoom } from '../models/rooms.model';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    cards: {\n      maxWidth: 936,\n      width: '100%',\n    },\n    media: {\n      height: 140,\n    },\n  });\n\ninterface RoomCardProps extends WithStyles<typeof styles> {\n  room: IRoom;\n}\n\nfunction RoomCardC(props: RoomCardProps) {\n  const { classes, room } = props;\n\n  return (\n    <Card className={classes.cards}>\n      {room.roomImage && <CardMedia className={classes.media} image={room.roomImage} title=\"Room image\" />}\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n          {room.roomName}\n        </Typography>\n        <Typography gutterBottom variant=\"h6\" component=\"h6\">\n          {room.campaignTitle}\n        </Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {room.description}\n        </Typography>\n        <p>\n          <Typography variant=\"caption\" color=\"textSecondary\" component=\"span\">\n            Max players:\n          </Typography>{' '}\n          <Typography color=\"textSecondary\" variant=\"h6\" component=\"span\">\n            {room.maxPlayers}\n          </Typography>\n        </p>\n        <p>\n          <Typography variant=\"caption\" color=\"textSecondary\" component=\"span\">\n            Room Game Master:\n          </Typography>\n          <br />\n          <Typography variant=\"subtitle1\" color=\"textSecondary\" component=\"span\">\n            {room.gameMaster.displayName}\n          </Typography>\n        </p>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport const RoomCard = withStyles(styles)(RoomCardC);\n","import ChatIcon from '@material-ui/icons/Chat';\nimport Drawer, { DrawerProps } from '@material-ui/core/Drawer';\nimport GamesIcon from '@material-ui/icons/Games';\nimport HomeIcon from '@material-ui/icons/Home';\nimport MeetingRoomIcon from '@material-ui/icons/MeetingRoom';\nimport React from 'react';\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\nimport { List, ListItem } from '@material-ui/core';\nimport { Omit } from '@material-ui/types';\nimport { useSelector } from 'react-redux';\n\nimport { ChatList, ChatListType } from '../../modules/ChatList/ChatList';\nimport { firestoreSelectors } from '../../store/firebase/firestore.selectors';\nimport { locationSelectors } from '../../store/location/location.selectors';\nimport { NavigatorItem } from './components/NavigatorItem';\nimport { RoomCard } from '../../containers/RoomCard';\nimport { RouterPath } from '../../models/paths';\nimport { roomsSelectors } from '../../store/rooms/rooms.selectors';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    logo: {\n      fontSize: 24,\n      color: theme.palette.common.white,\n      '&:hover,&:focus': {\n        backgroundColor: 'rgba(255, 255, 255, 0.08)',\n      },\n      backgroundColor: (theme.palette.background as any).secondary,\n      boxShadow: '0 -1px 0 #404854 inset',\n      paddingTop: theme.spacing(2),\n      paddingBottom: theme.spacing(2),\n    },\n  });\n\nexport interface NavigatorProps extends Omit<DrawerProps, 'classes'>, WithStyles<typeof styles> {}\n\nfunction NavigatorC(props: NavigatorProps) {\n  const { classes, ...other } = props;\n\n  const { path: locationPath } = useSelector(locationSelectors.match);\n  const selectedRoomData = useSelector(firestoreSelectors.selectedRoom);\n  const drawerOpened = useSelector(roomsSelectors.drawerOpened);\n\n  return (\n    <Drawer\n      open={drawerOpened}\n      variant={locationPath === RouterPath.ROOMS_PATH_ID ? 'persistent' : 'permanent'}\n      {...other}\n    >\n      <List disablePadding>\n        <ListItem className={classes.logo}>Roll a Dice...</ListItem>\n      </List>\n\n      <NavigatorItem\n        navLink={RouterPath.HOME_PATH}\n        icon={<HomeIcon />}\n        text=\"HomePage Page\"\n        active={RouterPath.HOME_PATH === locationPath}\n      />\n\n      <NavigatorItem\n        navLink={RouterPath.ROOMS_PATH}\n        icon={<MeetingRoomIcon />}\n        text=\"Rooms\"\n        expandable={locationPath.indexOf(RouterPath.ROOMS_PATH) === -1}\n        active={locationPath.indexOf(RouterPath.ROOMS_PATH) > -1}\n      >\n        <React.Fragment>List here</React.Fragment>\n      </NavigatorItem>\n\n      <NavigatorItem\n        navLink={RouterPath.CHATS_PATH}\n        icon={<ChatIcon />}\n        text=\"Chats\"\n        expandable={locationPath.indexOf(RouterPath.CHATS_PATH) === -1}\n        active={locationPath.indexOf(RouterPath.CHATS_PATH) > -1}\n      >\n        <ChatList viewType={ChatListType.EMBEDDED} />\n      </NavigatorItem>\n\n      {selectedRoomData && (\n        <NavigatorItem\n          icon={<GamesIcon />}\n          text=\"Room Ditails\"\n          expandable={true}\n          active={locationPath.indexOf(RouterPath.ROOM_PATH) > -1}\n          defaultExpanded\n        >\n          <RoomCard room={selectedRoomData} />\n        </NavigatorItem>\n      )}\n    </Drawer>\n  );\n}\n\nexport const Navigator = withStyles(styles)(NavigatorC);\n","import { createMuiTheme, Theme } from '@material-ui/core/styles';\n\nfunction themeFn() {\n  let theme = createMuiTheme({\n    palette: {\n      primary: {\n        light: '#afaf4c',\n        main: '#9b9c20',\n        dark: '#6c6d16',\n      },\n      secondary: {\n        light: '#cba234',\n        main: '#be8b02',\n        dark: '#856101',\n      },\n      background: {\n        default: '#e0e0d3',\n        paper: '#f4f4f2',\n        // @ts-ignore\n        secondary: '#111b0e',\n      },\n    },\n    typography: {\n      fontFamily: [\n        'ringbearermedium',\n        '-apple-system',\n        'BlinkMacSystemFont',\n        '\"Segoe UI\"',\n        'Roboto',\n        '\"Helvetica Neue\"',\n        'Arial',\n        'sans-serif',\n        '\"Apple Color Emoji\"',\n        '\"Segoe UI Emoji\"',\n        '\"Segoe UI Symbol\"',\n      ].join(','),\n      h5: {\n        fontWeight: 500,\n        fontSize: 26,\n        letterSpacing: 0.5,\n      },\n    },\n    shape: {\n      borderRadius: 8,\n    },\n    props: {\n      MuiTab: {\n        disableRipple: true,\n      },\n    },\n    mixins: {\n      toolbar: {\n        minHeight: 48,\n      },\n    },\n  });\n\n  theme = {\n    ...theme,\n    overrides: {\n      MuiDrawer: {\n        paper: {\n          backgroundColor: '#121b0f',\n        },\n      },\n      MuiButton: {\n        label: {\n          textTransform: 'none',\n        },\n        contained: {\n          boxShadow: 'none',\n          '&:active': {\n            boxShadow: 'none',\n          },\n        },\n      },\n      MuiTabs: {\n        root: {\n          marginLeft: theme.spacing(1),\n        },\n        indicator: {\n          height: 3,\n          borderTopLeftRadius: 3,\n          borderTopRightRadius: 3,\n          backgroundColor: theme.palette.common.white,\n        },\n      },\n      MuiTab: {\n        root: {\n          textTransform: 'none',\n          margin: '0 16px',\n          minWidth: 0,\n          padding: 0,\n          [theme.breakpoints.up('md')]: {\n            padding: 0,\n            minWidth: 0,\n          },\n        },\n      },\n      MuiIconButton: {\n        root: {\n          padding: theme.spacing(1),\n        },\n      },\n      MuiTooltip: {\n        tooltip: {\n          borderRadius: 4,\n        },\n      },\n      MuiDivider: {\n        root: {\n          backgroundColor: '#404854',\n        },\n      },\n      MuiListItemText: {\n        primary: {\n          fontWeight: theme.typography.fontWeightMedium,\n        },\n      },\n      MuiListItemIcon: {\n        root: {\n          color: 'inherit',\n          marginRight: 0,\n          '& svg': {\n            fontSize: 20,\n          },\n        },\n      },\n      MuiAvatar: {\n        root: {\n          width: 32,\n          height: 32,\n        },\n      },\n    },\n  };\n\n  return theme;\n}\n\nexport const theme = themeFn();\n\nexport const darkTheme: Theme = { ...theme, palette: { ...theme.palette, type: 'dark' } };\nexport const lightTheme: Theme = { ...theme, palette: { ...theme.palette, type: 'dark' } };\n","import Hidden from '@material-ui/core/Hidden';\nimport React from 'react';\nimport { createStyles, withStyles, WithStyles } from '@material-ui/core/styles';\nimport { useSelector } from 'react-redux';\n\nimport { Navigator } from './Navigator/Navigator';\nimport { theme } from '../styles/theme.styles';\nimport { roomsSelectors } from '../store/rooms/rooms.selectors';\n\nlet drawerWidth = 320;\n\nconst styles = createStyles({\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      flexShrink: 0,\n      width: '100%',\n      maxWidth: drawerWidth,\n      transition: 'max-width 225ms cubic-bezier(0, 0, 0.2, 1) 0ms',\n    },\n  },\n});\n\ninterface NavBarProps extends WithStyles<typeof styles> {\n  mobileOpen: boolean;\n  handleDrawerToggle: () => void;\n}\n\nexport function NavBarC(props: NavBarProps) {\n  const { classes, mobileOpen } = props;\n  const drawerOpened = useSelector(roomsSelectors.drawerOpened);\n\n  return (\n    <nav className={classes.drawer} style={{ maxWidth: drawerOpened ? drawerWidth : 0 }}>\n      <Hidden smUp implementation=\"js\">\n        <Navigator\n          PaperProps={{ style: { width: drawerWidth } }}\n          variant=\"temporary\"\n          open={mobileOpen}\n          onClose={props.handleDrawerToggle}\n        />\n      </Hidden>\n      <Hidden xsDown implementation=\"css\">\n        <Navigator PaperProps={{ style: { width: drawerWidth } }} />\n      </Hidden>\n    </nav>\n  );\n}\n\nexport const NavBar = withStyles(styles)(NavBarC);\n","import clsx from 'clsx';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Link from '@material-ui/core/Link';\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { createStyles, ThemeProvider, withStyles, WithStyles } from '@material-ui/core/styles';\nimport { LinearProgress, Slide } from '@material-ui/core';\nimport { useSelector } from 'react-redux';\n\nimport { firebaseSelectors } from '../store/firebase/firebase.selectors';\nimport { Header } from './Header/Header';\nimport { LoaderScreen } from '../components/LoaderScreen';\nimport { NavBar } from './NavBar';\nimport { theme } from '../styles/theme.styles';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"mailto:markky21@gmail.com\">\n        Marcin Mirecki\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst styles = createStyles({\n  root: {\n    display: 'flex',\n    minHeight: '100vh',\n  },\n  lineLoader: {\n    position: 'fixed',\n    height: '4px',\n    top: 0,\n    left: 0,\n    width: '100%',\n    zIndex: 10000,\n    transition: 'max-height 0.2s ease;',\n  },\n  app: {\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    maxWidth: '100vw',\n    overflow: 'hidden',\n  },\n  appWhenAuth: {\n    maxWidth: `calc(100vw - ${theme.spacing(40)})`,\n  },\n  main: {\n    flex: 1,\n    padding: theme.spacing(6, 4),\n    background: theme.palette.background.default,\n  },\n\n  footer: {\n    padding: theme.spacing(1),\n    background: theme.palette.background.default,\n  },\n});\n\nexport interface PaperbaseProps extends WithStyles<typeof styles> {\n  children?: any;\n}\nfunction CoreLayoutC(props: PaperbaseProps) {\n  const { classes, children } = props;\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n  const isAuthenticated = useSelector(firebaseSelectors.isAuthenticated);\n  const isAuthenticating = useSelector(firebaseSelectors.authenticatingSelector);\n  const isRequesting = useSelector(firebaseSelectors.isRequesting);\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <LoaderScreen isAuthenticating={isAuthenticating}>\n        <div className={classes.root}>\n          <CssBaseline />\n          <Slide in={isRequesting} direction={'down'}>\n            <LinearProgress className={classes.lineLoader} />\n          </Slide>\n          {isAuthenticated && <NavBar mobileOpen={mobileOpen} handleDrawerToggle={handleDrawerToggle} />}\n\n          <div className={clsx(classes.app, isAuthenticated && classes.appWhenAuth)}>\n            <Header onDrawerToggle={handleDrawerToggle} />\n            <main className={classes.main}>{children}</main>\n            <footer className={classes.footer}>\n              <Copyright />\n            </footer>\n          </div>\n        </div>\n      </LoaderScreen>\n    </ThemeProvider>\n  );\n}\n\nexport const CoreLayout = withStyles(styles)(CoreLayoutC);\n","import React from 'react';\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\nimport { Grid, Grow, Paper, Typography } from '@material-ui/core';\nimport { useSelector } from 'react-redux';\n\nimport { firebaseSelectors } from '../../store/firebase/firebase.selectors';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n    },\n    paper: {\n      padding: theme.spacing(2, 4),\n      height: '100%',\n    },\n    label: { textAlign: 'center' },\n    value: {\n      lineHeight: '70%',\n      textAlign: 'center',\n    },\n  });\n\ninterface AppStatsProps extends WithStyles<typeof styles> {}\n\nfunction AppStatsC(props: AppStatsProps) {\n  const { classes } = props;\n\n  const appStats = useSelector(firebaseSelectors.applicationStats);\n  const statsView = [\n    { label: 'Players:', value: appStats?.players || 0 },\n    { label: 'Rooms created:', value: appStats?.rooms || 0 },\n    { label: 'Dice throws:', value: appStats?.diceThrows || 0 },\n  ];\n\n  return (\n    <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"stretch\" spacing={4} className={classes.root}>\n      {statsView.map((stat, id) => (\n        <Grow key={stat.label} in timeout={id * 300 + 300}>\n          <Grid item xs={4}>\n            <Paper className={classes.paper}>\n              <Typography component=\"h5\" variant=\"h5\" color=\"textSecondary\" className={classes.label}>\n                {stat.label}\n              </Typography>\n              <Typography component=\"div\" variant=\"h1\" className={classes.value}>\n                {stat.value}\n              </Typography>\n            </Paper>\n          </Grid>\n        </Grow>\n      ))}\n    </Grid>\n  );\n}\n\nexport const AppStats = withStyles(styles)(AppStatsC);\n","import clsx from 'clsx';\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport { useSelector } from 'react-redux';\n\nimport { AppStats } from '../../../modules/AppStats/AppStats';\nimport { Dice } from '../../../models/dice.model';\nimport { DiceCard } from '../../../modules/DiceCard/DiceCard';\nimport { DiceDashboard } from '../../../modules/DiceDashboard/DiceDashbard';\nimport { DiceServiceContextC } from '../../../contexts/DiceService.context';\nimport { IRoom } from '../../../models/rooms.model';\nimport { roomsSelectors } from '../../../store/rooms/rooms.selectors';\nimport { timer } from 'rxjs';\n\nconst styles = (theme: Theme) => ({\n  root: {\n    position: 'relative' as 'relative',\n    margin: theme.spacing(-4, -2),\n    height: `calc(100% + ${theme.spacing(10)}px)`,\n  },\n  cssGrid: {\n    display: 'grid',\n    gridTemplateColumns: '1fr',\n    gridTemplateRows: 'auto 1fr',\n    rowGap: `${theme.spacing(2)}px`,\n    columnGap: `${theme.spacing(2)}px`,\n  },\n  cssItem1: {\n    gridColumn: 1,\n    gridRow: 1,\n  },\n  cssItem2: {\n    gridColumn: 1,\n    gridRow: 2,\n  },\n  mainInfoCard: {},\n  diceCard: {},\n  diceDashboard: {\n    position: 'fixed' as 'fixed',\n    zIndex: 1000,\n    bottom: theme.spacing(8),\n    right: theme.spacing(3),\n  },\n});\n\nconst useStyles = makeStyles(styles);\n\ninterface HomeWrapperProps {}\n\nconst room: Partial<IRoom> = {\n  diceType: [Dice.D4, Dice.D6, Dice.D8, Dice.D10, Dice.D12, Dice.D20, Dice.D100],\n  gameMasterAvatar: `${process.env.PUBLIC_URL}/assets/images/avatar-1.jpg`,\n};\n\nexport function HomeWrapper(props: HomeWrapperProps) {\n  const classes = useStyles();\n  const diceRolling = useSelector(roomsSelectors.diceRolling);\n\n  const [showDiceCard, setShowDiceCard] = useState(false);\n  useEffect(() => {\n    timer(300).subscribe(() => setShowDiceCard(true));\n  }, []);\n\n  return (\n    <div className={clsx(classes.root, classes.cssGrid)}>\n      <section className={clsx(classes.mainInfoCard, classes.cssGrid)}>\n        <AppStats />\n      </section>\n\n      <DiceServiceContextC>\n        <nav className={classes.diceDashboard}>\n          <DiceDashboard visible={!diceRolling} room={room as IRoom} />\n        </nav>\n        <section className={classes.diceCard}>{showDiceCard && <DiceCard />}</section>\n      </DiceServiceContextC>\n    </div>\n  );\n}\n","export const appQuery = {\n  applicationStats: { path: 'applicationStats', storeAs: 'applicationStats' },\n};\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport '../../App.css';\nimport { HomeWrapper } from './components/HomeWrapper';\nimport { locationActions } from '../../store/location/location.actions';\nimport { LocationMatch } from '../../store/location/location.model';\nimport { locationSelectors } from '../../store/location/location.selectors';\nimport { useFirebaseConnect } from 'react-redux-firebase';\nimport { appQuery } from '../../queries/app.query';\n\nexport interface HomeProps {\n  match: LocationMatch;\n}\n\nexport function HomeC(props: HomeProps) {\n  const { match } = props;\n  const dispatch = useDispatch();\n  const storeLocationMatch = useSelector(locationSelectors.match);\n\n  useFirebaseConnect([appQuery.applicationStats]);\n\n  useEffect(() => {\n    if (JSON.stringify(match) !== JSON.stringify(storeLocationMatch)) {\n      dispatch(locationActions.matchChange(match));\n    }\n  });\n\n  return <HomeWrapper />;\n}\n\nexport const HomePage = {\n  path: '/',\n  component: HomeC,\n};\n","import React from 'react';\nimport { RouteProps } from 'react-router';\n\nimport { RouterPath } from '../../models/paths';\n\n// @ts-ignore\nconst RoomLazy = React.lazy(() => import('./RoomPage'));\n\nexport const Room: RouteProps = {\n  path: [RouterPath.ROOMS_PATH_ID],\n  component: RoomLazy as React.ComponentClass,\n};\n","import React from 'react';\nimport { RouteProps } from 'react-router';\n\nimport { RouterPath } from '../../models/paths';\n\n// @ts-ignore\nconst RoomListLazy = React.lazy(() => import('./RoomListPage'))\n\n\nexport const RoomList: RouteProps = {\n  path: [RouterPath.ROOM_CREATE_PATH, RouterPath.ROOMS_PATH],\n  component: RoomListLazy,\n};\n","import React, { Suspense } from 'react';\nimport { Backdrop, createStyles, Theme } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Route, Switch } from 'react-router-dom';\n\nimport { ChatList } from './ChatList';\nimport { CoreLayout } from '../layouts/CoreLayout';\nimport { HomePage } from './Home/HomePage';\nimport { Room } from './Room';\nimport { RoomList } from './RoomList';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    backdrop: {\n      zIndex: theme.zIndex.drawer + 1,\n      color: '#fff',\n    },\n  })\n);\n\nexport function CreateRoutes() {\n  const classes = useStyles();\n  return (\n    <CoreLayout>\n      <Suspense fallback={<Backdrop className={classes.backdrop} open />}>\n        <Switch>\n          <Route exact path={HomePage.path} component={HomePage.component} />\n\n          {[RoomList, Room, ChatList].map((settings, index) => (\n            <Route key={`Route-${index}`} {...settings} />\n          ))}\n\n          {/*<Route component={NotFoundRoute.component} />* // TODO to implement */}\n        </Switch>\n      </Suspense>\n    </CoreLayout>\n  );\n}\n","import { firestore, initializeApp } from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nimport 'firebase/firestore';\nimport firebaseApp from 'firebase/app';\nimport { createFirestoreInstance } from 'redux-firestore';\nimport { store } from './store.config';\n\nexport const firebaseConfig = {\n  apiKey: 'AIzaSyA0bXhCXcLJC9FGk3ynZoJP5KJ6CY3sqYY',\n  authDomain: 'roll-a-dice-4cba1.firebaseapp.com',\n  databaseURL: 'https://roll-a-dice-4cba1.firebaseio.com',\n  projectId: 'roll-a-dice-4cba1',\n  storageBucket: 'roll-a-dice-4cba1.appspot.com',\n  messagingSenderId: '768622256477',\n  appId: '1:768622256477:web:51a5c9f0ef4030d366c8b4',\n  measurementId: 'G-J2M3QQ0M89',\n};\n\nexport const reactReduxFirebaseConfig = {\n  userProfile: 'users',\n  useFirestoreForProfile: true,\n};\n\nexport const reactReduxFirebaseProps = {\n  firebase: firebaseApp,\n  config: reactReduxFirebaseConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance,\n};\n\ninitializeApp(firebaseConfig);\nfirestore();\n","import React from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core';\nimport { Provider } from 'react-redux';\nimport { ReactReduxFirebaseProvider } from 'react-redux-firebase';\n\nimport { HashRouter} from 'react-router-dom';\nimport { Core } from './containers/Core';\nimport { CreateRoutes } from './routes';\nimport { reactReduxFirebaseProps } from './config/firebase.config';\nimport { store } from './config/store.config';\n\nexport interface AppProps {}\n\nexport default function App(props: AppProps) {\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          // TODO: provide theming\n          type: prefersDarkMode ? 'dark' : 'light',\n        },\n      }),\n    [prefersDarkMode]\n  );\n\n  (window as any).theme = theme;\n\n  return (\n    <Provider store={store}>\n      <ReactReduxFirebaseProvider {...reactReduxFirebaseProps}>\n        <ThemeProvider theme={theme}>\n          <Core>\n            <HashRouter>\n              <CreateRoutes />\n            </HashRouter>\n          </Core>\n        </ThemeProvider>\n      </ReactReduxFirebaseProvider>\n    </Provider>\n  );\n}\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ninterface Config {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL((process as { env: { [key: string]: string } }).env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { version } from '../package.json';\nimport { env } from './config/main.config';\nimport { initScripts } from './utils/initail.utils';\n\n// Window Variables\n// ------------------------------------\n(window as any).version = version;\n(window as any).env = env;\ninitScripts();\n\n// Store Initialization\n// ------------------------------------\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const env = 'local';\n","import { AppState } from '../main';\n\nexport const roomsSelectors = {\n  selectedRoomUid: (state: AppState): string | null => state.rooms.selectedRoom || null,\n  drawerOpened: (state: AppState): boolean => state.rooms.drawerOpened,\n  chatOpened: (state: AppState): boolean => state.rooms.chatOpened,\n  playersOpened: (state: AppState): boolean => state.rooms.playersOpened,\n  diceRolling: (state: AppState): boolean => state.rooms.diceRolling,\n};\n","export interface IDiceBeforeThrow {\n  vectors: any;\n  notation: any;\n  throwRequestResult: number[];\n  emitResult: boolean;\n}\n\nexport interface IDiceThrowResult {\n  diceSet: string[];\n  result: number[];\n  emit: boolean;\n}\n\nexport enum Dice {\n  D4 = 'd4',\n  D6 = 'd6',\n  D8 = 'd8',\n  D10 = 'd10',\n  D12 = 'd12',\n  D20 = 'd20',\n  D100 = 'd100',\n}\n\ninterface IDiceVector {\n  set: Dice;\n  pos: {\n    x: number;\n    y: number;\n    z: number;\n  };\n  velocity: {\n    x: number;\n    y: number;\n    z: number;\n  };\n  angle: {\n    x: number;\n    y: number;\n    z: number;\n  };\n  axis: {\n    x: number;\n    y: number;\n    z: number;\n    a: number;\n  };\n}\n\nexport interface IDiceThrow {\n  diceSet: string[];\n  result: number[];\n}\n","import { AppState } from '../main';\nimport { Dictionary } from 'react-redux-firebase';\nimport { IChat } from '../../models/chats.model';\nimport { IProfile, IRoom, IRoomCreateForm } from '../../models/rooms.model';\n\nexport const firestoreSelectors = {\n  userChats: (state: AppState): Dictionary<IChat> | undefined => state.firestore.data.userChats,\n\n  getChat: (chatId: string | null) => (state: AppState): IChat | null =>\n    !!chatId && state.firestore.data.userChats ? state.firestore.data.userChats[chatId] : null,\n\n  selectedRoom: (state: AppState): IRoom | undefined => state.firestore.data.selectedRoom,\n\n  selectedRoomFormData: (state: AppState): IRoomCreateForm | undefined => {\n    if (!state.firestore.data.selectedRoom) return;\n    const {\n      roomName,\n      diceType,\n      description,\n      roomImage,\n      gameMasterAvatar,\n      campaignTitle,\n      maxPlayers,\n    } = state.firestore.data.selectedRoom;\n    return { roomName, diceType, description, roomImage, gameMasterAvatar, campaignTitle, maxPlayers };\n  },\n\n  userRoomsAsGameMaster: (state: AppState): Dictionary<IRoom> | undefined => state.firestore.data.userRoomsAsGameMaster,\n\n  userRoomsAsPlayer: (state: AppState): Dictionary<IRoom> | undefined => state.firestore.data.userRoomsAsPlayer,\n\n  allUserRoomsUid: (state: AppState): string[] =>\n    Object.keys({\n      ...state.firestore.data.userRoomsAsGameMaster,\n      ...state.firestore.data.userRoomsAsPlayer,\n    }),\n\n  usersProfiles: (state: AppState): Dictionary<IProfile> => state.firestore.data.usersProfiles || {},\n\n  selectedRoomPlayers: (state: AppState): IProfile[] => {\n    const usersProfiles: Dictionary<IProfile> = state.firestore.data.usersProfiles || {};\n    const playersUid = state.firestore.data.selectedRoom?.players || [];\n\n    return playersUid.map((uid: string) => usersProfiles[uid]).filter((p: IProfile) => !!p);\n  },\n\n  selectedRoomGameMasterProfile: (state: AppState): IProfile | null => {\n    const usersProfiles: Dictionary<IProfile> = state.firestore.data.usersProfiles || {};\n    const uid = state.firestore.data.selectedRoom?.gameMaster.uid;\n\n    return usersProfiles && uid ? usersProfiles[uid] : null;\n  },\n};\n"],"sourceRoot":""}