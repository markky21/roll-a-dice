{"version":3,"sources":["store/rooms/rooms.model.ts","store/location/location.selectors.ts","store/chats/chats.selectors.ts","store/chats/chats.reducer.ts","store/location/location.reducer.ts","store/rooms/rooms.reducer.ts","store/main.ts","config/store.config.ts","models/paths.ts","store/chats/chats.actions.ts","store/chats/chats.model.ts","store/location/location.model.ts","modules/ChatList/components/ChatListElements.tsx","modules/ChatList/ChatList.tsx","components/Loader.tsx","store/location/location.actions.ts","store/main.selectors.ts","utils/text.utils.ts","utils/date.utils.ts","store/firebase/firebase.selectors.ts","models/firestore.model.ts","queries/chat.query.ts","queries/profile.query.ts","queries/rooms.query.ts","containers/WhenAuthenticated.tsx","containers/Core.tsx","routes/ChatList/index.ts","containers/ProfileAvatar.tsx","components/Ornament.tsx","layouts/Header/Header.tsx","components/LoaderScreen.tsx","layouts/Navigator/components/NavigatorItem.tsx","containers/RoomCard.tsx","layouts/Navigator/Navigator.tsx","styles/theme.styles.ts","layouts/NavBar.tsx","layouts/CoreLayout.tsx","routes/Home.tsx","routes/Room/index.ts","routes/RoomList/index.ts","routes/index.tsx","config/firebase.config.ts","App.tsx","serviceWorker.ts","index.tsx","config/main.config.ts","store/firebase/firestore.selectors.ts","store/rooms/rooms.selectors.ts"],"names":["RoomsAction","locationSelectors","match","state","location","chatsSelectors","selectedChat","chats","profilesUidFromSelectedChat","firestore","data","userChats","players","initialState","chatsReducer","action","type","ChatsAction","SELECTED","payload","params","isExact","path","url","locationReducer","LocationAction","MATCH_CHANGE","selectedRoom","drawerOpened","chatOpened","playersOpened","diceRolling","roomsReducer","SET_DRAWER_OPEN_VALUE","SET_CHAT_OPEN_VALUE","SET_PLAYERS_OPEN_VALUE","SET_DICE_ROLLING","combineReducers","firebase","firebaseReducer","store","enhancers","window","hostname","devToolsExtension","__REDUX_DEVTOOLS_EXTENSION__","push","middleware","thunk","withExtraArgument","getFirebase","getFirestore","module","createStore","rooms","form","formReducer","asyncReducers","compose","applyMiddleware","configureStore","___INITIAL_STATE__","authError","RouterPath","chatsActions","setSelectedChat","ChatListType","ChatListElements","withStyles","theme","createStyles","root","width","backgroundColor","palette","background","paper","height","overflowY","item","cursor","props","classes","onChatClick","List","className","Object","keys","map","chatId","id","Grow","key","in","timeout","ListItem","onClick","selected","button","dense","alignItems","ListItemAvatar","Avatar","firstLettersJoined","roomName","ListItemText","primary","secondary","timeStampToFormattedDate","createdAt","ChatList","maxWidth","margin","overflow","searchBar","borderBottom","searchInput","fontSize","typography","block","display","addUser","marginRight","spacing","contentWrapper","showSearchBar","viewType","CARD","useSelector","firestoreSelectors","dispatch","useDispatch","useEffect","length","Paper","AppBar","position","color","elevation","Toolbar","Grid","container","xs","TextField","fullWidth","placeholder","InputProps","disableUnderline","Loader","flexDirection","justifyContent","zIndex","left","top","progress","svg","style","src","alt","locationActions","matchChange","mainSelectors","getAllNeededPlayersUid","selectedRoomPlayers","selectedChatPlayers","filter","v","i","a","indexOf","isGameMasterOfSelectedRoom","gameMaster","uid","profile","sentence","split","word","charAt","join","substring","toUpperCase","time","dayjs","format","firebaseSelectors","isRequesting","values","status","requesting","every","userProfile","authenticatingSelector","auth","isInitializing","isLoaded","authenticatedSelector","isEmpty","userConnected","connected","FirestoreCollection","chatsQuery","uidNonEmptyArray","collection","CHATS","where","storeAs","profileQuery","getProfilesByUid","uids","roomsQuery","ROOMS","DocUid","doc","WhenAuthenticated","useFirestore","useFirebase","selectedRoomUid","roomsSelectors","uniqProfilesUid","updateUserStatus","USERS","update","ref","onDisconnect","useFirebaseConnect","useFirestoreConnect","Fragment","Core","isAuthenticated","children","ChatListLazy","React","lazy","CHATS_PATH_ID","CHATS_PATH","component","ProfileAvatar","iconButtonAvatar","padding","avatarSize","border","main","history","useHistory","useState","anchorEl","setAnchorEl","IconButton","event","currentTarget","photoURL","displayName","keepMounted","open","Boolean","onClose","MenuItem","logout","then","HOME_PATH","login","provider","ROOMS_PATH","err","alert","message","Ornament","ornament","backgroundImage","backgroundRepeatX","backgroundRepeatY","backgroundSize","vartical","clsx","Header","secondaryBar","menuButton","marginLeft","link","textDecoration","common","white","borderColor","bottom","opacity","avatar","marginBottom","onDrawerToggle","Hidden","smUp","aria-label","LoaderScreen","visibility","transitionDelay","transition","visible","isAuthenticating","Fade","NavigatorItem","paddingTop","paddingBottom","itemCategoryWrapper","minHeight","itemCategory","itemCategoryAbsolute","itemActiveItem","itemPrimary","itemIcon","minWidth","expansionPanel","borderRadius","expansionPanelSummary","expansionPanelSummaryContainer","expandIcon","divider","boxShadow","icon","text","navLink","active","expandable","defaultExpanded","setNavLink","to","ExpansionPanel","ExpansionPanelSummary","aria-controls","content","ListItemIcon","ExpansionPanelDetails","RoomCard","cards","media","room","Card","CardMedia","image","title","CardContent","Typography","gutterBottom","variant","description","Navigator","logo","other","locationPath","selectedRoomData","Drawer","ROOMS_PATH_ID","disablePadding","EMBEDDED","ROOM_PATH","createMuiTheme","light","dark","default","fontFamily","h5","fontWeight","letterSpacing","shape","MuiTab","disableRipple","mixins","toolbar","overrides","MuiDrawer","MuiButton","label","textTransform","contained","MuiTabs","indicator","borderTopLeftRadius","borderTopRightRadius","breakpoints","up","MuiIconButton","MuiTooltip","tooltip","MuiDivider","MuiListItemText","fontWeightMedium","MuiListItemIcon","MuiAvatar","themeFn","styles","drawer","flexShrink","NavBar","mobileOpen","implementation","PaperProps","handleDrawerToggle","xsDown","Copyright","align","Link","href","Date","getFullYear","lineLoader","app","flex","footer","CoreLayout","setMobileOpen","ThemeProvider","CssBaseline","Slide","direction","LinearProgress","Home","storeLocationMatch","JSON","stringify","RoomLazy","Room","RoomListLazy","RoomList","ROOM_CREATE_PATH","useStyles","makeStyles","backdrop","CreateRoutes","fallback","Backdrop","exact","settings","index","reactReduxFirebaseProps","firebaseApp","config","useFirestoreForProfile","createFirestoreInstance","App","prefersDarkMode","useMediaQuery","useMemo","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","version","env","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","getChat","userRoomsAsGameMaster","userRoomsAsPlayer","allUserRoomsUid","usersProfiles","p","selectedRoomGameMasterProfile"],"mappings":"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","file":"static/js/main.2f727558.chunk.js","sourcesContent":["export enum RoomsAction {\n  SELECTED = '@@rooms/SELECTED',\n  SET_DRAWER_OPEN_VALUE = '@@rooms/SET_DRAWER_OPEN_VALUE',\n  SET_CHAT_OPEN_VALUE = '@@rooms/SET_CHAT_OPEN_VALUE',\n  SET_PLAYERS_OPEN_VALUE = '@@rooms/SET_PLAYERS_OPEN_VALUE',\n  SET_DICE_ROLLING = '@@rooms/SET_DICE_ROLLING',\n}\n\nexport interface RoomsState {\n  readonly selectedRoom: string | null;\n  readonly drawerOpened: boolean;\n  readonly chatOpened: boolean;\n  readonly playersOpened: boolean;\n  readonly diceRolling: boolean;\n}\n","import { AppState } from '../main';\nimport { LocationMatch } from './location.model';\n\nexport const locationSelectors = {\n  match: (state: AppState): LocationMatch => state.location.match,\n};\n","import { AppState } from '../main';\n\nexport const chatsSelectors = {\n  selectedChat: (state: AppState): string | null => state.chats.selectedChat,\n\n  profilesUidFromSelectedChat: (state: AppState): string[] => {\n    if (!state.chats.selectedChat) return [];\n\n    return state.firestore.data?.userChats?.[state.chats.selectedChat]?.players || [];\n  },\n};\n","import { Reducer } from 'redux';\nimport { ChatsAction, ChatsState } from './chats.model';\n\nexport const initialState: ChatsState = {\n  selectedChat: null,\n};\n\nexport const chatsReducer: Reducer<ChatsState> = (state = initialState, action) => {\n  switch (action.type) {\n    case ChatsAction.SELECTED: {\n      return { ...state, selectedChat: action.payload };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n","import { Reducer } from 'redux';\nimport { LocationAction, LocationState } from './location.model';\n\nexport const initialState: LocationState = {\n  match: {\n    params: {},\n    isExact: false,\n    path: '',\n    url: '',\n  },\n};\n\nexport const locationReducer: Reducer<LocationState> = (state: LocationState = initialState, action) => {\n  switch (action.type) {\n    case LocationAction.MATCH_CHANGE: {\n      return { ...state, match: action.payload };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n","import { Reducer } from 'redux';\nimport { RoomsAction, RoomsState } from './rooms.model';\n\nexport const initialState: RoomsState = {\n  selectedRoom: null,\n  drawerOpened: true,\n  chatOpened: true,\n  playersOpened: true,\n  diceRolling: false,\n};\n\nexport const roomsReducer: Reducer<RoomsState> = (state = initialState, action) => {\n  switch (action.type) {\n    case RoomsAction.SELECTED: {\n      return { ...state, selectedRoom: action.payload };\n    }\n    case RoomsAction.SET_DRAWER_OPEN_VALUE: {\n      return { ...state, drawerOpened: action.payload };\n    }\n    case RoomsAction.SET_CHAT_OPEN_VALUE: {\n      return { ...state, chatOpened: action.payload };\n    }\n    case RoomsAction.SET_PLAYERS_OPEN_VALUE: {\n      return { ...state, playersOpened: action.payload };\n    }\n    case RoomsAction.SET_DICE_ROLLING: {\n      return { ...state, diceRolling: action.payload };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n","import { Action, combineReducers, Reducer } from 'redux';\nimport { firebaseReducer, FirebaseReducer, FirestoreReducer } from 'react-redux-firebase';\nimport { reducer as formReducer } from 'redux-form';\n// @ts-ignore\nimport firestore from 'redux-firestore/lib/reducer';\n\nimport {\n  FirebaseQuerySchema,\n  FirebaseUserProfile,\n  FirestoreQuerySchema,\n  FirestoreSchema,\n} from './firebase/firebase.types';\nimport { IProfile } from '../models/rooms.model';\nimport { chatsReducer } from './chats/chats.reducer';\nimport { ChatsState } from './chats/chats.model';\nimport { locationReducer } from './location/location.reducer';\nimport { LocationState } from './location/location.model';\nimport { RoomsState } from './rooms/rooms.model';\nimport { roomsReducer } from './rooms/rooms.reducer';\n\n/**********************************************************\n * Interfaces\n **********************************************************/\n\ninterface RootState {\n  firestore: FirestoreReducer.Reducer & {\n    data: FirestoreSchema & FirestoreQuerySchema;\n  };\n  firebase: FirebaseReducer.Reducer<FirebaseUserProfile> & { profile: IProfile;\n  data: FirebaseQuerySchema | any\n  };\n}\n\n/**********************************************************\n * functions\n **********************************************************/\nexport function makeRootReducer<S = any, A extends Action = Action>(asyncReducers?: Reducer<S, A>) {\n  return combineReducers({\n    firebase: firebaseReducer,\n    firestore,\n    chats: chatsReducer,\n    rooms: roomsReducer,\n    location: locationReducer,\n    form: formReducer,\n    ...asyncReducers,\n  });\n}\n\nconst rootReducer = combineReducers<RootState>({\n  firebase: firebaseReducer,\n  firestore,\n});\n\nexport interface AppState extends ReturnType<typeof rootReducer> {\n  chats: ChatsState;\n  rooms: RoomsState;\n  location: LocationState;\n}\n","import thunk from 'redux-thunk';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { getFirebase } from 'react-redux-firebase';\nimport { getFirestore } from 'redux-firestore';\n\nimport { makeRootReducer } from '../store/main';\n\nconst initialState = (window as any).___INITIAL_STATE__ || {\n  firebase: { authError: null },\n};\n\nexport const store = configureStore(initialState);\n\nfunction configureStore(initialState: any): any {\n  // ======================================================\n  // Store Enhancers\n  // ======================================================\n  const enhancers = [];\n\n  if (window && window.location && window.location.hostname === 'localhost') {\n    const devToolsExtension = (window as any).__REDUX_DEVTOOLS_EXTENSION__;\n    if (typeof devToolsExtension === 'function') {\n      enhancers.push(devToolsExtension());\n    }\n  }\n\n  // ======================================================\n  // Middleware Configuration\n  // ======================================================\n  const middleware = [\n    thunk.withExtraArgument({ getFirebase, getFirestore }),\n    // This is where you add other middleware like redux-observable\n  ];\n\n  // ======================================================\n  // Store Instantiation and HMR Setup\n  // ======================================================\n  const store = createStore(makeRootReducer(), initialState, compose(applyMiddleware(...middleware), ...enhancers));\n\n  if ((module as any).hot) {\n    // Enable Webpack hot module replacement for reducers\n    (module as any).hot.accept('../store/main', () => {\n      const nextRootReducer = require('../store/main'); // eslint-disable-line global-require, @typescript-eslint/no-var-requires\n      store.replaceReducer(nextRootReducer);\n    });\n  }\n\n  return store;\n}\n","export enum RouterPath {\n  CHATS_PATH = '/chats',\n  CHATS_PATH_ID = '/chats/:chatId',\n  HOME_PATH = '/',\n  ROOM_CREATE_PATH = '/rooms/create',\n  ROOM_PATH = '/room',\n  ROOMS_PATH = '/rooms',\n  ROOMS_PATH_ID = '/room/:roomId',\n}\n","import { action } from 'typesafe-actions';\nimport { ChatsAction } from './chats.model';\n\nexport const chatsActions = {\n  setSelectedChat: (payload: string | null) => action(ChatsAction.SELECTED, payload),\n};\n","export enum ChatsAction {\n  SELECTED = '@@chats/SELECTED',\n}\n\nexport interface ChatsState {\n  readonly selectedChat: string | null;\n}\n","import { RouterPath } from '../../models/paths';\n\nexport enum LocationAction {\n  MATCH_CHANGE = '@@location/MATCH_CHANGE',\n}\n\nexport interface LocationMatch<Params extends { [K in keyof Params]?: string } = {}> {\n  params: Params;\n  isExact: boolean;\n  path: RouterPath | string;\n  url: string;\n}\n\nexport interface LocationState {\n  readonly match: LocationMatch;\n}\n","import React from 'react';\nimport { Avatar, Grow, List, ListItem, ListItemAvatar, ListItemText } from '@material-ui/core';\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\nimport { Dictionary } from 'react-redux-firebase';\n\nimport { firstLettersJoined } from '../../../utils/text.utils';\nimport { IChat } from '../../../models/chats.model';\nimport { timeStampToFormattedDate } from '../../../utils/date.utils';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n      backgroundColor: theme.palette.background.paper,\n      height: '20vh',\n      overflowY: 'scroll',\n    },\n    item: {\n      cursor: 'pointer',\n    },\n  });\n\ninterface ChatListElementProps extends WithStyles<typeof styles> {\n  chats: Dictionary<IChat>;\n  selectedChat: string | null;\n  onChatClick: (chatId: string) => void;\n}\n\nfunction ChatListElementC(props: ChatListElementProps) {\n  const { classes, chats, onChatClick, selectedChat } = props;\n\n  const renderElement = () =>\n    Object.keys(chats).map((chatId, id) => (\n      <Grow key={chatId} in timeout={1000 * id + 300}>\n        <ListItem\n          onClick={() => onChatClick(chatId)}\n          selected={chatId === selectedChat}\n          className={classes.item}\n          button\n          dense\n          alignItems=\"flex-start\"\n        >\n          <ListItemAvatar>\n            <Avatar>{firstLettersJoined(chats[chatId].roomName || 'No name')}</Avatar>\n          </ListItemAvatar>\n          <ListItemText\n            primary={chats[chatId].roomName || 'No name'}\n            secondary={timeStampToFormattedDate(chats[chatId].createdAt)}\n          />\n        </ListItem>\n      </Grow>\n    ));\n\n  return <List className={classes.root}>{renderElement()}</List>;\n}\n\nexport const ChatListElements = withStyles(styles)(ChatListElementC);\n","import AppBar from '@material-ui/core/AppBar';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport React, { useEffect } from 'react';\nimport SearchIcon from '@material-ui/icons/Search';\nimport TextField from '@material-ui/core/TextField';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\nimport { Dictionary } from 'react-redux-firebase';\nimport { Grow } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { IChat } from '../../models/chats.model';\nimport { ChatListElements } from './components/ChatListElements';\nimport { chatsActions } from '../../store/chats/chats.actions';\nimport { chatsSelectors } from '../../store/chats/chats.selectors';\nimport { firestoreSelectors } from '../../store/firebase/firestore.selectors';\n\nexport enum ChatListType {\n  EMBEDDED = 'EMBEDDED',\n  CARD = 'CARD',\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    paper: {\n      maxWidth: 936,\n      margin: 'auto',\n      overflow: 'hidden',\n    },\n    searchBar: {\n      borderBottom: '1px solid rgba(0, 0, 0, 0.12)',\n    },\n    searchInput: {\n      fontSize: theme.typography.fontSize,\n    },\n    block: {\n      display: 'block',\n    },\n    addUser: {\n      marginRight: theme.spacing(1),\n    },\n    contentWrapper: {\n      margin: '16px 16px',\n    },\n  });\n\nexport interface ChatListProps extends WithStyles<typeof styles> {\n  showSearchBar?: boolean;\n  viewType?: ChatListType;\n}\n\nfunction ChatListC(props: ChatListProps) {\n  const { classes, showSearchBar = true, viewType = ChatListType.CARD } = props;\n  const userChats: Dictionary<IChat> = useSelector(firestoreSelectors.userChats) || {};\n  const selectedChat: string | null = useSelector(chatsSelectors.selectedChat);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    return () => {\n      dispatch(chatsActions.setSelectedChat(null));\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (!selectedChat && Object.keys(userChats || {}).length) {\n      dispatch(chatsActions.setSelectedChat(Object.keys(userChats as any)[0]));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [!!selectedChat, Object.keys(userChats || {}).length === 0]);\n\n  const onChatClick = (chatId: string) => {\n    dispatch(chatsActions.setSelectedChat(chatId));\n  };\n\n  return (\n    <Grow in>\n      {viewType === ChatListType.CARD ? (\n        <Paper className={classes.paper}>\n          {showSearchBar && (\n            <AppBar className={classes.searchBar} position=\"static\" color=\"default\" elevation={0}>\n              <Toolbar>\n                <Grid container spacing={2} alignItems=\"center\">\n                  <Grid item>\n                    <SearchIcon className={classes.block} color=\"inherit\" />\n                  </Grid>\n                  <Grid item xs>\n                    <TextField\n                      fullWidth\n                      placeholder=\"Search chat by room name or players\"\n                      InputProps={{\n                        disableUnderline: true,\n                        className: classes.searchInput,\n                      }}\n                    />\n                  </Grid>\n                </Grid>\n              </Toolbar>\n            </AppBar>\n          )}\n          <div className={classes.contentWrapper}>\n            <ChatListElements chats={userChats} onChatClick={onChatClick} selectedChat={selectedChat} />\n          </div>\n        </Paper>\n      ) : (\n        <ChatListElements chats={userChats} onChatClick={onChatClick} selectedChat={selectedChat} />\n      )}\n    </Grow>\n  );\n}\n\nexport const ChatList = withStyles(styles)(ChatListC);\n","import React from 'react';\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      alignItems: 'center',\n      flexDirection: 'column',\n      justifyContent: 'flex-start',\n      height: '100%',\n      width: '100%',\n      backgroundColor: theme.palette.background.default,\n      position: 'absolute',\n      zIndex: 10000,\n      left: 0,\n      top: 0,\n    },\n    progress: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '100%',\n    },\n    svg: {\n      width: '15vw',\n      height: '15vh',\n    },\n  });\n\ninterface LoaderProps extends WithStyles<typeof styles> {\n  style?: Object;\n}\n\nfunction LoaderC(props: LoaderProps) {\n  const { classes, style } = props;\n\n  return (\n    <div className={classes.root} style={style}>\n      <div className={classes.progress}>\n        <img className={classes.svg} src=\"/assets/svg/loader-knot.svg\" alt=\"Roll a Dice...\" />\n      </div>\n    </div>\n  );\n}\n\nexport const Loader = withStyles(styles)(LoaderC);\n","import { action } from 'typesafe-actions';\n\nimport { LocationAction, LocationMatch } from './location.model';\n\nexport const locationActions = {\n  matchChange: (payload: LocationMatch) => action(LocationAction.MATCH_CHANGE, payload),\n};\n","import { AppState } from './main';\nimport { firestoreSelectors } from './firebase/firestore.selectors';\nimport { chatsSelectors } from './chats/chats.selectors';\n\nexport const mainSelectors = {\n  getAllNeededPlayersUid: (state: AppState): string[] => {\n    const selectedRoomPlayers = firestoreSelectors.selectedRoom(state)?.players || [];\n    const selectedChatPlayers = chatsSelectors.profilesUidFromSelectedChat(state) || [];\n    return [...selectedChatPlayers, ...selectedRoomPlayers].filter((v, i, a) => a.indexOf(v) === i);\n  },\n\n  isGameMasterOfSelectedRoom: (state: AppState): boolean => {\n    const selectedRoomGameMaster = state.firestore.data.selectedRoom\n      ? state.firestore.data.selectedRoom.gameMaster.uid\n      : 'unknown';\n\n    return selectedRoomGameMaster === state.firebase.profile.uid;\n  },\n};\n","export const firstLettersJoined: (sentence: string) => string = sentence =>\n  sentence\n    .split(' ')\n    .map(word => word.charAt(0))\n    .join('')\n    .substring(0, 2)\n    .toUpperCase();\n","import dayjs from 'dayjs';\n\nexport const timeStampToFormattedDate: (time: string | number) => string = time =>\n  dayjs(time).format('dddd, MMMM D YYYY');\n","import { AppState } from '../main';\n\nexport const firebaseSelectors = {\n  isRequesting: (state: AppState): boolean => !Object.values(state.firestore.status.requesting).every(v => !v),\n\n  userProfile: (state: AppState) => state.firebase.profile,\n\n  authenticatingSelector: (state: AppState) => {\n    const {\n      firebase: { auth, isInitializing },\n    } = state;\n    return !auth.isLoaded || isInitializing;\n  },\n\n  authenticatedSelector: (state: AppState) => {\n    const {\n      firebase: { auth },\n    } = state;\n    return !auth.isEmpty && !!auth.uid;\n  },\n\n  userConnected: (state: AppState) => state.firebase.data.connected,\n};\n","export enum FirestoreCollection {\n  CHATS = 'chats',\n  USERS = 'users',\n  ROOMS = 'rooms',\n}\n","import { ReduxFirestoreQuerySetting } from 'react-redux-firebase';\nimport { FirestoreCollection } from '../models/firestore.model';\n\nexport const chatsQuery = {\n  getUserChats: (uid: string): ReduxFirestoreQuerySetting => {\n    const uidNonEmptyArray = uid && uid?.length !== 0 ? uid : 'unknown';\n\n    return {\n      collection: FirestoreCollection.CHATS,\n      where: [['players', 'array-contains', uidNonEmptyArray]],\n      storeAs: 'userChats',\n    };\n  },\n};\n","import { ReduxFirestoreQuerySetting } from 'react-redux-firebase';\n\nexport const profileQuery = {\n  getProfilesByUid: (uids: string[] = []): ReduxFirestoreQuerySetting => ({\n    collection: 'users',\n    where: [['uid', 'in', uids]],\n    storeAs: 'usersProfiles',\n  }),\n  connected: { path: '.info/connected',  storeAs: 'connected' }\n};\n","import { ReduxFirestoreQuerySetting } from 'react-redux-firebase';\nimport { FirestoreCollection } from '../models/firestore.model';\n\nexport const roomsQuery = {\n         getUserRoomsAsGameMaster: (uid: string): ReduxFirestoreQuerySetting => ({\n           collection: FirestoreCollection.ROOMS,\n           where: [['gameMaster.uid', '==', uid]],\n           storeAs: 'userRoomsAsGameMaster',\n         }),\n\n         getUserRoomsAsPlayer: (uid: string): ReduxFirestoreQuerySetting => ({\n           collection: FirestoreCollection.ROOMS,\n           where: [['players', 'array-contains', uid]],\n           storeAs: 'userRoomsAsPlayer',\n         }),\n\n         getRoom: (DocUid: string): ReduxFirestoreQuerySetting => {\n           const doc = DocUid.length ? DocUid : 'unknown';\n           return {\n             collection: FirestoreCollection.ROOMS,\n             doc,\n             storeAs: 'selectedRoom',\n           };\n         },\n       };\n","import React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useFirebase, useFirebaseConnect, useFirestore, useFirestoreConnect } from 'react-redux-firebase';\n\nimport { chatsQuery } from '../queries/chat.query';\nimport { firebaseSelectors } from '../store/firebase/firebase.selectors';\nimport { profileQuery } from '../queries/profile.query';\nimport { roomsQuery } from '../queries/rooms.query';\nimport { roomsSelectors } from '../store/rooms/rooms.selectors';\nimport { mainSelectors } from '../store/main.selectors';\nimport { FirestoreCollection } from '../models/firestore.model';\n\nexport function WhenAuthenticated() {\n  const firestore = useFirestore();\n  const firebase = useFirebase();\n\n  const profile = useSelector(firebaseSelectors.userProfile);\n  const selectedRoomUid = useSelector(roomsSelectors.selectedRoomUid);\n  const uniqProfilesUid: string[] = [...useSelector(mainSelectors.getAllNeededPlayersUid)];\n  const userConnected = useSelector(firebaseSelectors.userConnected);\n\n  function updateUserStatus(connected: boolean): void {\n    const docUserRef = firestore.doc(`${FirestoreCollection.USERS}/${profile.uid}`);\n    docUserRef.update({ connected });\n  }\n\n  function updateUserStatusOnDisconnect(): void {\n    const docUserRef = firebase.ref(`${FirestoreCollection.USERS}/${profile.uid}`);\n    docUserRef.onDisconnect().update({ connected: false });\n  }\n\n  useEffect(() => {\n    if (userConnected !== true || !profile.uid) {\n      return;\n    }\n    updateUserStatus(userConnected);\n    updateUserStatusOnDisconnect();\n    return () => {\n      updateUserStatus(false);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [userConnected, profile.uid]);\n\n  useFirebaseConnect([profileQuery.connected]);\n\n  useFirestoreConnect([\n    /**\n     * Get all profiles data listed in array (for chat and room)\n     */\n    profileQuery.getProfilesByUid(uniqProfilesUid.length ? uniqProfilesUid : ['unknown']),\n    /**\n     * Get all profiles listed in chat messages\n     */\n    chatsQuery.getUserChats(profile.uid),\n    /**\n     * Get all rooms where user is MG\n     */\n    roomsQuery.getUserRoomsAsGameMaster(profile.uid || 'unknown'),\n    /**\n     * Get all rooms where user is Player\n     */\n    roomsQuery.getUserRoomsAsPlayer(profile.uid || 'unknown'),\n    /**\n     * Get selectedRoom by player\n     */\n    roomsQuery.getRoom(selectedRoomUid || 'unknown'),\n  ]);\n  return <React.Fragment />;\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { WhenAuthenticated } from './WhenAuthenticated';\nimport { firebaseSelectors } from '../store/firebase/firebase.selectors';\n\ninterface CoreProps {\n  children: React.ReactElement;\n}\n\nexport function Core(props: CoreProps) {\n  const isAuthenticated = useSelector(firebaseSelectors.authenticatedSelector);\n\n  return (\n    <React.Fragment>\n      {isAuthenticated && <WhenAuthenticated />}\n      {props.children}\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport { RouteProps } from 'react-router';\n\nimport { RouterPath } from '../../models/paths';\n\n// @ts-ignore\nconst ChatListLazy = React.lazy(() => import('./ChatListPage'));\n\nexport const ChatList: RouteProps = {\n  path: [RouterPath.CHATS_PATH_ID, RouterPath.CHATS_PATH],\n  component: ChatListLazy as React.ComponentClass,\n};\n","import { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Avatar from '@material-ui/core/Avatar';\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useFirebase } from 'react-redux-firebase';\nimport { Menu, MenuItem } from '@material-ui/core';\n\nimport { useSelector } from 'react-redux';\nimport { firebaseSelectors } from '../store/firebase/firebase.selectors';\nimport { RouterPath } from '../models/paths';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    iconButtonAvatar: {\n      padding: 4,\n    },\n    avatarSize: {\n      border: `4px solid ${theme.palette.primary.main}`,\n      width: theme.spacing(6),\n      height: theme.spacing(6),\n    },\n  });\n\ninterface ProfileAvatarProps extends WithStyles<typeof styles> {}\n\nfunction ProfileAvatarC(props: ProfileAvatarProps) {\n  const firebase = useFirebase();\n  const history = useHistory();\n  const profile = useSelector(firebaseSelectors.userProfile);\n  const isAuthenticated = useSelector(firebaseSelectors.authenticatedSelector);\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleLogout = () => {\n    firebase.logout().then(() => {\n      setAnchorEl(null);\n      history.push(RouterPath.HOME_PATH);\n    });\n  };\n\n  const handleLogin = () => {\n    firebase\n      .login({ provider: 'google', type: 'popup' })\n      .then(() => {\n        setAnchorEl(null);\n        history.push(RouterPath.ROOMS_PATH);\n      })\n      .catch(err => alert(err.message));\n  };\n\n  const { classes } = props;\n\n  return (\n    <React.Fragment>\n      <IconButton color=\"inherit\" className={classes.iconButtonAvatar} onClick={handleClick}>\n        <Avatar src={profile.photoURL} alt={profile.displayName} className={classes.avatarSize} />\n      </IconButton>\n\n      <Menu id=\"simple-menu\" anchorEl={anchorEl} keepMounted open={Boolean(anchorEl)} onClose={() => setAnchorEl(null)}>\n        {isAuthenticated ? (\n          <MenuItem onClick={handleLogout}>Logout</MenuItem>\n        ) : (\n          <MenuItem onClick={handleLogin}>Login with Google</MenuItem>\n        )}\n      </Menu>\n    </React.Fragment>\n  );\n}\n\nexport const ProfileAvatar = withStyles(styles)(ProfileAvatarC);\n","import clsx from 'clsx';\nimport React from 'react';\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ornament: {\n      backgroundImage: 'url(/assets/svg/ornament-knot.svg)',\n      width: '100%',\n      height: '100%',\n      backgroundRepeatX: 'repeat',\n      backgroundRepeatY: 'no-repeat',\n      backgroundSize: 'contain',\n    },\n    vartical: {\n      backgroundImage: 'url(/assets/svg/ornament-knot-vartical.svg)',\n      backgroundRepeatX: 'no-repeat',\n      backgroundRepeatY: 'repeat',\n    },\n  });\n\ninterface OrnamentProps extends WithStyles<typeof styles> {\n  vartical?: boolean;\n}\n\nfunction OrnamentC(props: OrnamentProps) {\n  const { classes, vartical } = props;\n\n  return <div className={clsx(classes.ornament, vartical && classes.vartical)} />;\n}\n\nexport const Ornament = withStyles(styles)(OrnamentC);\n","import AppBar from '@material-ui/core/AppBar';\nimport Grid from '@material-ui/core/Grid';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport React from 'react';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\n\nimport { ProfileAvatar } from '../../containers/ProfileAvatar';\nimport { Ornament } from '../../components/Ornament';\n\nconst lightColor = 'rgba(255, 255, 255, 0.7)';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    secondaryBar: {\n      zIndex: 0,\n    },\n    menuButton: {\n      marginLeft: -theme.spacing(1),\n    },\n    link: {\n      textDecoration: 'none',\n      color: lightColor,\n      '&:hover': {\n        color: theme.palette.common.white,\n      },\n    },\n    button: {\n      borderColor: lightColor,\n    },\n    ornament: {\n      bottom: '2px',\n      height: '24px',\n      opacity: 0.2,\n      position: 'absolute',\n      zIndex: -1,\n      width: ' 100%',\n    },\n    avatar: {\n      marginBottom: '-16px',\n    },\n  });\n\ninterface HeaderProps extends WithStyles<typeof styles> {\n  onDrawerToggle: () => void;\n}\n\nfunction HeaderC(props: HeaderProps) {\n  const { classes, onDrawerToggle } = props;\n\n  return (\n    <React.Fragment>\n      <AppBar color=\"primary\" position=\"sticky\" elevation={2}>\n        <Toolbar>\n          <Grid container spacing={1} alignItems=\"center\">\n            <Hidden smUp>\n              <Grid item>\n                <IconButton\n                  color=\"inherit\"\n                  aria-label=\"open drawer\"\n                  onClick={onDrawerToggle}\n                  className={classes.menuButton}\n                >\n                  <MenuIcon />\n                </IconButton>\n              </Grid>\n            </Hidden>\n            <Grid item xs />\n            <Grid item>\n              <div className={classes.avatar}>\n                <ProfileAvatar />\n              </div>\n            </Grid>\n          </Grid>\n        </Toolbar>\n        <div className={classes.ornament}>\n          <Ornament />\n        </div>\n      </AppBar>\n    </React.Fragment>\n  );\n}\n\nexport const Header = withStyles(styles)(HeaderC);\n","import React from 'react';\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\nimport { Fade } from '@material-ui/core';\n\nimport { Loader } from './Loader';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    container: {\n      opacity: 0,\n      visibility: 'hidden',\n      transitionDelay: '1300ms',\n      transition: 'opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms',\n    },\n    visible: {\n      opacity: 1,\n      visibility: 'visible',\n    },\n  });\n\ninterface LoaderScreenProps extends WithStyles<typeof styles> {\n  children: React.ReactElement;\n  isAuthenticating: boolean;\n}\n\nexport const LoaderScreenC = (props: LoaderScreenProps) => {\n  const { children, isAuthenticating = true } = props;\n\n  return (\n    <React.Fragment>\n      <Fade in={isAuthenticating}>\n        <Loader />\n      </Fade>\n      {children}\n    </React.Fragment>\n  );\n};\n\nexport const LoaderScreen = withStyles(styles)(LoaderScreenC);\n","import clsx from 'clsx';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport React from 'react';\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\nimport { DrawerProps } from '@material-ui/core/Drawer';\nimport { ExpansionPanel, ExpansionPanelDetails, ExpansionPanelSummary } from '@material-ui/core';\nimport { NavLink } from 'react-router-dom';\nimport { Omit } from '@material-ui/types';\n\nimport { RouterPath } from '../../../models/paths';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    item: {\n      paddingTop: 1,\n      paddingBottom: 1,\n      color: 'rgba(255, 255, 255, 0.7)',\n      '&:hover,&:focus': {\n        backgroundColor: 'rgba(255, 255, 255, 0.08)',\n      },\n    },\n    itemCategoryWrapper: {\n      minHeight: '60px',\n    },\n    itemCategory: {\n      width: '100%',\n      paddingTop: theme.spacing(2),\n      paddingBottom: theme.spacing(2),\n    },\n    itemCategoryAbsolute: {\n      position: 'absolute',\n      top: 0,\n    },\n    itemActiveItem: {\n      color: theme.palette.secondary.main,\n    },\n    itemPrimary: {\n      fontSize: 'inherit',\n    },\n    itemIcon: {\n      minWidth: 'auto',\n      marginRight: theme.spacing(2),\n    },\n    expansionPanel: {\n      borderRadius: '0 !important',\n      padding: '0 !important',\n      margin: '0 !important',\n      backgroundColor: (theme.palette.background as any).secondary,\n    },\n    expansionPanelSummary: {\n      margin: '0 !important',\n      padding: '0 16px 0px 0 !important',\n    },\n    expansionPanelSummaryContainer: {\n      padding: '0 !important',\n      margin: '0 !important',\n    },\n    expandIcon: {\n      color: 'rgba(255, 255, 255, 0.7)',\n    },\n    divider: {\n      boxShadow: '0 -1px 0 #404854 inset',\n    },\n  });\n\nexport interface NavigatorItemProps extends Omit<DrawerProps, 'classes'>, WithStyles<typeof styles> {\n  active?: boolean;\n  children?: React.ReactElement | React.ReactFragment;\n  icon?: React.ReactElement;\n  navLink?: RouterPath;\n  text?: string;\n  expandable?: boolean;\n  defaultExpanded?: boolean;\n}\n\nfunction NavigatorItemC(props: NavigatorItemProps) {\n  const { classes, children, icon, text, navLink, active, expandable, defaultExpanded } = props;\n\n  const setNavLink = (children: React.ReactElement) =>\n    navLink ? <NavLink to={navLink}>{children}</NavLink> : <React.Fragment>{children}</React.Fragment>;\n\n  return expandable ? (\n    <ExpansionPanel className={clsx(classes.expansionPanel, classes.divider)} defaultExpanded={defaultExpanded}>\n      <ExpansionPanelSummary\n        aria-controls=\"additional-actions1-content\"\n        aria-label=\"Expand\"\n        classes={{ content: classes.expansionPanelSummaryContainer, expandIcon: classes.expandIcon }}\n        className={classes.expansionPanelSummary}\n        expandIcon={<ExpandMoreIcon />}\n        id=\"additional-actions1-header\"\n      >\n        <div className={classes.itemCategoryWrapper} />\n\n        {setNavLink(\n          <ListItem\n            button\n            className={clsx(\n              classes.item,\n              classes.itemCategory,\n              active && classes.itemActiveItem,\n              classes.itemCategoryAbsolute\n            )}\n          >\n            {icon && <ListItemIcon className={classes.itemIcon}>{icon}</ListItemIcon>}\n            {text && <ListItemText classes={{ primary: classes.itemPrimary }}>{text}</ListItemText>}\n          </ListItem>\n        )}\n      </ExpansionPanelSummary>\n      {children && <ExpansionPanelDetails>{children}</ExpansionPanelDetails>}\n    </ExpansionPanel>\n  ) : (\n    setNavLink(\n      <ListItem\n        button\n        className={clsx(classes.item, classes.itemCategory, active && classes.itemActiveItem, classes.divider)}\n      >\n        {icon && <ListItemIcon className={classes.itemIcon}>{icon}</ListItemIcon>}\n        {text && <ListItemText classes={{ primary: classes.itemPrimary }}>{text}</ListItemText>}\n      </ListItem>\n    )\n  );\n}\n\nexport const NavigatorItem = withStyles(styles)(NavigatorItemC);\n","import React from 'react';\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\nimport { Card, CardContent, CardMedia, Typography } from '@material-ui/core';\n\nimport { IRoom } from '../models/rooms.model';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    cards: {\n      maxWidth: 936,\n      width: '100%',\n    },\n    media: {\n      height: 140,\n    },\n  });\n\ninterface RoomCardProps extends WithStyles<typeof styles> {\n  room: IRoom;\n}\n\nfunction RoomCardC(props: RoomCardProps) {\n  const { classes, room } = props;\n\n  return (\n    <Card className={classes.cards}>\n      <CardMedia className={classes.media} image=\"/assets/images/fantasy-wallpapers.jpg\" title=\"Room image\" />\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n          {room.roomName}\n        </Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {room.description}\n        </Typography>\n        <p>\n          <Typography variant=\"caption\" color=\"textSecondary\" component=\"span\">\n            Room Game Master:\n          </Typography>\n          <br />\n          <Typography variant=\"subtitle1\" color=\"textSecondary\" component=\"span\">\n            {room.gameMaster.displayName}\n          </Typography>\n        </p>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport const RoomCard = withStyles(styles)(RoomCardC);\n","import ChatIcon from '@material-ui/icons/Chat';\nimport Drawer, { DrawerProps } from '@material-ui/core/Drawer';\nimport GamesIcon from '@material-ui/icons/Games';\nimport HomeIcon from '@material-ui/icons/Home';\nimport MeetingRoomIcon from '@material-ui/icons/MeetingRoom';\nimport React from 'react';\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\nimport { List, ListItem } from '@material-ui/core';\nimport { Omit } from '@material-ui/types';\nimport { useSelector } from 'react-redux';\n\nimport { ChatList, ChatListType } from '../../modules/ChatList/ChatList';\nimport { firestoreSelectors } from '../../store/firebase/firestore.selectors';\nimport { locationSelectors } from '../../store/location/location.selectors';\nimport { NavigatorItem } from './components/NavigatorItem';\nimport { RoomCard } from '../../containers/RoomCard';\nimport { RouterPath } from '../../models/paths';\nimport { roomsSelectors } from '../../store/rooms/rooms.selectors';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    logo: {\n      fontSize: 24,\n      color: theme.palette.common.white,\n      '&:hover,&:focus': {\n        backgroundColor: 'rgba(255, 255, 255, 0.08)',\n      },\n      backgroundColor: (theme.palette.background as any).secondary,\n      boxShadow: '0 -1px 0 #404854 inset',\n      paddingTop: theme.spacing(2),\n      paddingBottom: theme.spacing(2),\n    },\n  });\n\nexport interface NavigatorProps extends Omit<DrawerProps, 'classes'>, WithStyles<typeof styles> {}\n\nfunction NavigatorC(props: NavigatorProps) {\n  const { classes, ...other } = props;\n\n  const { path: locationPath } = useSelector(locationSelectors.match);\n  const selectedRoomData = useSelector(firestoreSelectors.selectedRoom);\n  const drawerOpened = useSelector(roomsSelectors.drawerOpened);\n\n  return (\n    <Drawer\n      open={drawerOpened}\n      variant={locationPath === RouterPath.ROOMS_PATH_ID ? 'persistent' : 'permanent'}\n      {...other}\n    >\n      <List disablePadding>\n        <ListItem className={classes.logo}>Roll a Dice...</ListItem>\n      </List>\n\n      <NavigatorItem\n        navLink={RouterPath.HOME_PATH}\n        icon={<HomeIcon />}\n        text=\"Home Page\"\n        active={RouterPath.HOME_PATH === locationPath}\n      />\n\n      <NavigatorItem\n        navLink={RouterPath.ROOMS_PATH}\n        icon={<MeetingRoomIcon />}\n        text=\"Rooms\"\n        expandable={locationPath.indexOf(RouterPath.ROOMS_PATH) === -1}\n        active={locationPath.indexOf(RouterPath.ROOMS_PATH) > -1}\n      >\n        <React.Fragment>List here</React.Fragment>\n      </NavigatorItem>\n\n      <NavigatorItem\n        navLink={RouterPath.CHATS_PATH}\n        icon={<ChatIcon />}\n        text=\"Chats\"\n        expandable={locationPath.indexOf(RouterPath.CHATS_PATH) === -1}\n        active={locationPath.indexOf(RouterPath.CHATS_PATH) > -1}\n      >\n        <ChatList viewType={ChatListType.EMBEDDED} />\n      </NavigatorItem>\n\n      {selectedRoomData && (\n        <NavigatorItem\n          icon={<GamesIcon />}\n          text=\"Room Ditails\"\n          expandable={true}\n          active={locationPath.indexOf(RouterPath.ROOM_PATH) > -1}\n          defaultExpanded\n        >\n          <RoomCard room={selectedRoomData} />\n        </NavigatorItem>\n      )}\n    </Drawer>\n  );\n}\n\nexport const Navigator = withStyles(styles)(NavigatorC);\n","import { createMuiTheme, Theme } from '@material-ui/core/styles';\n\nfunction themeFn() {\n  let theme = createMuiTheme({\n    palette: {\n      primary: {\n        light: '#afaf4c',\n        main: '#9b9c20',\n        dark: '#6c6d16',\n      },\n      secondary: {\n        light: '#cba234',\n        main: '#be8b02',\n        dark: '#856101',\n      },\n      background: {\n        default: '#e0e0d3',\n        paper: '#f4f4f2',\n        // @ts-ignore\n        secondary: '#111b0e',\n      },\n    },\n    typography: {\n      fontFamily: [\n        'ringbearermedium',\n        '-apple-system',\n        'BlinkMacSystemFont',\n        '\"Segoe UI\"',\n        'Roboto',\n        '\"Helvetica Neue\"',\n        'Arial',\n        'sans-serif',\n        '\"Apple Color Emoji\"',\n        '\"Segoe UI Emoji\"',\n        '\"Segoe UI Symbol\"',\n      ].join(','),\n      h5: {\n        fontWeight: 500,\n        fontSize: 26,\n        letterSpacing: 0.5,\n      },\n    },\n    shape: {\n      borderRadius: 8,\n    },\n    props: {\n      MuiTab: {\n        disableRipple: true,\n      },\n    },\n    mixins: {\n      toolbar: {\n        minHeight: 48,\n      },\n    },\n  });\n\n  theme = {\n    ...theme,\n    overrides: {\n      MuiDrawer: {\n        paper: {\n          backgroundColor: '#121b0f',\n        },\n      },\n      MuiButton: {\n        label: {\n          textTransform: 'none',\n        },\n        contained: {\n          boxShadow: 'none',\n          '&:active': {\n            boxShadow: 'none',\n          },\n        },\n      },\n      MuiTabs: {\n        root: {\n          marginLeft: theme.spacing(1),\n        },\n        indicator: {\n          height: 3,\n          borderTopLeftRadius: 3,\n          borderTopRightRadius: 3,\n          backgroundColor: theme.palette.common.white,\n        },\n      },\n      MuiTab: {\n        root: {\n          textTransform: 'none',\n          margin: '0 16px',\n          minWidth: 0,\n          padding: 0,\n          [theme.breakpoints.up('md')]: {\n            padding: 0,\n            minWidth: 0,\n          },\n        },\n      },\n      MuiIconButton: {\n        root: {\n          padding: theme.spacing(1),\n        },\n      },\n      MuiTooltip: {\n        tooltip: {\n          borderRadius: 4,\n        },\n      },\n      MuiDivider: {\n        root: {\n          backgroundColor: '#404854',\n        },\n      },\n      MuiListItemText: {\n        primary: {\n          fontWeight: theme.typography.fontWeightMedium,\n        },\n      },\n      MuiListItemIcon: {\n        root: {\n          color: 'inherit',\n          marginRight: 0,\n          '& svg': {\n            fontSize: 20,\n          },\n        },\n      },\n      MuiAvatar: {\n        root: {\n          width: 32,\n          height: 32,\n        },\n      },\n    },\n  };\n\n  return theme;\n}\n\nexport const theme = themeFn();\n\nexport const darkTheme: Theme = { ...theme, palette: { ...theme.palette, type: 'dark' } };\nexport const lightTheme: Theme = { ...theme, palette: { ...theme.palette, type: 'dark' } };\n","import Hidden from '@material-ui/core/Hidden';\nimport React from 'react';\nimport { createStyles, withStyles, WithStyles } from '@material-ui/core/styles';\nimport { useSelector } from 'react-redux';\n\nimport { Navigator } from './Navigator/Navigator';\nimport { theme } from '../styles/theme.styles';\nimport { roomsSelectors } from '../store/rooms/rooms.selectors';\n\nlet drawerWidth = 320;\n\nconst styles = createStyles({\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      flexShrink: 0,\n      width: '100%',\n      maxWidth: drawerWidth,\n      transition: 'max-width 225ms cubic-bezier(0, 0, 0.2, 1) 0ms',\n    },\n  },\n});\n\ninterface NavBarProps extends WithStyles<typeof styles> {\n  mobileOpen: boolean;\n  handleDrawerToggle: () => void;\n}\n\nexport function NavBarC(props: NavBarProps) {\n  const { classes, mobileOpen } = props;\n  const drawerOpened = useSelector(roomsSelectors.drawerOpened);\n\n  return (\n    <nav className={classes.drawer} style={{ maxWidth: drawerOpened ? drawerWidth : 0 }}>\n      <Hidden smUp implementation=\"js\">\n        <Navigator\n          PaperProps={{ style: { width: drawerWidth } }}\n          variant=\"temporary\"\n          open={mobileOpen}\n          onClose={props.handleDrawerToggle}\n        />\n      </Hidden>\n      <Hidden xsDown implementation=\"css\">\n        <Navigator PaperProps={{ style: { width: drawerWidth } }} />\n      </Hidden>\n    </nav>\n  );\n}\n\nexport const NavBar = withStyles(styles)(NavBarC);\n","import CssBaseline from '@material-ui/core/CssBaseline';\nimport Link from '@material-ui/core/Link';\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { createStyles, ThemeProvider, withStyles, WithStyles } from '@material-ui/core/styles';\nimport { LinearProgress, Slide } from '@material-ui/core';\nimport { useSelector } from 'react-redux';\n\nimport { firebaseSelectors } from '../store/firebase/firebase.selectors';\nimport { Header } from './Header/Header';\nimport { LoaderScreen } from '../components/LoaderScreen';\nimport { NavBar } from './NavBar';\nimport { theme } from '../styles/theme.styles';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"mailto:markky21@gmail.com\">\n        Marcin Mirecki\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst styles = createStyles({\n  root: {\n    display: 'flex',\n    minHeight: '100vh',\n  },\n  lineLoader: {\n    position: 'fixed',\n    height: '4px',\n    top: 0,\n    left: 0,\n    width: '100%',\n    zIndex: 10000,\n    transition: 'max-height 0.2s ease;',\n  },\n  app: {\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  main: {\n    flex: 1,\n    padding: theme.spacing(6, 4),\n    background: theme.palette.background.default,\n  },\n  footer: {\n    padding: theme.spacing(1),\n    background: theme.palette.background.default,\n  },\n});\n\nexport interface PaperbaseProps extends WithStyles<typeof styles> {\n  children?: any;\n}\nfunction CoreLayoutC(props: PaperbaseProps) {\n  const { classes, children } = props;\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n  const isAuthenticated = useSelector(firebaseSelectors.authenticatedSelector);\n  const isAuthenticating = useSelector(firebaseSelectors.authenticatingSelector);\n  const isRequesting = useSelector(firebaseSelectors.isRequesting);\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <LoaderScreen isAuthenticating={isAuthenticating}>\n        <div className={classes.root}>\n          <CssBaseline />\n          <Slide in={isRequesting} direction={'down'}>\n            <LinearProgress className={classes.lineLoader} />\n          </Slide>\n          {isAuthenticated && <NavBar mobileOpen={mobileOpen} handleDrawerToggle={handleDrawerToggle} />}\n\n          <div className={classes.app}>\n            <Header onDrawerToggle={handleDrawerToggle} />\n            <main className={classes.main}>{children}</main>\n            <footer className={classes.footer}>\n              <Copyright />\n            </footer>\n          </div>\n        </div>\n      </LoaderScreen>\n    </ThemeProvider>\n  );\n}\n\nexport const CoreLayout = withStyles(styles)(CoreLayoutC);\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport '../App.css';\nimport { locationActions } from '../store/location/location.actions';\nimport { LocationMatch } from '../store/location/location.model';\nimport { locationSelectors } from '../store/location/location.selectors';\n\n// const styles = (theme: Theme) => ({});\n\n// const useStyles = makeStyles(styles);\n\nexport interface HomeProps {\n  match: LocationMatch;\n}\n\nexport function HomeC(props: HomeProps) {\n  // const classes = useStyles();\n\n  const { match } = props;\n  const dispatch = useDispatch();\n  const storeLocationMatch = useSelector(locationSelectors.match);\n\n  useEffect(() => {\n    if (JSON.stringify(match) !== JSON.stringify(storeLocationMatch)) {\n      dispatch(locationActions.matchChange(match));\n    }\n  });\n\n  return <div>Henlooo</div>;\n}\n\nexport const Home = {\n  path: '/',\n  component: HomeC,\n};\n","import React from 'react';\nimport { RouteProps } from 'react-router';\n\nimport { RouterPath } from '../../models/paths';\n\n// @ts-ignore\nconst RoomLazy = React.lazy(() => import('./RoomPage'));\n\nexport const Room: RouteProps = {\n  path: [RouterPath.ROOMS_PATH_ID],\n  component: RoomLazy as React.ComponentClass,\n};\n","import React from 'react';\nimport { RouteProps } from 'react-router';\n\nimport { RouterPath } from '../../models/paths';\n\n// @ts-ignore\nconst RoomListLazy = React.lazy(() => import('./RoomListPage'))\n\n\nexport const RoomList: RouteProps = {\n  path: [RouterPath.ROOM_CREATE_PATH, RouterPath.ROOMS_PATH],\n  component: RoomListLazy,\n};\n","import React, { Suspense } from 'react';\nimport { Backdrop, createStyles, Theme } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Route, Switch } from 'react-router-dom';\n\nimport { ChatList } from './ChatList';\nimport { CoreLayout } from '../layouts/CoreLayout';\nimport { Home } from './Home';\nimport { Room } from './Room';\nimport { RoomList } from './RoomList';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    backdrop: {\n      zIndex: theme.zIndex.drawer + 1,\n      color: '#fff',\n    },\n  })\n);\n\nexport function CreateRoutes() {\n  const classes = useStyles();\n  return (\n    <CoreLayout>\n      <Suspense fallback={<Backdrop className={classes.backdrop} open />}>\n        <Switch>\n          <Route exact path={Home.path} component={Home.component} />\n\n          {[RoomList, Room, ChatList].map((settings, index) => (\n            <Route key={`Route-${index}`} {...settings} />\n          ))}\n\n          {/*<Route component={NotFoundRoute.component} />* // TODO to implement */}\n        </Switch>\n      </Suspense>\n    </CoreLayout>\n  );\n}\n","import firebase from 'firebase';\nimport 'firebase/auth';\nimport 'firebase/database';\nimport 'firebase/firestore';\nimport firebaseApp from 'firebase/app';\nimport { createFirestoreInstance } from 'redux-firestore';\nimport { store } from './store.config';\n\nexport const firebaseConfig = {\n  apiKey: 'AIzaSyA0bXhCXcLJC9FGk3ynZoJP5KJ6CY3sqYY',\n  authDomain: 'roll-a-dice-4cba1.firebaseapp.com',\n  databaseURL: 'https://roll-a-dice-4cba1.firebaseio.com',\n  projectId: 'roll-a-dice-4cba1',\n  storageBucket: 'roll-a-dice-4cba1.appspot.com',\n  messagingSenderId: '768622256477',\n  appId: '1:768622256477:web:51a5c9f0ef4030d366c8b4',\n  measurementId: 'G-J2M3QQ0M89',\n};\n\nexport const reactReduxFirebaseConfig = {\n  userProfile: 'users',\n  useFirestoreForProfile: true,\n};\n\nexport const reactReduxFirebaseProps = {\n  firebase: firebaseApp,\n  config: reactReduxFirebaseConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance,\n};\n\nfirebase.initializeApp(firebaseConfig);\nfirebase.firestore();\n","import React from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core';\nimport { Provider } from 'react-redux';\nimport { ReactReduxFirebaseProvider } from 'react-redux-firebase';\n\nimport { BrowserRouter } from 'react-router-dom';\nimport { Core } from './containers/Core';\nimport { CreateRoutes } from './routes';\nimport { reactReduxFirebaseProps } from './config/firebase.config';\nimport { store } from './config/store.config';\n\nexport interface AppProps {}\n\nexport default function App(props: AppProps) {\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          // TODO: provide theming\n          type: prefersDarkMode ? 'dark' : 'light',\n        },\n      }),\n    [prefersDarkMode]\n  );\n\n  (window as any).theme = theme;\n\n  return (\n    <Provider store={store}>\n      <ReactReduxFirebaseProvider {...reactReduxFirebaseProps}>\n        <ThemeProvider theme={theme}>\n          <Core>\n            <BrowserRouter>\n              <CreateRoutes />\n            </BrowserRouter>\n          </Core>\n        </ThemeProvider>\n      </ReactReduxFirebaseProvider>\n    </Provider>\n  );\n}\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ninterface Config {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL((process as { env: { [key: string]: string } }).env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { version } from '../package.json';\nimport { env } from './config/main.config';\nimport { initScripts } from './utils/initail.utils';\n\n// Window Variables\n// ------------------------------------\n(window as any).version = version;\n(window as any).env = env;\ninitScripts();\n\n// Store Initialization\n// ------------------------------------\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const env = 'local';\n","import { AppState } from '../main';\nimport { Dictionary } from 'react-redux-firebase';\nimport { IChat } from '../../models/chats.model';\nimport { IProfile, IRoom } from '../../models/rooms.model';\n\nexport const firestoreSelectors = {\n  userChats: (state: AppState): Dictionary<IChat> | undefined => state.firestore.data.userChats,\n\n  getChat: (chatId: string | null) => (state: AppState): IChat | null =>\n    !!chatId && state.firestore.data.userChats ? state.firestore.data.userChats[chatId] : null,\n\n  selectedRoom: (state: AppState): IRoom | undefined => state.firestore.data.selectedRoom,\n\n  userRoomsAsGameMaster: (state: AppState): Dictionary<IRoom> | undefined => state.firestore.data.userRoomsAsGameMaster,\n\n  userRoomsAsPlayer: (state: AppState): Dictionary<IRoom> | undefined => state.firestore.data.userRoomsAsPlayer,\n\n  allUserRoomsUid: (state: AppState): string[] =>\n    Object.keys({\n      ...state.firestore.data.userRoomsAsGameMaster,\n      ...state.firestore.data.userRoomsAsPlayer,\n    }),\n\n  usersProfiles: (state: AppState): Dictionary<IProfile> => state.firestore.data.usersProfiles || {},\n\n  selectedRoomPlayers: (state: AppState): IProfile[] => {\n    const usersProfiles: Dictionary<IProfile> = state.firestore.data.usersProfiles || {};\n    const playersUid = state.firestore.data.selectedRoom?.players || [];\n\n    return playersUid.map((uid: string) => usersProfiles[uid]).filter((p: IProfile) => !!p);\n  },\n\n  selectedRoomGameMasterProfile: (state: AppState): IProfile | null => {\n    const usersProfiles: Dictionary<IProfile> = state.firestore.data.usersProfiles || {};\n    const uid = state.firestore.data.selectedRoom?.gameMaster.uid;\n\n    return usersProfiles && uid ? usersProfiles[uid] : null;\n  },\n};\n","import { AppState } from '../main';\n\nexport const roomsSelectors = {\n  selectedRoomUid: (state: AppState): string | null => state.rooms.selectedRoom,\n  drawerOpened: (state: AppState): boolean => state.rooms.drawerOpened,\n  chatOpened: (state: AppState): boolean => state.rooms.chatOpened,\n  playersOpened: (state: AppState): boolean => state.rooms.playersOpened,\n  diceRolling: (state: AppState): boolean => state.rooms.diceRolling,\n};\n"],"sourceRoot":""}