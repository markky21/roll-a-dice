{"version":3,"sources":["utils/router.utils.ts","modules/Chatter/index.ts","modules/RoomCreate/components/RoomCreateImage.tsx","modules/RoomCreate/components/RoomCreateForm.tsx","modules/RoomCreate/RoomCreate.tsx","routes/Room/RoomPage/RoomPage.enhancer.tsx","modules/LogsDashboard/components/LogListItem.tsx","modules/LogsDashboard/components/LogDiceThrow.tsx","modules/LogsDashboard/components/LogsTimeline.tsx","modules/LogsDashboard/components/LogsTabs.tsx","modules/LogsDashboard/LogsDashboard.tsx","modules/Players/components/PlayerTile.tsx","modules/Players/Players.tsx","components/SpeedDial.tsx","containers/RoomCreateInRoom.tsx","routes/Room/RoomPage/components/RoomSpeedDial.tsx","routes/Room/RoomPage/components/RoomPageView.tsx","routes/Room/RoomPage/index.ts","routes/Room/RoomPage/RoomPage.tsx"],"names":["locationHelper","locationHelperBuilder","history","createBrowserHistory","UserIsAuthenticated","connectedRouterRedirect","redirectPath","RouterPath","HOME_PATH","AuthenticatingComponent","Loader","wrapperDisplayName","authenticatedSelector","firebaseSelectors","isAuthenticated","authenticatingSelector","redirectAction","newLoc","dispatch","push","type","payload","message","allowRedirectBack","state","firebase","auth","isEmpty","isInitializing","isLoaded","ownProps","getRedirectQueryParam","ROOMS_PATH","Chatter","React","lazy","styles","createStyles","image","width","height","backgroundPosition","backgroundSize","useStyles","makeStyles","RoomCreateImage","props","classes","form","useSelector","mainSelectors","getFormCreateRoom","Collapse","in","roomImage","length","CardMedia","className","title","RoomCreateForm","reduxForm","validate","values","errors","createRoomFormModel","roomName","name","maxPlayers","forEach","field","diceType","handleSubmit","pristine","submitting","handleClose","invalid","onSubmit","DialogContent","dividers","campaignTitle","description","gameMasterAvatar","style","DialogActions","Button","color","disabled","onClick","RoomCreate","open","onClose","initialValues","theme","useTheme","fullScreen","useMediaQuery","breakpoints","down","Dialog","aria-labelledby","DialogTitle","enhancedRoomList","compose","setDisplayName","withRouter","LogListItem","memo","withStyles","itemHeader","paddingRight","spacing","boxSizing","itemContent","profile","log","children","displayName","photoURL","avatarUrl","ListItem","alignItems","ListItemAvatar","Avatar","alt","src","ListItemText","primary","Grid","container","direction","justify","Typography","component","variant","dateUtils","timeStampToDetailedTime","timestamp","LogDiceThrow","resultSorted","diceUtils","sortObjectWithDiceKey","result","Fragment","item","xs","Object","keys","map","diceKey","key","join","LogsTimeline","root","backgroundColor","palette","background","paper","overflowY","profiles","logs","List","reverse","id","Divider","light","authorUid","Log","DICE_ROLL","LogsTabs","position","zIndex","overflow","bar","borderBottom","tab","overflowX","tabContent","margin","visible","useState","value","setValue","firestoreSelectors","usersProfiles","selectedRoomLogs","Slide","Paper","elevation","AppBar","Tabs","onChange","event","newValue","indicatorColor","textColor","aria-label","Tab","label","a11yProps","axis","index","onChangeIndex","TabPanel","dir","other","role","hidden","Box","p","LogsDashboard","top","left","PlayerTile","tile","borderRadius","marginRight","maxWidth","padding","titleDisable","warning","masterGame","right","titleBar","player","gameMaster","GridListTile","GridListTileBar","connected","actionIcon","Tooltip","IconButton","clsx","Players","display","flexWrap","justifyContent","gridList","transform","players","selectedRoomPlayers","selectedRoomGameMasterProfile","GridList","cols","Grow","timeout","uid","SpeedDialWrapper","actions","setOpen","SpeedDial","ariaLabel","icon","SpeedDialIcon","onOpen","action","SpeedDialAction","tooltipTitle","callback","RoomCreateInRoom","firestore","useFirestore","selectedRoomFormData","selectedRoomUid","roomsSelectors","formValues","undefined","doc","FirestoreCollection","ROOMS","update","then","room","e","console","RoomSpeedDialWrapper","snackbar","useDispatch","isGameMasterOfSelectedRoom","drawerOpened","chatOpened","playersOpened","showRoomForm","setShowRoomForm","text","snackbarConfig","setSnackbarConfig","actionsAdditional","cb","roomsActions","setDrawerOpenValue","setChatOpenValue","setPlayersOpenValue","navigator","permissions","query","clipboard","writeText","window","location","href","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","Alert","severity","mainGrid","gridTemplateColumns","gridTemplateRows","columnGap","rowGap","gridItemLogs","gridColumn","gridRow","gridItemChatter","gridItemDiceCard","gridItemPlayers","speedDial","bottom","diceDashboard","maxHeight","transition","noHeight","RoomView","diceRolling","selectedRoom","isUserARoomPlayerOrGameMaster","diceCardFullHeight","DiceCard","DiceDashboard","match","selectedRoomData","storeLocationMatch","locationSelectors","userProfile","useEffect","JSON","stringify","locationActions","matchChange","setSelectedRoom","params","indexOf","documentRef","runTransaction","t","get","data","err","onEnterTheRoomAddUserToPlayers","createdAt","chatsActions","setSelectedChat","chatUid"],"mappings":"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","file":"static/js/7.015a7835.chunk.js","sourcesContent":["import locationHelperBuilder from 'redux-auth-wrapper/history4/locationHelper';\nimport { connectedRouterRedirect } from 'redux-auth-wrapper/history4/redirect';\nimport { createBrowserHistory } from 'history';\nimport { RouterPath } from '../models/paths';\n\nimport { AppState } from '../store/main';\nimport { firebaseSelectors } from '../store/firebase/firebase.selectors';\nimport { Loader } from '../components/Loader';\n\nconst locationHelper = locationHelperBuilder({});\nconst history = createBrowserHistory();\n\nconst AUTHED_REDIRECT = 'AUTHED_REDIRECT';\nconst UNAUTHED_REDIRECT = 'UNAUTHED_REDIRECT';\n\n/**\n * Higher Order Component that redirects to `/login` instead\n * rendering if user is not authenticated (default of redux-auth-wrapper).\n * @param {Component} componentToWrap - Component to wrap\n * @return {Component} wrappedComponent\n */\nexport const UserIsAuthenticated = connectedRouterRedirect({\n  redirectPath: RouterPath.HOME_PATH,\n  AuthenticatingComponent: Loader,\n  wrapperDisplayName: 'UserIsAuthenticated',\n  // Want to redirect the user when they are done loading and authenticated\n  authenticatedSelector: firebaseSelectors.isAuthenticated,\n  authenticatingSelector: firebaseSelectors.authenticatingSelector,\n  redirectAction: ((newLoc: any) => (dispatch: any) => {\n    // Use push, replace, and go to navigate around.\n    history.push(newLoc);\n    dispatch({\n      type: UNAUTHED_REDIRECT,\n      payload: { message: 'User is not authenticated.' },\n    });\n  }) as any,\n});\n\n/**\n * Higher Order Component that redirects to listings page or most\n * recent route instead rendering if user is not authenticated. This is useful\n * routes that should not be displayed if a user is logged in, such as the\n * login route.\n * @param {Component} componentToWrap - Component to wrap\n * @return {Component} wrappedComponent\n */\nexport const UserIsNotAuthenticated = connectedRouterRedirect({\n  AuthenticatingComponent: Loader,\n  wrapperDisplayName: 'UserIsNotAuthenticated',\n  allowRedirectBack: false,\n  // Want to redirect the user when they are done loading and authenticated\n  authenticatedSelector: (state: AppState) => {\n    const {\n      firebase: { auth },\n    } = state;\n    return auth.isEmpty;\n  },\n  authenticatingSelector: ({ firebase: { auth, isInitializing } }) => !auth.isLoaded || isInitializing,\n  redirectPath: (state, ownProps) => locationHelper.getRedirectQueryParam(ownProps) || RouterPath.ROOMS_PATH,\n  redirectAction: ((newLoc: any) => (dispatch: any) => {\n    // Use push, replace, and go to navigate around.\n    history.push(newLoc);\n    dispatch({\n      type: AUTHED_REDIRECT,\n      payload: { message: 'User is not authenticated.' },\n    });\n  }) as any,\n});\n\n/*\n/!**\n * Render children based on route config objects\n * @param {Array} routes - Routes settings array\n * @param {Object} match - Routes settings array\n * @param {Object} parentProps - Props to pass to children from parent\n *!/\nexport function renderChildren(routes, match, parentProps) {\n  return routes.map(route => (\n    <Route\n      key={`${match.url}-${route.path}`}\n      path={`${match.url}/${route.path}`}\n      render={props => <route.component {...parentProps} {...props} />}\n    />\n  ));\n}*/\n","import React from 'react';\n\nexport const Chatter = React.lazy(() => import('./Chatter'));\n","import React from 'react';\nimport { CardMedia, Collapse, createStyles } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useSelector } from 'react-redux';\n\nimport { mainSelectors } from '../../../store/main.selectors';\n\ninterface RoomCreateImageProps {}\n\nconst styles = createStyles({\n  image: {\n    width: '100%',\n    height: '15vh',\n    backgroundPosition: 'center',\n    backgroundSize: 'cover',\n  },\n});\n\nconst useStyles = makeStyles(styles);\n\nexport function RoomCreateImage(props: RoomCreateImageProps) {\n  const classes = useStyles();\n  const form = useSelector(mainSelectors.getFormCreateRoom);\n\n  return (\n    <Collapse in={form?.roomImage?.length > 8}>\n      {form?.roomImage && (\n        <CardMedia\n          className={classes.image}\n          image={form?.roomImage}\n          title=\"Room Image\"\n        />\n      )}\n    </Collapse>\n  );\n}\n","import React from 'react';\nimport { Button, DialogActions, DialogContent } from '@material-ui/core';\nimport { InjectedFormProps, reduxForm } from 'redux-form';\n\nimport { createRoomFormModel } from '../../../models/rooms.model';\nimport { FormFieldCheckboxGroup, FormFieldText } from '../../../components/FormComponents';\nimport { RoomCreateImage } from './RoomCreateImage';\n\nconst validate = (values: any) => {\n  const errors: any = {};\n\n  [createRoomFormModel.roomName.name, createRoomFormModel.maxPlayers.name].forEach(field => {\n    if (!values[field]) {\n      errors[field] = 'Required';\n    }\n  });\n\n  if (!(values[createRoomFormModel.diceType.name] && values[createRoomFormModel.diceType.name].length)) {\n    errors[createRoomFormModel.diceType.name] = 'Select at least one dice';\n  }\n  return errors;\n};\n\ninterface RoomCreateFormProps extends InjectedFormProps {\n  handleClose: () => void;\n}\n\nfunction RoomCreateFormC(props: RoomCreateFormProps) {\n  const { handleSubmit, pristine, submitting, handleClose, invalid } = props;\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <RoomCreateImage />\n      <DialogContent dividers>\n        <FormFieldText {...createRoomFormModel.roomName} />\n        <FormFieldText {...createRoomFormModel.roomImage} />\n        <FormFieldText {...createRoomFormModel.campaignTitle} />\n        <FormFieldText {...createRoomFormModel.description} />\n        <FormFieldText {...createRoomFormModel.gameMasterAvatar} />\n        <div style={{ width: '50%' }}>\n          <FormFieldText {...createRoomFormModel.maxPlayers} />\n        </div>\n        <FormFieldCheckboxGroup {...createRoomFormModel.diceType} />\n      </DialogContent>\n      <DialogActions>\n        <Button type=\"submit\" color=\"primary\" disabled={invalid || pristine || submitting}>\n          Submit\n        </Button>\n        <Button type=\"button\" onClick={handleClose} color=\"primary\">\n          Cancel\n        </Button>\n      </DialogActions>\n    </form>\n  );\n}\n\nexport const RoomCreateForm = reduxForm({\n  form: 'createRoom',\n  validate,\n})(RoomCreateFormC as any) as any;\n","import React from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { Dialog, DialogTitle, useMediaQuery } from '@material-ui/core';\nimport { RoomCreateForm } from './components/RoomCreateForm';\n\nimport { IRoomCreateForm } from '../../models/rooms.model';\n\nexport interface RoomCreateProps {\n  open: boolean;\n  onClose: () => void;\n  onSubmit: (formValues: IRoomCreateForm) => void;\n  initialValues?: IRoomCreateForm;\n}\n\nexport function RoomCreate(props: RoomCreateProps) {\n  const { open, onClose, onSubmit, initialValues } = props;\n\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('xs'));\n\n  return (\n    <Dialog fullScreen={fullScreen} open={open} onClose={onClose} aria-labelledby=\"responsive-dialog-title\">\n      <DialogTitle>Create new Room</DialogTitle>\n      <RoomCreateForm handleClose={onClose} onSubmit={onSubmit} initialValues={initialValues} />\n    </Dialog>\n  );\n}\n","import { compose } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport { setDisplayName } from 'recompose';\nimport { UserIsAuthenticated } from '../../../utils/router.utils';\n\nexport const enhancedRoomList = compose(\n  // Set component display name (more clear in dev/error tools)\n  setDisplayName('EnhancedRoomList'),\n  // Add props.match\n  withRouter,\n  // Redirect to /login if user is not logged in\n  UserIsAuthenticated\n);\n","import React from 'react';\nimport { Avatar, Grid, ListItem, ListItemAvatar, ListItemText, Typography } from '@material-ui/core';\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\n\nimport { dateUtils } from '../../../utils/date.utils';\nimport { IProfile, IRoomLog } from '../../../models/rooms.model';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    itemHeader: {\n      width: '40%',\n      paddingRight: theme.spacing(2),\n      boxSizing: 'border-box',\n    },\n    itemContent: {\n      width: '60%',\n      boxSizing: 'border-box',\n    },\n  });\n\nexport interface LogListItemProps extends WithStyles<typeof styles> {\n  profile: IProfile;\n  log: IRoomLog;\n  children?: any;\n}\n\nfunction LogListItemC(props: LogListItemProps) {\n  const { profile, log, classes, children } = props;\n  const { displayName, photoURL, avatarUrl } = profile || {};\n\n  return (\n    <ListItem alignItems=\"flex-start\">\n      <div className={classes.itemHeader}>\n        <ListItemAvatar>\n          <Avatar alt={displayName} src={avatarUrl || photoURL} />\n        </ListItemAvatar>\n        <ListItemText\n          primary={\n            <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"flex-start\">\n              <Typography component={'span'} variant={'body1'}>\n                {displayName}\n              </Typography>\n              <Typography component={'span'} variant={'caption'} color={'textSecondary'}>\n                {dateUtils.timeStampToDetailedTime(log.timestamp)}\n              </Typography>\n            </Grid>\n          }\n        />\n      </div>\n      <div className={classes.itemContent}>{children}</div>\n    </ListItem>\n  );\n}\n\nexport const LogListItem = React.memo(withStyles(styles)(LogListItemC));\n","import React from 'react';\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\nimport { Grid, Typography } from '@material-ui/core';\n\nimport { IRoomLog } from '../../../models/rooms.model';\nimport { diceUtils } from '../../../utils/dice.utils';\n\nconst styles = (theme: Theme) => createStyles({});\n\nexport interface LogDiceThrowProps extends WithStyles<typeof styles> {\n  log: IRoomLog;\n}\n\nfunction LogDiceThrowC(props: LogDiceThrowProps) {\n  const { log } = props;\n\n  const resultSorted = diceUtils.sortObjectWithDiceKey(log.payload?.result || []);\n  return (\n    <React.Fragment>\n      <Grid container spacing={0}>\n        <Grid item xs={6}>\n          <Typography component={'span'} variant={'caption'} color={'textSecondary'}>\n            log type:\n          </Typography>\n        </Grid>\n        <Grid item xs={6}>\n          <Typography component={'span'} variant={'overline'} color={'secondary'}>\n            {log.type}\n          </Typography>\n        </Grid>\n\n        {Object.keys(resultSorted).map(diceKey => (\n          <React.Fragment key={diceKey}>\n            <Grid item xs={3}>\n              <Typography component={'span'} variant={'caption'} color={'textSecondary'}>\n                {diceKey}\n              </Typography>\n            </Grid>\n            <Grid item xs={9}>\n              <Typography component={'span'} variant={'body1'} color={'secondary'}>\n                {resultSorted[diceKey] && resultSorted[diceKey].join(', ')}\n              </Typography>\n            </Grid>\n          </React.Fragment>\n        ))}\n      </Grid>\n    </React.Fragment>\n  );\n}\n\nexport const LogDiceThrow = React.memo(withStyles(styles)(LogDiceThrowC));\n","import React from 'react';\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\nimport { Dictionary } from 'react-redux-firebase';\nimport { Divider, List } from '@material-ui/core';\n\nimport { IProfile, IRoomLog, Log } from '../../../models/rooms.model';\nimport { LogListItem } from './LogListItem';\nimport { LogDiceThrow } from './LogDiceThrow';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n      backgroundColor: theme.palette.background.paper,\n      overflowY: 'scroll',\n    },\n  });\n\nexport interface LogsTimelineProps extends WithStyles<typeof styles> {\n  profiles: Dictionary<IProfile>;\n  logs: IRoomLog[];\n}\n\nfunction LogsTimelineC(props: LogsTimelineProps) {\n  const { profiles, logs, classes } = props;\n\n  const renderElement = () => {\n    if (!logs || !logs.length) return '';\n    return [...logs].reverse().map((log, id) => (\n      <React.Fragment key={log.timestamp}>\n        {!!id && <Divider variant=\"inset\" component=\"li\" light={true} />}\n        <LogListItem profile={profiles[log.authorUid]} log={log}>\n          {log.type === Log.DICE_ROLL && log.payload && <LogDiceThrow log={log} />}\n        </LogListItem>\n      </React.Fragment>\n    ));\n  };\n\n  return <List className={classes.root}>{renderElement()}</List>;\n}\n\nexport const LogsTimeline = React.memo(withStyles(styles)(LogsTimelineC));\n","import AppBar from '@material-ui/core/AppBar';\nimport Paper from '@material-ui/core/Paper';\nimport React from 'react';\nimport SwipeableViews from 'react-swipeable-views';\nimport { Box, Slide, Tab, Tabs, Typography, useTheme } from '@material-ui/core';\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\nimport { LogsTimeline } from './LogsTimeline';\nimport { useSelector } from 'react-redux';\n\nimport { firestoreSelectors } from '../../../store/firebase/firestore.selectors';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      backgroundColor: theme.palette.background.paper,\n      width: '100%',\n      height: '100%',\n      position: 'relative' as 'relative',\n      zIndex: 10,\n      overflow: 'hidden',\n    },\n    bar: {\n      borderBottom: '1px solid rgba(0, 0, 0, 0.12)',\n    },\n    tab: {\n      overflowX: 'hidden',\n      height: `calc(100% - ${theme.spacing(6)}px)`,\n      overflowY: 'scroll',\n    },\n    tabContent: {\n      margin: theme.spacing(0, -1, 0, -3),\n    },\n  });\n\nexport interface LogsTabsProps extends WithStyles<typeof styles> {\n  visible?: boolean;\n}\n\nfunction LogsTabsC(props: LogsTabsProps) {\n  const { classes, visible = true } = props;\n\n  const theme = useTheme();\n  const [value, setValue] = React.useState(0);\n  const profiles = useSelector(firestoreSelectors.usersProfiles);\n  const logs = useSelector(firestoreSelectors.selectedRoomLogs);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleChangeIndex = index => {\n    setValue(index);\n  };\n\n  return (\n    <Slide direction=\"right\" in={visible}>\n      <Paper className={classes.root} elevation={2}>\n        <AppBar className={classes.bar} position=\"static\" color=\"default\" elevation={0}>\n          <Tabs\n            value={value}\n            onChange={handleChange}\n            indicatorColor=\"secondary\"\n            textColor=\"primary\"\n            variant=\"fullWidth\"\n            aria-label=\"full width tabs example\"\n          >\n            <Tab label=\"Logs Timeline\" {...a11yProps(0)} />\n            <Tab label=\"Players Logs\" {...a11yProps(1)} />\n          </Tabs>\n        </AppBar>\n        <div className={classes.tab}>\n          <SwipeableViews\n            axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n            index={value}\n            onChangeIndex={handleChangeIndex}\n          >\n            <TabPanel value={value} index={0} dir={theme.direction}>\n              <div className={classes.tabContent}>\n                <LogsTimeline profiles={profiles} logs={logs} />\n              </div>\n            </TabPanel>\n            <TabPanel value={value} index={1} dir={theme.direction}>\n              <div className=\"classes.tabContent\">Item Two</div>\n            </TabPanel>\n          </SwipeableViews>\n        </div>\n      </Paper>\n    </Slide>\n  );\n}\n\nexport const LogsTabs = withStyles(styles)(LogsTabsC);\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  dir?: string;\n  index: any;\n  value: any;\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </Typography>\n  );\n}\n\nfunction a11yProps(index: any) {\n  return {\n    id: `full-width-tab-${index}`,\n    'aria-controls': `full-width-tabpanel-${index}`,\n  };\n}\n","import React from 'react';\nimport { Slide } from '@material-ui/core';\n\nimport { LogsTabs } from './components/LogsTabs';\n\nexport interface LogsDashboardProps {\n  visible?: boolean;\n}\n\nexport function LogsDashboard(props: LogsDashboardProps) {\n  const { visible = true } = props;\n\n  return (\n    <Slide direction=\"right\" in={visible}>\n      <div style={{ position: 'absolute', top: 0, left: 0, height: '100%', width: '100%' }}>\n        <LogsTabs />\n      </div>\n    </Slide>\n  );\n}\n","import clsx from 'clsx';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport GavelIcon from '@material-ui/icons/Gavel';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport React from 'react';\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\nimport { GridListTile, GridListTileBar, IconButton, Tooltip } from '@material-ui/core';\n\nimport { IProfile } from '../../../models/rooms.model';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    tile: {\n      borderRadius: theme.spacing(1),\n      marginRight: theme.spacing(2),\n      maxWidth: theme.spacing(30),\n      overflow: 'hidden',\n      padding: '0 !Important',\n      width: '100%',\n    },\n    title: {\n      color: theme.palette.primary.light,\n    },\n    titleDisable: {\n      color: theme.palette.warning.light,\n    },\n    masterGame: {\n      position: 'absolute' as 'absolute',\n      zIndex: 10,\n      top: 0,\n      right: 0,\n    },\n    titleBar: {\n      background: 'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\n    },\n  });\n\ninterface PlayerTileProps extends WithStyles<typeof styles> {\n  player: IProfile;\n  gameMaster?: boolean;\n}\n\nfunction PlayerTileC(props: PlayerTileProps) {\n  const { classes, player, gameMaster } = props;\n\n  return (\n    <GridListTile className={classes.tile}>\n      <img src={player.avatarUrl || player.photoURL} alt={player.displayName} />\n      <GridListTileBar\n        title={player.displayName}\n        classes={{\n          root: classes.titleBar,\n          title: player.connected ? classes.title : classes.titleDisable,\n        }}\n        actionIcon={\n          <Tooltip title={player.connected ? 'Online' : 'Offline'}>\n            <IconButton aria-label={`star ${player.displayName}`}>\n              {player.connected ? (\n                <CheckCircleIcon className={classes.title} />\n              ) : (\n                <HighlightOffIcon className={classes.titleDisable} />\n              )}\n            </IconButton>\n          </Tooltip>\n        }\n      />\n\n      {gameMaster && (\n        <Tooltip\n          className={clsx(classes.masterGame, player.connected ? classes.title : classes.titleDisable)}\n          title={'Game Master'}\n        >\n          <IconButton aria-label={`star ${player.displayName}`}>\n            <GavelIcon />\n          </IconButton>\n        </Tooltip>\n      )}\n    </GridListTile>\n  );\n}\n\nexport const PlayerTile = React.memo(withStyles(styles)(PlayerTileC));\n","import React from 'react';\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\nimport { GridList, Grow, Slide } from '@material-ui/core';\nimport { useSelector } from 'react-redux';\n\nimport { firestoreSelectors } from '../../store/firebase/firestore.selectors';\nimport { PlayerTile } from './components/PlayerTile';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'space-around',\n      overflow: 'hidden',\n      backgroundColor: theme.palette.background.paper,\n    },\n    gridList: {\n      height: theme.spacing(20),\n      width: '100%',\n      flexWrap: 'nowrap',\n      transform: 'translateZ(0)',\n    },\n  });\n\ninterface PlayersProps extends WithStyles<typeof styles> {\n  visible?: boolean;\n}\n\nfunction PlayersC(props: PlayersProps) {\n  const { classes, visible } = props;\n\n  const players = useSelector(firestoreSelectors.selectedRoomPlayers);\n  const gameMaster = useSelector(firestoreSelectors.selectedRoomGameMasterProfile);\n\n  return (\n    <Slide direction=\"up\" in={visible}>\n      <GridList className={classes.gridList} cols={2.5}>\n        {gameMaster && (\n          <Grow in timeout={300}>\n            <PlayerTile player={gameMaster} gameMaster />\n          </Grow>\n        )}\n\n        {players &&\n          players.map((player, id) => (\n            <Grow in key={player.uid} timeout={1000 * id + 1300}>\n              <PlayerTile player={player} />\n            </Grow>\n          ))}\n      </GridList>\n    </Slide>\n  );\n}\n\nexport const Players = withStyles(styles)(PlayersC);\n","import React from 'react';\nimport SpeedDial from '@material-ui/lab/SpeedDial';\nimport SpeedDialAction from '@material-ui/lab/SpeedDialAction';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\n\nconst styles = (theme: Theme) => createStyles({});\ntype extend = WithStyles<typeof styles>;\n\nexport interface ISpeedDialAction {\n  icon: React.ReactElement;\n  name: string;\n  callback?: (callback: () => void) => void;\n}\n\ninterface SpeedDialCProps extends extend {\n  direction?: 'up' | 'down' | 'left' | 'right';\n  actions: ISpeedDialAction[];\n}\n\nfunction SpeedDialC(props: SpeedDialCProps) {\n  const { direction = 'left', actions } = props;\n\n  const [open, setOpen] = React.useState(false);\n  const handleClose = () => setOpen(false);\n  const handleOpen = () => setOpen(true);\n\n  return (\n    <SpeedDial\n      ariaLabel=\"SpeedDial example\"\n      icon={<SpeedDialIcon />}\n      onClose={handleClose}\n      onOpen={handleOpen}\n      open={open}\n      direction={direction}\n    >\n      {actions.map(action => (\n        <SpeedDialAction\n          key={action.name}\n          icon={action.icon}\n          tooltipTitle={action.name}\n          onClick={() => (action.callback ? action.callback(handleClose) : handleClose())}\n        />\n      ))}\n    </SpeedDial>\n  );\n}\n\nexport const SpeedDialWrapper =  React.memo(withStyles(styles)(SpeedDialC));\n","import React from 'react';\nimport { useFirestore } from 'react-redux-firebase';\nimport { useSelector } from 'react-redux';\n\nimport { FirestoreCollection } from '../models/firebase.model';\nimport { firestoreSelectors } from '../store/firebase/firestore.selectors';\nimport { IRoomCreateForm } from '../models/rooms.model';\nimport { RoomCreate } from '../modules/RoomCreate/RoomCreate';\nimport { roomsSelectors } from '../store/rooms/rooms.selectors';\n\ninterface RoomCreateInRoomProps {\n  open: boolean;\n  onClose: () => void;\n}\n\nexport function RoomCreateInRoom(props: RoomCreateInRoomProps) {\n  const { open, onClose } = props;\n  const firestore = useFirestore();\n  const selectedRoomFormData = useSelector(firestoreSelectors.selectedRoomFormData) as IRoomCreateForm;\n  const selectedRoomUid = useSelector(roomsSelectors.selectedRoomUid) as string;\n\n  const handleSubmit = (formValues: IRoomCreateForm) => {\n    Object.keys(formValues).forEach(key => (formValues as any)[key] === undefined && delete (formValues as any)[key]);\n\n    firestore\n      .doc(`${FirestoreCollection.ROOMS}/${selectedRoomUid}`)\n      .update({ ...formValues })\n      .then(room => {\n        onClose();\n      })\n      .catch((e: boolean) => {\n        // TODO implement error message\n        console.log({ e });\n      });\n  };\n\n  return <RoomCreate open={open} onClose={onClose} onSubmit={handleSubmit} initialValues={selectedRoomFormData} />;\n}\n","import EditIcon from '@material-ui/icons/Edit';\nimport ForumIcon from '@material-ui/icons/Forum';\nimport GroupIcon from '@material-ui/icons/Group';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport React, { useState } from 'react';\nimport ShareIcon from '@material-ui/icons/Share';\nimport { Alert } from '@material-ui/lab';\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\nimport { Snackbar } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { ISpeedDialAction, SpeedDialWrapper } from '../../../../components/SpeedDial';\nimport { mainSelectors } from '../../../../store/main.selectors';\nimport { roomsActions } from '../../../../store/rooms/rooms.actions';\nimport { roomsSelectors } from '../../../../store/rooms/rooms.selectors';\nimport { RoomCreateInRoom } from '../../../../containers/RoomCreateInRoom';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    snackbar: {\n      top: theme.spacing(8),\n    },\n  });\ninterface RoomSpeedDialCProps extends WithStyles<typeof styles> {}\n\nfunction RoomSpeedDialC(props: RoomSpeedDialCProps) {\n  const { classes } = props;\n  const dispatch = useDispatch();\n\n  const isGameMasterOfSelectedRoom = useSelector(mainSelectors.isGameMasterOfSelectedRoom);\n  const drawerOpened = useSelector(roomsSelectors.drawerOpened);\n  const chatOpened = useSelector(roomsSelectors.chatOpened);\n  const playersOpened = useSelector(roomsSelectors.playersOpened);\n  const [showRoomForm, setShowRoomForm] = useState(false);\n  const [snackbarConfig, setSnackbarConfig] = React.useState<{\n    type: 'success' | 'error';\n    open: boolean;\n    text: string;\n  }>({\n    type: 'success',\n    open: false,\n    text: '',\n  });\n\n  function copyRoomUrlToClipboard(): void {\n    navigator.permissions.query({ name: 'clipboard-write' as any }).then(result => {\n      if (result.state === 'granted' || result.state === 'prompt') {\n        navigator.clipboard.writeText(window.location.href).then(\n          () => setSnackbarConfig({ type: 'success', open: true, text: 'Room URL copied to clipboard!' }),\n          () => setSnackbarConfig({ type: 'error', open: true, text: 'Upss.. there was an error' })\n        );\n      }\n    });\n  }\n\n  const actionsAdditional: ISpeedDialAction[] = isGameMasterOfSelectedRoom\n    ? [\n        {\n          icon: <EditIcon />,\n          name: 'Edit Room Description',\n          callback: cb => setShowRoomForm(true),\n        },\n      ]\n    : [];\n  const actions: ISpeedDialAction[] = [\n    {\n      icon: drawerOpened ? <NavigateBeforeIcon /> : <NavigateNextIcon />,\n      name: drawerOpened ? 'Hide Nav' : 'Show Nav',\n      callback: cb => dispatch(roomsActions.setDrawerOpenValue(!drawerOpened)),\n    },\n    {\n      icon: <ForumIcon />,\n      name: chatOpened ? 'Hide chat' : 'Show Chat',\n      callback: cb => dispatch(roomsActions.setChatOpenValue(!chatOpened)),\n    },\n    {\n      icon: <GroupIcon />,\n      name: playersOpened ? 'Hide players' : 'Show players',\n      callback: cb => dispatch(roomsActions.setPlayersOpenValue(!playersOpened)),\n    },\n    {\n      icon: <ShareIcon />,\n      name: 'Copy Room Url',\n      callback: cb => copyRoomUrlToClipboard(),\n    },\n    ...actionsAdditional,\n  ];\n\n  return (\n    <React.Fragment>\n      <SpeedDialWrapper actions={actions} direction={'right'} />\n      <Snackbar\n        className={classes.snackbar}\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n        open={snackbarConfig.open}\n        autoHideDuration={6000}\n        onClose={() => setSnackbarConfig({ ...snackbarConfig, open: false })}\n      >\n        <Alert onClose={() => setSnackbarConfig({ ...snackbarConfig, open: false })} severity={snackbarConfig.type}>\n          {snackbarConfig.text}\n        </Alert>\n      </Snackbar>\n      <RoomCreateInRoom open={showRoomForm} onClose={() => setShowRoomForm(false)} />\n    </React.Fragment>\n  );\n}\n\nexport const RoomSpeedDialWrapper = withStyles(styles)(RoomSpeedDialC);\n","import clsx from 'clsx';\nimport React from 'react';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport { useSelector } from 'react-redux';\n\nimport { Chatter } from '../../../../modules/Chatter';\nimport { DiceCard } from '../../../../modules/DiceCard/DiceCard';\nimport { DiceDashboard } from '../../../../modules/DiceDashboard/DiceDashboard';\nimport { firestoreSelectors } from '../../../../store/firebase/firestore.selectors';\nimport { LogsDashboard } from '../../../../modules/LogsDashboard/LogsDashboard';\nimport { mainSelectors } from '../../../../store/main.selectors';\nimport { Players } from '../../../../modules/Players/Players';\nimport { RoomSpeedDialWrapper } from './RoomSpeedDial';\nimport { roomsSelectors } from '../../../../store/rooms/rooms.selectors';\n\nconst styles = (theme: Theme) => ({\n  root: {\n    position: 'relative' as 'relative',\n    margin: theme.spacing(-6, -4),\n    height: `calc(100vh - ${theme.spacing(10)}px)`,\n    padding: theme.spacing(1, 1, 0, 1),\n  },\n  mainGrid: {\n    display: 'grid',\n    gridTemplateColumns: '1fr auto',\n    gridTemplateRows: '1fr auto auto',\n    columnGap: theme.spacing(2) + 'px',\n    rowGap: theme.spacing(2) + 'px',\n    width: '100%',\n    height: '100%',\n  },\n  gridItemLogs: {\n    position: 'relative' as 'relative',\n    gridColumn: '2',\n    gridRow: '1',\n  },\n  gridItemChatter: {\n    position: 'relative' as 'relative',\n    gridColumn: '2',\n    gridRow: '2 / span 2',\n  },\n  gridItemDiceCard: {\n    position: 'relative' as 'relative',\n    gridColumn: '1 / span 2',\n    gridRow: '1 / span 2',\n  },\n  gridItemPlayers: {\n    position: 'relative' as 'relative',\n    gridColumn: '1',\n    gridRow: '3',\n  },\n  speedDial: {\n    position: 'absolute' as 'absolute',\n    bottom: theme.spacing(1),\n    left: theme.spacing(1),\n    zIndex: 10,\n  },\n  diceDashboard: {\n    position: 'absolute' as 'absolute',\n    zIndex: 1000,\n    top: theme.spacing(1),\n    left: theme.spacing(1),\n  },\n\n  maxHeight: {\n    maxHeight: '3000px',\n    transition: 'max-height 225ms cubic-bezier(0, 0, 0.2, 1) 0ms',\n  },\n  noHeight: {\n    maxHeight: 0,\n  },\n});\n\nconst useStyles = makeStyles(styles);\n\nexport function RoomView() {\n  const classes = useStyles();\n\n  const playersOpened = useSelector(roomsSelectors.playersOpened);\n  const chatOpened = useSelector(roomsSelectors.chatOpened);\n  const diceRolling = useSelector(roomsSelectors.diceRolling);\n  const selectedRoom = useSelector(firestoreSelectors.selectedRoom);\n\n  const isUserARoomPlayerOrGameMaster = useSelector(mainSelectors.isUserARoomPlayerOrGameMaster);\n\n  const diceCardFullHeight = !playersOpened || !selectedRoom;\n\n  return (\n    <section className={classes.root}>\n      <div className={classes.mainGrid}>\n        <div className={classes.gridItemLogs}>\n          <LogsDashboard></LogsDashboard>\n        </div>\n\n        <div className={classes.gridItemDiceCard}>\n          <DiceCard />\n\n          <nav className={classes.diceDashboard}>\n            <DiceDashboard\n              visible={!diceRolling && !!selectedRoom && isUserARoomPlayerOrGameMaster}\n              room={selectedRoom}\n            />\n          </nav>\n\n          <nav className={classes.speedDial}>\n            <RoomSpeedDialWrapper />\n          </nav>\n        </div>\n\n        <div className={classes.gridItemChatter}>\n          <Chatter visible={chatOpened && !diceRolling && isUserARoomPlayerOrGameMaster} />\n        </div>\n\n        <div className={classes.gridItemPlayers}>\n          <div className={clsx(classes.maxHeight, diceCardFullHeight && classes.noHeight)}>\n            <Players visible={!diceCardFullHeight} />\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n","import { enhancedRoomList } from './RoomPage.enhancer';\nimport { RoomC } from './RoomPage';\n\nexport default enhancedRoomList(RoomC);\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useFirestore } from 'react-redux-firebase';\n\nimport { chatsActions } from '../../../store/chats/chats.actions';\nimport { firebaseSelectors } from '../../../store/firebase/firebase.selectors';\nimport { FirestoreCollection } from '../../../models/firebase.model';\nimport { firestoreSelectors } from '../../../store/firebase/firestore.selectors';\nimport { locationActions } from '../../../store/location/location.actions';\nimport { LocationMatch } from '../../../store/location/location.model';\nimport { locationSelectors } from '../../../store/location/location.selectors';\nimport { roomsActions } from '../../../store/rooms/rooms.actions';\nimport { roomsSelectors } from '../../../store/rooms/rooms.selectors';\nimport { DiceServiceContextC } from '../../../contexts/DiceService.context';\nimport { RoomView } from './components/RoomPageView';\n\n//\n\nexport interface RoomListProps {\n  match: LocationMatch;\n}\n\nexport function RoomC(props: RoomListProps) {\n  const { match } = props;\n\n  const dispatch = useDispatch();\n  const firestore = useFirestore();\n\n  const selectedRoomData = useSelector(firestoreSelectors.selectedRoom);\n  const selectedRoomUid = useSelector(roomsSelectors.selectedRoomUid);\n  const storeLocationMatch = useSelector(locationSelectors.match);\n  const userProfile = useSelector(firebaseSelectors.userProfile);\n\n  /**\n   * Effects logic\n   */\n  function onChangeSetLocationMatch(): void {\n    if (JSON.stringify(match) !== JSON.stringify(storeLocationMatch)) {\n      dispatch(locationActions.matchChange(match));\n    }\n    dispatch(roomsActions.setSelectedRoom((storeLocationMatch.params as any)['roomId']));\n  }\n  function onUnmountSetSelectedRoomToNull(): void {\n    dispatch(roomsActions.setSelectedRoom(null));\n  }\n  function onChangeSetSelectedChat(): void {\n    dispatch(chatsActions.setSelectedChat(selectedRoomData?.chatUid || null));\n  }\n  function onEnterTheRoomAddUserToPlayers(): void {\n    if (!selectedRoomData) return;\n\n\n    if (selectedRoomData?.maxPlayers <= selectedRoomData.players.length) {\n      // TODO toast message\n      return;\n    }\n    if (!selectedRoomData?.players || !userProfile.uid || selectedRoomData.gameMaster.uid === userProfile.uid) return;\n    if (selectedRoomData.players.indexOf(userProfile.uid) !== -1) return;\n\n    const documentRef = firestore.doc(`${FirestoreCollection.ROOMS}/${selectedRoomUid}`);\n    firestore.runTransaction((t: any) => {\n      return t\n        .get(documentRef)\n        .then((doc: any) => {\n          const players = [...doc.data().players, userProfile.uid];\n          return t.update(documentRef, { players });\n        })\n        .catch((err: any) => {\n          // TODO: add toast message\n          // TRANSACTION_FAILURE action dispatched\n          console.log('Transaction failure:', err);\n        });\n    });\n  }\n\n  /**\n   * Effects\n   */\n  useEffect(() => onChangeSetLocationMatch());\n\n  useEffect(() => {\n    onEnterTheRoomAddUserToPlayers();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedRoomUid, selectedRoomData?.createdAt, userProfile.uid]);\n\n  useEffect(() => {\n    return () => onUnmountSetSelectedRoomToNull();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    onChangeSetSelectedChat();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedRoomData?.chatUid]);\n\n  return (\n    <React.Fragment>\n      {selectedRoomUid &&\n        [selectedRoomUid].map(uid => (\n          <DiceServiceContextC key={uid as string}>\n            <RoomView />\n          </DiceServiceContextC>\n        ))}\n    </React.Fragment>\n  );\n}\n"],"sourceRoot":""}