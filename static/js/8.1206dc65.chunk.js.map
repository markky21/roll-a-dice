{"version":3,"sources":["utils/router.utils.ts","modules/RoomCreate/components/RoomCreateImage.tsx","modules/RoomCreate/components/RoomCreateForm.tsx","modules/RoomCreate/RoomCreate.tsx","../node_modules/@material-ui/core/esm/Divider/Divider.js","routes/RoomList/RoomListPage/RoomListPage.enhancer.tsx","../node_modules/@material-ui/core/esm/CardActions/CardActions.js","containers/RoomCreateInRoomList.tsx","modules/RoomList/components/RoomListElements.tsx","modules/RoomList/RoomList.tsx","routes/RoomList/RoomListPage/RoomListPage.tsx","routes/RoomList/RoomListPage/index.ts"],"names":["locationHelper","locationHelperBuilder","history","createBrowserHistory","UserIsAuthenticated","connectedRouterRedirect","redirectPath","RouterPath","HOME_PATH","AuthenticatingComponent","Loader","wrapperDisplayName","authenticatedSelector","firebaseSelectors","isAuthenticated","authenticatingSelector","redirectAction","newLoc","dispatch","push","type","payload","message","allowRedirectBack","state","firebase","auth","isEmpty","isInitializing","isLoaded","ownProps","getRedirectQueryParam","ROOMS_PATH","styles","createStyles","image","width","height","backgroundPosition","backgroundSize","useStyles","makeStyles","RoomCreateImage","props","classes","form","useSelector","mainSelectors","getFormCreateRoom","Collapse","in","roomImage","length","CardMedia","className","title","RoomCreateForm","reduxForm","validate","values","errors","createRoomFormModel","roomName","name","maxPlayers","forEach","field","diceType","handleSubmit","pristine","submitting","handleClose","invalid","onSubmit","DialogContent","dividers","campaignTitle","description","gameMasterAvatar","style","DialogActions","Button","color","disabled","onClick","RoomCreate","open","onClose","initialValues","theme","useTheme","fullScreen","useMediaQuery","breakpoints","down","Dialog","aria-labelledby","DialogTitle","Divider","React","ref","_props$absolute","absolute","_props$component","component","Component","_props$flexItem","flexItem","_props$light","light","_props$orientation","orientation","_props$role","role","undefined","_props$variant","variant","other","_objectWithoutProperties","_extends","clsx","root","vertical","withStyles","margin","border","flexShrink","backgroundColor","palette","divider","position","bottom","left","inset","marginLeft","fade","middle","spacing","marginRight","alignSelf","enhancedRoomList","compose","setDisplayName","withRouter","CardActions","_props$disableSpacing","disableSpacing","display","alignItems","padding","RoomCreateInRoomList","locationPath","locationSelectors","match","path","useState","setOpen","useHistory","firestore","useFirestore","userProfile","useEffect","ROOM_CREATE_PATH","formValues","newRoom","createdAt","Date","now","toString","gameMaster","uid","avatarUrl","photoURL","displayName","email","logs","players","collection","FirestoreCollection","ROOMS","add","then","room","ROOM_PATH","id","createNewRoom","e","console","log","RoomListElements","memo","background","paper","overflowY","item","cursor","roomsAsGameMaster","roomsAsPlayer","onRoomClick","selectedRoom","renderElement","rooms","timeout","Object","keys","map","roomId","Grow","key","ListItem","selected","button","dense","ListItemAvatar","Avatar","firstLettersJoined","ListItemText","primary","secondary","timeStampToFormattedDate","List","RoomList","overflow","searchBar","borderBottom","searchInput","fontSize","typography","block","contentWrapper","showSearchBar","label","Paper","AppBar","elevation","Toolbar","Grid","container","xs","TextField","fullWidth","placeholder","InputProps","disableUnderline","cards","marginBottom","maxWidth","media","useDispatch","storeLocationMatch","userRoomsAsGameMaster","firestoreSelectors","userRoomsAsPlayer","JSON","stringify","locationActions","matchChange","Fragment","Card","process","CardContent","Typography","gutterBottom","to"],"mappings":"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","file":"static/js/8.1206dc65.chunk.js","sourcesContent":["import locationHelperBuilder from 'redux-auth-wrapper/history4/locationHelper';\nimport { connectedRouterRedirect } from 'redux-auth-wrapper/history4/redirect';\nimport { createBrowserHistory } from 'history';\nimport { RouterPath } from '../models/paths';\n\nimport { AppState } from '../store/main';\nimport { firebaseSelectors } from '../store/firebase/firebase.selectors';\nimport { Loader } from '../components/Loader';\n\nconst locationHelper = locationHelperBuilder({});\nconst history = createBrowserHistory();\n\nconst AUTHED_REDIRECT = 'AUTHED_REDIRECT';\nconst UNAUTHED_REDIRECT = 'UNAUTHED_REDIRECT';\n\n/**\n * Higher Order Component that redirects to `/login` instead\n * rendering if user is not authenticated (default of redux-auth-wrapper).\n * @param {Component} componentToWrap - Component to wrap\n * @return {Component} wrappedComponent\n */\nexport const UserIsAuthenticated = connectedRouterRedirect({\n  redirectPath: RouterPath.HOME_PATH,\n  AuthenticatingComponent: Loader,\n  wrapperDisplayName: 'UserIsAuthenticated',\n  // Want to redirect the user when they are done loading and authenticated\n  authenticatedSelector: firebaseSelectors.isAuthenticated,\n  authenticatingSelector: firebaseSelectors.authenticatingSelector,\n  redirectAction: ((newLoc: any) => (dispatch: any) => {\n    // Use push, replace, and go to navigate around.\n    history.push(newLoc);\n    dispatch({\n      type: UNAUTHED_REDIRECT,\n      payload: { message: 'User is not authenticated.' },\n    });\n  }) as any,\n});\n\n/**\n * Higher Order Component that redirects to listings page or most\n * recent route instead rendering if user is not authenticated. This is useful\n * routes that should not be displayed if a user is logged in, such as the\n * login route.\n * @param {Component} componentToWrap - Component to wrap\n * @return {Component} wrappedComponent\n */\nexport const UserIsNotAuthenticated = connectedRouterRedirect({\n  AuthenticatingComponent: Loader,\n  wrapperDisplayName: 'UserIsNotAuthenticated',\n  allowRedirectBack: false,\n  // Want to redirect the user when they are done loading and authenticated\n  authenticatedSelector: (state: AppState) => {\n    const {\n      firebase: { auth },\n    } = state;\n    return auth.isEmpty;\n  },\n  authenticatingSelector: ({ firebase: { auth, isInitializing } }) => !auth.isLoaded || isInitializing,\n  redirectPath: (state, ownProps) => locationHelper.getRedirectQueryParam(ownProps) || RouterPath.ROOMS_PATH,\n  redirectAction: ((newLoc: any) => (dispatch: any) => {\n    // Use push, replace, and go to navigate around.\n    history.push(newLoc);\n    dispatch({\n      type: AUTHED_REDIRECT,\n      payload: { message: 'User is not authenticated.' },\n    });\n  }) as any,\n});\n\n/*\n/!**\n * Render children based on route config objects\n * @param {Array} routes - Routes settings array\n * @param {Object} match - Routes settings array\n * @param {Object} parentProps - Props to pass to children from parent\n *!/\nexport function renderChildren(routes, match, parentProps) {\n  return routes.map(route => (\n    <Route\n      key={`${match.url}-${route.path}`}\n      path={`${match.url}/${route.path}`}\n      render={props => <route.component {...parentProps} {...props} />}\n    />\n  ));\n}*/\n","import React from 'react';\nimport { CardMedia, Collapse, createStyles } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useSelector } from 'react-redux';\n\nimport { mainSelectors } from '../../../store/main.selectors';\n\ninterface RoomCreateImageProps {}\n\nconst styles = createStyles({\n  image: {\n    width: '100%',\n    height: '15vh',\n    backgroundPosition: 'center',\n    backgroundSize: 'cover',\n  },\n});\n\nconst useStyles = makeStyles(styles);\n\nexport function RoomCreateImage(props: RoomCreateImageProps) {\n  const classes = useStyles();\n  const form = useSelector(mainSelectors.getFormCreateRoom);\n\n  return (\n    <Collapse in={form?.roomImage?.length > 8}>\n      {form?.roomImage && (\n        <CardMedia\n          className={classes.image}\n          image={form?.roomImage}\n          title=\"Room Image\"\n        />\n      )}\n    </Collapse>\n  );\n}\n","import React from 'react';\nimport { Button, DialogActions, DialogContent } from '@material-ui/core';\nimport { InjectedFormProps, reduxForm } from 'redux-form';\n\nimport { createRoomFormModel } from '../../../models/rooms.model';\nimport { FormFieldCheckboxGroup, FormFieldText } from '../../../components/FormComponents';\nimport { RoomCreateImage } from './RoomCreateImage';\n\nconst validate = (values: any) => {\n  const errors: any = {};\n\n  [createRoomFormModel.roomName.name, createRoomFormModel.maxPlayers.name].forEach(field => {\n    if (!values[field]) {\n      errors[field] = 'Required';\n    }\n  });\n\n  if (!(values[createRoomFormModel.diceType.name] && values[createRoomFormModel.diceType.name].length)) {\n    errors[createRoomFormModel.diceType.name] = 'Select at least one dice';\n  }\n  return errors;\n};\n\ninterface RoomCreateFormProps extends InjectedFormProps {\n  handleClose: () => void;\n}\n\nfunction RoomCreateFormC(props: RoomCreateFormProps) {\n  const { handleSubmit, pristine, submitting, handleClose, invalid } = props;\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <RoomCreateImage />\n      <DialogContent dividers>\n        <FormFieldText {...createRoomFormModel.roomName} />\n        <FormFieldText {...createRoomFormModel.roomImage} />\n        <FormFieldText {...createRoomFormModel.campaignTitle} />\n        <FormFieldText {...createRoomFormModel.description} />\n        <FormFieldText {...createRoomFormModel.gameMasterAvatar} />\n        <div style={{ width: '50%' }}>\n          <FormFieldText {...createRoomFormModel.maxPlayers} />\n        </div>\n        <FormFieldCheckboxGroup {...createRoomFormModel.diceType} />\n      </DialogContent>\n      <DialogActions>\n        <Button type=\"submit\" color=\"primary\" disabled={invalid || pristine || submitting}>\n          Submit\n        </Button>\n        <Button type=\"button\" onClick={handleClose} color=\"primary\">\n          Cancel\n        </Button>\n      </DialogActions>\n    </form>\n  );\n}\n\nexport const RoomCreateForm = reduxForm({\n  form: 'createRoom',\n  validate,\n})(RoomCreateFormC as any) as any;\n","import React from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { Dialog, DialogTitle, useMediaQuery } from '@material-ui/core';\nimport { RoomCreateForm } from './components/RoomCreateForm';\n\nimport { IRoomCreateForm } from '../../models/rooms.model';\n\nexport interface RoomCreateProps {\n  open: boolean;\n  onClose: () => void;\n  onSubmit: (formValues: IRoomCreateForm) => void;\n  initialValues?: IRoomCreateForm;\n}\n\nexport function RoomCreate(props: RoomCreateProps) {\n  const { open, onClose, onSubmit, initialValues } = props;\n\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('xs'));\n\n  return (\n    <Dialog fullScreen={fullScreen} open={open} onClose={onClose} aria-labelledby=\"responsive-dialog-title\">\n      <DialogTitle>Create new Room</DialogTitle>\n      <RoomCreateForm handleClose={onClose} onSubmit={onSubmit} initialValues={initialValues} />\n    </Dialog>\n  );\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      height: 1,\n      margin: 0,\n      // Reset browser default style.\n      border: 'none',\n      flexShrink: 0,\n      backgroundColor: theme.palette.divider\n    },\n\n    /* Styles applied to the root element if `absolute={true}`. */\n    absolute: {\n      position: 'absolute',\n      bottom: 0,\n      left: 0,\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `variant=\"inset\"`. */\n    inset: {\n      marginLeft: 72\n    },\n\n    /* Styles applied to the root element if `light={true}`. */\n    light: {\n      backgroundColor: fade(theme.palette.divider, 0.08)\n    },\n\n    /* Styles applied to the root element if `variant=\"middle\"`. */\n    middle: {\n      marginLeft: theme.spacing(2),\n      marginRight: theme.spacing(2)\n    },\n\n    /* Styles applied to the root element if `orientation=\"vertical\"`. */\n    vertical: {\n      height: '100%',\n      width: 1\n    },\n\n    /* Styles applied to the root element if `flexItem={true}`. */\n    flexItem: {\n      alignSelf: 'stretch',\n      height: 'auto'\n    }\n  };\n};\nvar Divider = React.forwardRef(function Divider(props, ref) {\n  var _props$absolute = props.absolute,\n      absolute = _props$absolute === void 0 ? false : _props$absolute,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'hr' : _props$component,\n      _props$flexItem = props.flexItem,\n      flexItem = _props$flexItem === void 0 ? false : _props$flexItem,\n      _props$light = props.light,\n      light = _props$light === void 0 ? false : _props$light,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      _props$role = props.role,\n      role = _props$role === void 0 ? Component !== 'hr' ? 'separator' : undefined : _props$role,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'fullWidth' : _props$variant,\n      other = _objectWithoutProperties(props, [\"absolute\", \"classes\", \"className\", \"component\", \"flexItem\", \"light\", \"orientation\", \"role\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'fullWidth' && classes[variant], absolute && classes.absolute, flexItem && classes.flexItem, light && classes.light, orientation === 'vertical' && classes.vertical),\n    role: role,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Divider.propTypes = {\n  /**\n   * Absolutely position the element.\n   */\n  absolute: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, a vertical divider will have the correct height when used in flex container.\n   * (By default, a vertical divider will have a calculated height of `0px` if it is the child of a flex container.)\n   */\n  flexItem: PropTypes.bool,\n\n  /**\n   * If `true`, the divider will have a lighter color.\n   */\n  light: PropTypes.bool,\n\n  /**\n   * The divider orientation.\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * @ignore\n   */\n  role: PropTypes.string,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['fullWidth', 'inset', 'middle'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDivider'\n})(Divider);","import { compose } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport { setDisplayName } from 'recompose';\nimport { UserIsAuthenticated } from '../../../utils/router.utils';\n\nexport const enhancedRoomList = compose(\n  // Set component display name (more clear in dev/error tools)\n  setDisplayName('EnhancedRoomList'),\n  // Add props.match\n  withRouter,\n  // Redirect to /login if user is not logged in\n  UserIsAuthenticated\n);\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > :not(:first-child)': {\n      marginLeft: 8\n    }\n  }\n};\nvar CardActions = React.forwardRef(function CardActions(props, ref) {\n  var _props$disableSpacing = props.disableSpacing,\n      disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing,\n      classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"disableSpacing\", \"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, !disableSpacing && classes.spacing),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActions.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   */\n  disableSpacing: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActions'\n})(CardActions);","import React, { useEffect } from 'react';\nimport { useFirestore } from 'react-redux-firebase';\nimport { useHistory } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nimport { firebaseSelectors } from '../store/firebase/firebase.selectors';\nimport { FirestoreCollection } from '../models/firebase.model';\nimport { IProfile, IRoom, IRoomCreateForm } from '../models/rooms.model';\nimport { locationSelectors } from '../store/location/location.selectors';\nimport { RoomCreate } from '../modules/RoomCreate/RoomCreate';\nimport { RouterPath } from '../models/paths';\n\nexport function RoomCreateInRoomList() {\n  const { path: locationPath } = useSelector(locationSelectors.match);\n\n  const [open, setOpen] = React.useState(false);\n  const history = useHistory();\n  const firestore = useFirestore();\n  const userProfile: IProfile = useSelector(firebaseSelectors.userProfile);\n\n  const handleClose = () => {\n    setOpen(false);\n    history.push(RouterPath.ROOMS_PATH);\n  };\n\n  function createNewRoom(formValues: IRoomCreateForm): Promise<void> {\n    const newRoom: IRoom = {\n      createdAt: Date.now().toString(),\n      gameMaster: {\n        uid: userProfile.uid,\n        avatarUrl: userProfile.avatarUrl || userProfile.photoURL,\n        displayName: userProfile.displayName,\n        email: userProfile.email,\n        photoURL: (userProfile.photoURL || userProfile.avatarUrl) as string,\n      },\n      logs: [],\n      players: [],\n      ...formValues,\n    };\n    return firestore\n      .collection(FirestoreCollection.ROOMS)\n      .add(newRoom)\n      .then(room => {\n        setOpen(false);\n        history.push(`${RouterPath.ROOM_PATH}/${room.id}`);\n      });\n  }\n\n  const handleSubmit = (formValues: IRoomCreateForm) => {\n    createNewRoom(formValues).catch((e: boolean) => {\n      // TODO implement error message\n      console.log({ e });\n    });\n  };\n\n  useEffect(() => {\n    if (locationPath === RouterPath.ROOM_CREATE_PATH) {\n      setOpen(true);\n    }\n  }, [locationPath]);\n\n  return <RoomCreate open={open} onClose={handleClose} onSubmit={handleSubmit} />;\n}\n","import React from 'react';\nimport { Avatar, Divider, Grow, List, ListItem, ListItemAvatar, ListItemText } from '@material-ui/core';\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\nimport { Dictionary } from 'react-redux-firebase';\n\nimport { firstLettersJoined } from '../../../utils/text.utils';\nimport { timeStampToFormattedDate } from '../../../utils/date.utils';\nimport { IRoom } from '../../../models/rooms.model';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n      backgroundColor: theme.palette.background.paper,\n      height: '20vh',\n      overflowY: 'scroll',\n    },\n    item: {\n      cursor: 'pointer',\n    },\n    divider: { backgroundColor: 'rgba(0, 0, 0, 0.12)' },\n  });\n\ninterface RoomListElementProps extends WithStyles<typeof styles> {\n  roomsAsGameMaster: Dictionary<IRoom>;\n  roomsAsPlayer: Dictionary<IRoom>;\n  selectedRoom: string | null;\n  onRoomClick: (roomId: string) => void;\n}\n\nfunction RoomListElementC(props: RoomListElementProps) {\n  const { classes, roomsAsGameMaster, roomsAsPlayer, onRoomClick, selectedRoom } = props;\n\n  const renderElement = (rooms: Dictionary<IRoom>, timeout: number = 300) =>\n    Object.keys(rooms).map((roomId, id) => (\n      <Grow key={roomId} in timeout={1000 * id + timeout}>\n        <ListItem\n          onClick={() => onRoomClick(roomId)}\n          selected={roomId === selectedRoom}\n          className={classes.item}\n          button\n          dense\n          alignItems=\"flex-start\"\n        >\n          <ListItemAvatar>\n            <Avatar>{firstLettersJoined(rooms[roomId].roomName || 'No name')}</Avatar>\n          </ListItemAvatar>\n          <ListItemText\n            primary={rooms[roomId].roomName || 'No name'}\n            secondary={timeStampToFormattedDate(rooms[roomId].createdAt)}\n          />\n        </ListItem>\n      </Grow>\n    ));\n\n  return (\n    <List className={classes.root}>\n      {renderElement(roomsAsGameMaster)}\n      <Grow in={!!Object.keys(roomsAsGameMaster).length} timeout={1000 * Object.keys(roomsAsGameMaster).length + 300}>\n        <Divider className={classes.divider} />\n      </Grow>\n      {renderElement(roomsAsPlayer, 1000 * Object.keys(roomsAsGameMaster).length + 300)}\n    </List>\n  );\n}\n\nexport const RoomListElements =  React.memo(withStyles(styles)(RoomListElementC));\n","import AppBar from '@material-ui/core/AppBar';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport React from 'react';\nimport SearchIcon from '@material-ui/icons/Search';\nimport TextField from '@material-ui/core/TextField';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { Grow } from '@material-ui/core';\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\nimport { useHistory } from 'react-router-dom';\nimport { Dictionary } from 'react-redux-firebase';\n\nimport { RouterPath } from '../../models/paths';\nimport { IRoom } from '../../models/rooms.model';\nimport { RoomListElements } from './components/RoomListElements';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    paper: {\n      margin: 'auto',\n      overflow: 'hidden',\n    },\n    searchBar: {\n      borderBottom: '1px solid rgba(0, 0, 0, 0.12)',\n    },\n    searchInput: {\n      fontSize: theme.typography.fontSize,\n    },\n    block: {\n      display: 'block',\n    },\n    contentWrapper: {\n      margin: '16px 16px',\n    },\n  });\n\nexport interface RoomListProps extends WithStyles<typeof styles> {\n  showSearchBar?: boolean;\n  roomsAsGameMaster: Dictionary<IRoom>;\n  roomsAsPlayer: Dictionary<IRoom>;\n  selectedRoom: string | null;\n  label: string;\n}\n\nfunction RoomListC(props: RoomListProps) {\n  const { classes, roomsAsGameMaster, roomsAsPlayer, showSearchBar, selectedRoom, label } = props;\n  const history = useHistory();\n\n  const onRoomClick = (roomId: string) => {\n    return history.push(`${RouterPath.ROOM_PATH}/${roomId}`);\n  };\n\n  return (\n    <Grow in>\n      <Paper className={classes.paper}>\n        {showSearchBar && (\n          <AppBar className={classes.searchBar} position=\"static\" color=\"default\" elevation={0}>\n            <Toolbar>\n              <Grid container spacing={2} alignItems=\"center\">\n                <Grid item>\n                  <SearchIcon className={classes.block} color=\"inherit\" />\n                </Grid>\n                <Grid item xs>\n                  <TextField\n                    fullWidth\n                    placeholder={label}\n                    InputProps={{\n                      disableUnderline: true,\n                      className: classes.searchInput,\n                    }}\n                  />\n                </Grid>\n              </Grid>\n            </Toolbar>\n          </AppBar>\n        )}\n        <div className={classes.contentWrapper}>\n          <RoomListElements\n            roomsAsGameMaster={roomsAsGameMaster}\n            roomsAsPlayer={roomsAsPlayer}\n            onRoomClick={onRoomClick}\n            selectedRoom={selectedRoom}\n          />\n        </div>\n      </Paper>\n    </Grow>\n  );\n}\n\nexport const RoomList = withStyles(styles)(RoomListC);\n","import React, { useEffect } from 'react';\nimport { Button, Card, CardActions, CardContent, CardMedia, Grow, Typography } from '@material-ui/core';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport { NavLink } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Dictionary } from 'react-redux-firebase';\nimport { firestoreSelectors } from '../../../store/firebase/firestore.selectors';\nimport { IRoom } from '../../../models/rooms.model';\nimport { locationActions } from '../../../store/location/location.actions';\nimport { LocationMatch } from '../../../store/location/location.model';\nimport { locationSelectors } from '../../../store/location/location.selectors';\nimport { RoomCreateInRoomList } from '../../../containers/RoomCreateInRoomList';\nimport { RoomList } from '../../../modules/RoomList/RoomList';\nimport { RouterPath } from '../../../models/paths';\n\nconst styles = (theme: Theme) => ({\n  cards: {\n    marginBottom: '16px',\n    maxWidth: 936,\n  },\n  media: {\n    height: 140,\n  },\n});\n\nconst useStyles = makeStyles(styles);\n\nexport interface RoomListProps {\n  match: LocationMatch;\n}\n\nexport function RoomListsC(props: RoomListProps) {\n  const classes = useStyles();\n  const { match } = props;\n\n  const dispatch = useDispatch();\n  const storeLocationMatch = useSelector(locationSelectors.match);\n  const userRoomsAsGameMaster: Dictionary<IRoom> = useSelector(firestoreSelectors.userRoomsAsGameMaster) || {};\n  const userRoomsAsPlayer: Dictionary<IRoom> = useSelector(firestoreSelectors.userRoomsAsPlayer) || {};\n\n  useEffect(() => {\n    if (JSON.stringify(match) !== JSON.stringify(storeLocationMatch)) {\n      dispatch(locationActions.matchChange(match));\n    }\n  });\n\n  return (\n    <React.Fragment>\n      <section className={classes.cards}>\n        <Grow in>\n          <Card>\n            <CardMedia\n              className={classes.media}\n              image={`${process.env.PUBLIC_URL}/assets/images/fantasy-wallpapers.jpg`}\n              title=\"Fantasy RPG\"\n            />\n            <CardContent>\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                Enter to the new world\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                Create a new game room to start a new adventure with your friends!\n              </Typography>\n            </CardContent>\n            <CardActions>\n              <NavLink to={RouterPath.ROOM_CREATE_PATH}>\n                <Button variant=\"contained\" color=\"primary\">\n                  Create new Room\n                </Button>\n              </NavLink>\n            </CardActions>\n          </Card>\n        </Grow>\n      </section>\n\n      <section className={classes.cards}>\n        <RoomList\n          roomsAsGameMaster={userRoomsAsGameMaster}\n          roomsAsPlayer={userRoomsAsPlayer}\n          selectedRoom={null}\n          showSearchBar\n          label={'Search room by name'}\n        />\n      </section>\n\n      <RoomCreateInRoomList />\n    </React.Fragment>\n  );\n}\n","import { enhancedRoomList } from './RoomListPage.enhancer';\nimport { RoomListsC } from './RoomListPage';\n\nexport default enhancedRoomList(RoomListsC);\n"],"sourceRoot":""}