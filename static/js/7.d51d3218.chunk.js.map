{"version":3,"sources":["utils/router.utils.ts","modules/Chatter/index.ts","modules/RoomCreate/components/RoomCreateImage.tsx","modules/RoomCreate/components/RoomCreateForm.tsx","modules/RoomCreate/RoomCreate.tsx","routes/Room/RoomPage/RoomPage.enhancer.tsx","modules/Players/components/PlayerTile.tsx","modules/Players/Players.tsx","components/SpeedDial.tsx","containers/RoomCreateInRoom.tsx","routes/Room/RoomPage/components/RoomSpeedDial.tsx","routes/Room/RoomPage/components/RoomPageView.tsx","routes/Room/RoomPage/index.ts","routes/Room/RoomPage/RoomPage.tsx"],"names":["locationHelper","locationHelperBuilder","history","createBrowserHistory","UserIsAuthenticated","connectedRouterRedirect","redirectPath","RouterPath","HOME_PATH","AuthenticatingComponent","Loader","wrapperDisplayName","authenticatedSelector","firebaseSelectors","isAuthenticated","authenticatingSelector","redirectAction","newLoc","dispatch","push","type","payload","message","allowRedirectBack","state","firebase","auth","isEmpty","isInitializing","isLoaded","ownProps","getRedirectQueryParam","ROOMS_PATH","Chatter","React","lazy","styles","createStyles","image","width","height","backgroundPosition","backgroundSize","useStyles","makeStyles","RoomCreateImage","props","classes","form","useSelector","mainSelectors","getFormCreateRoom","Collapse","in","roomImage","length","CardMedia","className","title","RoomCreateForm","reduxForm","validate","values","errors","createRoomFormModel","roomName","name","maxPlayers","forEach","field","diceType","handleSubmit","pristine","submitting","handleClose","invalid","onSubmit","DialogContent","dividers","campaignTitle","description","gameMasterAvatar","style","DialogActions","Button","color","disabled","onClick","RoomCreate","open","onClose","initialValues","theme","useTheme","fullScreen","useMediaQuery","breakpoints","down","Dialog","aria-labelledby","DialogTitle","enhancedRoomList","compose","setDisplayName","withRouter","PlayerTile","memo","withStyles","tile","borderRadius","spacing","marginRight","maxWidth","overflow","padding","palette","primary","light","titleDisable","warning","masterGame","position","zIndex","top","right","titleBar","background","player","gameMaster","GridListTile","src","avatarUrl","photoURL","alt","displayName","GridListTileBar","root","connected","actionIcon","Tooltip","IconButton","aria-label","clsx","Players","display","flexWrap","justifyContent","backgroundColor","paper","gridList","transform","visible","players","firestoreSelectors","selectedRoomPlayers","selectedRoomGameMasterProfile","Slide","direction","GridList","cols","Grow","timeout","map","id","key","uid","SpeedDialWrapper","actions","useState","setOpen","SpeedDial","ariaLabel","icon","SpeedDialIcon","onOpen","action","SpeedDialAction","tooltipTitle","callback","RoomCreateInRoom","firestore","useFirestore","selectedRoomFormData","selectedRoomUid","roomsSelectors","formValues","Object","keys","undefined","doc","FirestoreCollection","ROOMS","update","then","room","e","console","log","RoomSpeedDialWrapper","snackbar","useDispatch","isGameMasterOfSelectedRoom","drawerOpened","chatOpened","playersOpened","showRoomForm","setShowRoomForm","text","snackbarConfig","setSnackbarConfig","actionsAdditional","cb","roomsActions","setDrawerOpenValue","setChatOpenValue","setPlayersOpenValue","navigator","permissions","query","result","clipboard","writeText","window","location","href","Fragment","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","Alert","severity","margin","diceWrapper","chatter","bottom","transition","chatterLower","speedDial","left","speedDialLower","cssGrid","gridTemplateColumns","gridTemplateRows","rowGap","columnGap","cssItem1","gridColumn","gridRow","cssItem2","diceDashboard","RoomView","diceRolling","selectedRoom","isUserARoomPlayerOrGameMaster","diceCardFullHeight","visbile","DiceCard","match","selectedRoomData","storeLocationMatch","locationSelectors","userProfile","useEffect","JSON","stringify","locationActions","matchChange","setSelectedRoom","params","indexOf","documentRef","runTransaction","t","get","data","err","onEnterTheRoomAddUserToPlayers","createdAt","chatsActions","setSelectedChat","chatUid"],"mappings":"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","file":"static/js/7.d51d3218.chunk.js","sourcesContent":["import locationHelperBuilder from 'redux-auth-wrapper/history4/locationHelper';\nimport { connectedRouterRedirect } from 'redux-auth-wrapper/history4/redirect';\nimport { createBrowserHistory } from 'history';\nimport { RouterPath } from '../models/paths';\n\nimport { AppState } from '../store/main';\nimport { firebaseSelectors } from '../store/firebase/firebase.selectors';\nimport { Loader } from '../components/Loader';\n\nconst locationHelper = locationHelperBuilder({});\nconst history = createBrowserHistory();\n\nconst AUTHED_REDIRECT = 'AUTHED_REDIRECT';\nconst UNAUTHED_REDIRECT = 'UNAUTHED_REDIRECT';\n\n/**\n * Higher Order Component that redirects to `/login` instead\n * rendering if user is not authenticated (default of redux-auth-wrapper).\n * @param {Component} componentToWrap - Component to wrap\n * @return {Component} wrappedComponent\n */\nexport const UserIsAuthenticated = connectedRouterRedirect({\n  redirectPath: RouterPath.HOME_PATH,\n  AuthenticatingComponent: Loader,\n  wrapperDisplayName: 'UserIsAuthenticated',\n  // Want to redirect the user when they are done loading and authenticated\n  authenticatedSelector: firebaseSelectors.isAuthenticated,\n  authenticatingSelector: firebaseSelectors.authenticatingSelector,\n  redirectAction: ((newLoc: any) => (dispatch: any) => {\n    // Use push, replace, and go to navigate around.\n    history.push(newLoc);\n    dispatch({\n      type: UNAUTHED_REDIRECT,\n      payload: { message: 'User is not authenticated.' },\n    });\n  }) as any,\n});\n\n/**\n * Higher Order Component that redirects to listings page or most\n * recent route instead rendering if user is not authenticated. This is useful\n * routes that should not be displayed if a user is logged in, such as the\n * login route.\n * @param {Component} componentToWrap - Component to wrap\n * @return {Component} wrappedComponent\n */\nexport const UserIsNotAuthenticated = connectedRouterRedirect({\n  AuthenticatingComponent: Loader,\n  wrapperDisplayName: 'UserIsNotAuthenticated',\n  allowRedirectBack: false,\n  // Want to redirect the user when they are done loading and authenticated\n  authenticatedSelector: (state: AppState) => {\n    const {\n      firebase: { auth },\n    } = state;\n    return auth.isEmpty;\n  },\n  authenticatingSelector: ({ firebase: { auth, isInitializing } }) => !auth.isLoaded || isInitializing,\n  redirectPath: (state, ownProps) => locationHelper.getRedirectQueryParam(ownProps) || RouterPath.ROOMS_PATH,\n  redirectAction: ((newLoc: any) => (dispatch: any) => {\n    // Use push, replace, and go to navigate around.\n    history.push(newLoc);\n    dispatch({\n      type: AUTHED_REDIRECT,\n      payload: { message: 'User is not authenticated.' },\n    });\n  }) as any,\n});\n\n/*\n/!**\n * Render children based on route config objects\n * @param {Array} routes - Routes settings array\n * @param {Object} match - Routes settings array\n * @param {Object} parentProps - Props to pass to children from parent\n *!/\nexport function renderChildren(routes, match, parentProps) {\n  return routes.map(route => (\n    <Route\n      key={`${match.url}-${route.path}`}\n      path={`${match.url}/${route.path}`}\n      render={props => <route.component {...parentProps} {...props} />}\n    />\n  ));\n}*/\n","import React from 'react';\n\nexport const Chatter = React.lazy(() => import('./Chatter'));\n","import React from 'react';\nimport { CardMedia, Collapse, createStyles } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useSelector } from 'react-redux';\n\nimport { mainSelectors } from '../../../store/main.selectors';\n\ninterface RoomCreateImageProps {}\n\nconst styles = createStyles({\n  image: {\n    width: '100%',\n    height: '15vh',\n    backgroundPosition: 'center',\n    backgroundSize: 'cover',\n  },\n});\n\nconst useStyles = makeStyles(styles);\n\nexport function RoomCreateImage(props: RoomCreateImageProps) {\n  const classes = useStyles();\n  const form = useSelector(mainSelectors.getFormCreateRoom);\n\n  return (\n    <Collapse in={form?.roomImage?.length > 8}>\n      {form?.roomImage && (\n        <CardMedia\n          className={classes.image}\n          image={form?.roomImage}\n          title=\"Room Image\"\n        />\n      )}\n    </Collapse>\n  );\n}\n","import React from 'react';\nimport { Button, DialogActions, DialogContent } from '@material-ui/core';\nimport { InjectedFormProps, reduxForm } from 'redux-form';\n\nimport { createRoomFormModel } from '../../../models/rooms.model';\nimport { FormFieldCheckboxGroup, FormFieldText } from '../../../components/FormComponents';\nimport { RoomCreateImage } from './RoomCreateImage';\n\nconst validate = (values: any) => {\n  const errors: any = {};\n\n  [createRoomFormModel.roomName.name, createRoomFormModel.maxPlayers.name].forEach(field => {\n    if (!values[field]) {\n      errors[field] = 'Required';\n    }\n  });\n\n  if (!(values[createRoomFormModel.diceType.name] && values[createRoomFormModel.diceType.name].length)) {\n    errors[createRoomFormModel.diceType.name] = 'Select at least one dice';\n  }\n  return errors;\n};\n\ninterface RoomCreateFormProps extends InjectedFormProps {\n  handleClose: () => void;\n}\n\nfunction RoomCreateFormC(props: RoomCreateFormProps) {\n  const { handleSubmit, pristine, submitting, handleClose, invalid } = props;\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <RoomCreateImage />\n      <DialogContent dividers>\n        <FormFieldText {...createRoomFormModel.roomName} />\n        <FormFieldText {...createRoomFormModel.roomImage} />\n        <FormFieldText {...createRoomFormModel.campaignTitle} />\n        <FormFieldText {...createRoomFormModel.description} />\n        <FormFieldText {...createRoomFormModel.gameMasterAvatar} />\n        <div style={{ width: '50%' }}>\n          <FormFieldText {...createRoomFormModel.maxPlayers} />\n        </div>\n        <FormFieldCheckboxGroup {...createRoomFormModel.diceType} />\n      </DialogContent>\n      <DialogActions>\n        <Button type=\"submit\" color=\"primary\" disabled={invalid || pristine || submitting}>\n          Submit\n        </Button>\n        <Button type=\"button\" onClick={handleClose} color=\"primary\">\n          Cancel\n        </Button>\n      </DialogActions>\n    </form>\n  );\n}\n\nexport const RoomCreateForm = reduxForm({\n  form: 'createRoom',\n  validate,\n})(RoomCreateFormC as any) as any;\n","import React from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { Dialog, DialogTitle, useMediaQuery } from '@material-ui/core';\nimport { RoomCreateForm } from './components/RoomCreateForm';\n\nimport { IRoomCreateForm } from '../../models/rooms.model';\n\nexport interface RoomCreateProps {\n  open: boolean;\n  onClose: () => void;\n  onSubmit: (formValues: IRoomCreateForm) => void;\n  initialValues?: IRoomCreateForm;\n}\n\nexport function RoomCreate(props: RoomCreateProps) {\n  const { open, onClose, onSubmit, initialValues } = props;\n\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('xs'));\n\n  return (\n    <Dialog fullScreen={fullScreen} open={open} onClose={onClose} aria-labelledby=\"responsive-dialog-title\">\n      <DialogTitle>Create new Room</DialogTitle>\n      <RoomCreateForm handleClose={onClose} onSubmit={onSubmit} initialValues={initialValues} />\n    </Dialog>\n  );\n}\n","import { compose } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport { setDisplayName } from 'recompose';\nimport { UserIsAuthenticated } from '../../../utils/router.utils';\n\nexport const enhancedRoomList = compose(\n  // Set component display name (more clear in dev/error tools)\n  setDisplayName('EnhancedRoomList'),\n  // Add props.match\n  withRouter,\n  // Redirect to /login if user is not logged in\n  UserIsAuthenticated\n);\n","import clsx from 'clsx';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport GavelIcon from '@material-ui/icons/Gavel';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport React from 'react';\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\nimport { GridListTile, GridListTileBar, IconButton, Tooltip } from '@material-ui/core';\n\nimport { IProfile } from '../../../models/rooms.model';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    tile: {\n      borderRadius: theme.spacing(1),\n      marginRight: theme.spacing(2),\n      maxWidth: theme.spacing(30),\n      overflow: 'hidden',\n      padding: '0 !Important',\n      width: '100%',\n    },\n    title: {\n      color: theme.palette.primary.light,\n    },\n    titleDisable: {\n      color: theme.palette.warning.light,\n    },\n    masterGame: {\n      position: 'absolute' as 'absolute',\n      zIndex: 10,\n      top: 0,\n      right: 0,\n    },\n    titleBar: {\n      background: 'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\n    },\n  });\n\ninterface PlayerTileProps extends WithStyles<typeof styles> {\n  player: IProfile;\n  gameMaster?: boolean;\n}\n\nfunction PlayerTileC(props: PlayerTileProps) {\n  const { classes, player, gameMaster } = props;\n\n  return (\n    <GridListTile className={classes.tile}>\n      <img src={player.avatarUrl || player.photoURL} alt={player.displayName} />\n      <GridListTileBar\n        title={player.displayName}\n        classes={{\n          root: classes.titleBar,\n          title: player.connected ? classes.title : classes.titleDisable,\n        }}\n        actionIcon={\n          <Tooltip title={player.connected ? 'Online' : 'Offline'}>\n            <IconButton aria-label={`star ${player.displayName}`}>\n              {player.connected ? (\n                <CheckCircleIcon className={classes.title} />\n              ) : (\n                <HighlightOffIcon className={classes.titleDisable} />\n              )}\n            </IconButton>\n          </Tooltip>\n        }\n      />\n\n      {gameMaster && (\n        <Tooltip\n          className={clsx(classes.masterGame, player.connected ? classes.title : classes.titleDisable)}\n          title={'Game Master'}\n        >\n          <IconButton aria-label={`star ${player.displayName}`}>\n            <GavelIcon />\n          </IconButton>\n        </Tooltip>\n      )}\n    </GridListTile>\n  );\n}\n\nexport const PlayerTile = React.memo(withStyles(styles)(PlayerTileC));\n","import React from 'react';\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\nimport { GridList, Grow, Slide } from '@material-ui/core';\nimport { useSelector } from 'react-redux';\n\nimport { firestoreSelectors } from '../../store/firebase/firestore.selectors';\nimport { PlayerTile } from './components/PlayerTile';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'space-around',\n      overflow: 'hidden',\n      backgroundColor: theme.palette.background.paper,\n    },\n    gridList: {\n      height: theme.spacing(20),\n      width: '100%',\n      flexWrap: 'nowrap',\n      transform: 'translateZ(0)',\n    },\n  });\n\ninterface PlayersProps extends WithStyles<typeof styles> {\n  visible?: boolean;\n}\n\nfunction PlayersC(props: PlayersProps) {\n  const { classes, visible } = props;\n\n  const players = useSelector(firestoreSelectors.selectedRoomPlayers);\n  const gameMaster = useSelector(firestoreSelectors.selectedRoomGameMasterProfile);\n\n  return (\n    <Slide direction=\"up\" in={visible}>\n      <GridList className={classes.gridList} cols={2.5}>\n        {gameMaster && (\n          <Grow in timeout={300}>\n            <PlayerTile player={gameMaster} gameMaster />\n          </Grow>\n        )}\n\n        {players &&\n          players.map((player, id) => (\n            <Grow in key={player.uid} timeout={1000 * id + 1300}>\n              <PlayerTile player={player} />\n            </Grow>\n          ))}\n      </GridList>\n    </Slide>\n  );\n}\n\nexport const Players = withStyles(styles)(PlayersC);\n","import React from 'react';\nimport SpeedDial from '@material-ui/lab/SpeedDial';\nimport SpeedDialAction from '@material-ui/lab/SpeedDialAction';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\n\nconst styles = (theme: Theme) => createStyles({});\ntype extend = WithStyles<typeof styles>;\n\nexport interface ISpeedDialAction {\n  icon: React.ReactElement;\n  name: string;\n  callback?: (callback: () => void) => void;\n}\n\ninterface SpeedDialCProps extends extend {\n  direction?: 'up' | 'down' | 'left' | 'right';\n  actions: ISpeedDialAction[];\n}\n\nfunction SpeedDialC(props: SpeedDialCProps) {\n  const { direction = 'left', actions } = props;\n\n  const [open, setOpen] = React.useState(false);\n  const handleClose = () => setOpen(false);\n  const handleOpen = () => setOpen(true);\n\n  return (\n    <SpeedDial\n      ariaLabel=\"SpeedDial example\"\n      icon={<SpeedDialIcon />}\n      onClose={handleClose}\n      onOpen={handleOpen}\n      open={open}\n      direction={direction}\n    >\n      {actions.map(action => (\n        <SpeedDialAction\n          key={action.name}\n          icon={action.icon}\n          tooltipTitle={action.name}\n          onClick={() => (action.callback ? action.callback(handleClose) : handleClose())}\n        />\n      ))}\n    </SpeedDial>\n  );\n}\n\nexport const SpeedDialWrapper =  React.memo(withStyles(styles)(SpeedDialC));\n","import React from 'react';\nimport { useFirestore } from 'react-redux-firebase';\nimport { useSelector } from 'react-redux';\n\nimport { FirestoreCollection } from '../models/firebase.model';\nimport { firestoreSelectors } from '../store/firebase/firestore.selectors';\nimport { IRoomCreateForm } from '../models/rooms.model';\nimport { RoomCreate } from '../modules/RoomCreate/RoomCreate';\nimport { roomsSelectors } from '../store/rooms/rooms.selectors';\n\ninterface RoomCreateInRoomProps {\n  open: boolean;\n  onClose: () => void;\n}\n\nexport function RoomCreateInRoom(props: RoomCreateInRoomProps) {\n  const { open, onClose } = props;\n  const firestore = useFirestore();\n  const selectedRoomFormData = useSelector(firestoreSelectors.selectedRoomFormData) as IRoomCreateForm;\n  const selectedRoomUid = useSelector(roomsSelectors.selectedRoomUid) as string;\n\n  const handleSubmit = (formValues: IRoomCreateForm) => {\n    Object.keys(formValues).forEach(key => (formValues as any)[key] === undefined && delete (formValues as any)[key]);\n\n    firestore\n      .doc(`${FirestoreCollection.ROOMS}/${selectedRoomUid}`)\n      .update({ ...formValues })\n      .then(room => {\n        onClose();\n      })\n      .catch((e: boolean) => {\n        // TODO implement error message\n        console.log({ e });\n      });\n  };\n\n  return <RoomCreate open={open} onClose={onClose} onSubmit={handleSubmit} initialValues={selectedRoomFormData} />;\n}\n","import EditIcon from '@material-ui/icons/Edit';\nimport ForumIcon from '@material-ui/icons/Forum';\nimport GroupIcon from '@material-ui/icons/Group';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport React, { useState } from 'react';\nimport ShareIcon from '@material-ui/icons/Share';\nimport { Alert } from '@material-ui/lab';\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\nimport { Snackbar } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { ISpeedDialAction, SpeedDialWrapper } from '../../../../components/SpeedDial';\nimport { mainSelectors } from '../../../../store/main.selectors';\nimport { roomsActions } from '../../../../store/rooms/rooms.actions';\nimport { roomsSelectors } from '../../../../store/rooms/rooms.selectors';\nimport { RoomCreateInRoom } from '../../../../containers/RoomCreateInRoom';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    snackbar: {\n      top: theme.spacing(8),\n    },\n  });\ninterface RoomSpeedDialCProps extends WithStyles<typeof styles> {}\n\nfunction RoomSpeedDialC(props: RoomSpeedDialCProps) {\n  const { classes } = props;\n  const dispatch = useDispatch();\n\n  const isGameMasterOfSelectedRoom = useSelector(mainSelectors.isGameMasterOfSelectedRoom);\n  const drawerOpened = useSelector(roomsSelectors.drawerOpened);\n  const chatOpened = useSelector(roomsSelectors.chatOpened);\n  const playersOpened = useSelector(roomsSelectors.playersOpened);\n  const [showRoomForm, setShowRoomForm] = useState(false);\n  const [snackbarConfig, setSnackbarConfig] = React.useState<{\n    type: 'success' | 'error';\n    open: boolean;\n    text: string;\n  }>({\n    type: 'success',\n    open: false,\n    text: '',\n  });\n\n  function copyRoomUrlToClipboard(): void {\n    navigator.permissions.query({ name: 'clipboard-write' as any }).then(result => {\n      if (result.state === 'granted' || result.state === 'prompt') {\n        navigator.clipboard.writeText(window.location.href).then(\n          () => setSnackbarConfig({ type: 'success', open: true, text: 'Room URL copied to clipboard!' }),\n          () => setSnackbarConfig({ type: 'error', open: true, text: 'Upss.. there was an error' })\n        );\n      }\n    });\n  }\n\n  const actionsAdditional: ISpeedDialAction[] = isGameMasterOfSelectedRoom\n    ? [\n        {\n          icon: <EditIcon />,\n          name: 'Edit Room Description',\n          callback: cb => setShowRoomForm(true),\n        },\n      ]\n    : [];\n  const actions: ISpeedDialAction[] = [\n    {\n      icon: drawerOpened ? <NavigateBeforeIcon /> : <NavigateNextIcon />,\n      name: drawerOpened ? 'Hide Nav' : 'Show Nav',\n      callback: cb => dispatch(roomsActions.setDrawerOpenValue(!drawerOpened)),\n    },\n    {\n      icon: <ForumIcon />,\n      name: chatOpened ? 'Hide chat' : 'Show Chat',\n      callback: cb => dispatch(roomsActions.setChatOpenValue(!chatOpened)),\n    },\n    {\n      icon: <GroupIcon />,\n      name: playersOpened ? 'Hide players' : 'Show players',\n      callback: cb => dispatch(roomsActions.setPlayersOpenValue(!playersOpened)),\n    },\n    {\n      icon: <ShareIcon />,\n      name: 'Copy Room Url',\n      callback: cb => copyRoomUrlToClipboard(),\n    },\n    ...actionsAdditional,\n  ];\n\n  return (\n    <React.Fragment>\n      <SpeedDialWrapper actions={actions} direction={'right'} />\n      <Snackbar\n        className={classes.snackbar}\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n        open={snackbarConfig.open}\n        autoHideDuration={6000}\n        onClose={() => setSnackbarConfig({ ...snackbarConfig, open: false })}\n      >\n        <Alert onClose={() => setSnackbarConfig({ ...snackbarConfig, open: false })} severity={snackbarConfig.type}>\n          {snackbarConfig.text}\n        </Alert>\n      </Snackbar>\n      <RoomCreateInRoom open={showRoomForm} onClose={() => setShowRoomForm(false)} />\n    </React.Fragment>\n  );\n}\n\nexport const RoomSpeedDialWrapper = withStyles(styles)(RoomSpeedDialC);\n","import clsx from 'clsx';\nimport React from 'react';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport { useSelector } from 'react-redux';\n\nimport { Chatter } from '../../../../modules/Chatter';\nimport { DiceCard } from '../../../../modules/DiceCard/DiceCard';\nimport { DiceDashboard } from '../../../../modules/DiceDashboard/DiceDashbard';\nimport { Players } from '../../../../modules/Players/Players';\nimport { RoomSpeedDialWrapper } from './RoomSpeedDial';\nimport { roomsSelectors } from '../../../../store/rooms/rooms.selectors';\nimport { mainSelectors } from '../../../../store/main.selectors';\nimport { firestoreSelectors } from '../../../../store/firebase/firestore.selectors';\n\n// TODO: update grid heights when no profiles\nconst styles = (theme: Theme) => ({\n  root: {\n    position: 'relative' as 'relative',\n    margin: theme.spacing(-6, -4),\n    height: `calc(100% + ${theme.spacing(12)}px)`,\n  },\n  diceWrapper: {},\n  chatter: {\n    zIndex: 100,\n    position: 'fixed' as 'fixed',\n    bottom: theme.spacing(4),\n    // bottom: theme.spacing(26), // TODO: update height or grid structure\n    right: theme.spacing(2),\n    transition: 'bottom 225ms cubic-bezier(0, 0, 0.2, 1) 0ms',\n  },\n  chatterLower: {\n    bottom: theme.spacing(4),\n  },\n  speedDial: {\n    position: 'absolute' as 'absolute',\n    bottom: theme.spacing(25),\n    left: theme.spacing(3),\n    zIndex: 10,\n    transition: 'bottom 225ms cubic-bezier(0, 0, 0.2, 1) 0ms',\n  },\n  speedDialLower: {\n    bottom: theme.spacing(3),\n  },\n  cssGrid: {\n    height: '100%',\n    display: 'grid',\n    gridTemplateColumns: '1fr',\n    gridTemplateRows: '1fr auto',\n    rowGap: `${theme.spacing(2)}px`,\n    columnGap: `${theme.spacing(2)}px`,\n    padding: theme.spacing(2, 2, 0, 2),\n  },\n  cssItem1: {\n    gridColumn: 1,\n    gridRow: 1,\n  },\n  cssItem2: {\n    gridColumn: 1,\n    gridRow: 2,\n  },\n  diceDashboard: {\n    position: 'absolute' as 'absolute',\n    zIndex: 1000,\n    top: theme.spacing(3),\n    left: theme.spacing(3),\n  },\n});\n\nconst useStyles = makeStyles(styles);\n\nexport function RoomView() {\n  const classes = useStyles();\n\n  const playersOpened = useSelector(roomsSelectors.playersOpened);\n  const chatOpened = useSelector(roomsSelectors.chatOpened);\n  const diceRolling = useSelector(roomsSelectors.diceRolling);\n  const selectedRoom = useSelector(firestoreSelectors.selectedRoom);\n\n  const isUserARoomPlayerOrGameMaster = useSelector(mainSelectors.isUserARoomPlayerOrGameMaster);\n\n  const diceCardFullHeight = !playersOpened || !selectedRoom ;\n\n  return (\n    <section className={classes.root}>\n      <div className={clsx(classes.chatter, diceCardFullHeight && classes.chatterLower)}>\n        <Chatter visbile={chatOpened && !diceRolling && isUserARoomPlayerOrGameMaster} />\n      </div>\n\n      <div className={classes.cssGrid}>\n        <div className={classes.cssItem1}>\n          <DiceCard />\n        </div>\n        <div className={classes.cssItem2}>\n          <Players visible={!diceCardFullHeight} />\n        </div>\n      </div>\n\n      <nav className={clsx(classes.speedDial, diceCardFullHeight && classes.speedDialLower)}>\n        <RoomSpeedDialWrapper />\n      </nav>\n\n      <nav className={classes.diceDashboard}>\n        <DiceDashboard visible={!diceRolling && !!selectedRoom && isUserARoomPlayerOrGameMaster} room={selectedRoom} />\n      </nav>\n    </section>\n  );\n}\n","import { enhancedRoomList } from './RoomPage.enhancer';\nimport { RoomC } from './RoomPage';\n\nexport default enhancedRoomList(RoomC);\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useFirestore } from 'react-redux-firebase';\n\nimport { chatsActions } from '../../../store/chats/chats.actions';\nimport { firebaseSelectors } from '../../../store/firebase/firebase.selectors';\nimport { FirestoreCollection } from '../../../models/firebase.model';\nimport { firestoreSelectors } from '../../../store/firebase/firestore.selectors';\nimport { locationActions } from '../../../store/location/location.actions';\nimport { LocationMatch } from '../../../store/location/location.model';\nimport { locationSelectors } from '../../../store/location/location.selectors';\nimport { roomsActions } from '../../../store/rooms/rooms.actions';\nimport { roomsSelectors } from '../../../store/rooms/rooms.selectors';\nimport { DiceServiceContextC } from '../../../contexts/DiceService.context';\nimport { RoomView } from './components/RoomPageView';\n\n//\n\nexport interface RoomListProps {\n  match: LocationMatch;\n}\n\nexport function RoomC(props: RoomListProps) {\n  const { match } = props;\n\n  const dispatch = useDispatch();\n  const firestore = useFirestore();\n\n  const selectedRoomData = useSelector(firestoreSelectors.selectedRoom);\n  const selectedRoomUid = useSelector(roomsSelectors.selectedRoomUid);\n  const storeLocationMatch = useSelector(locationSelectors.match);\n  const userProfile = useSelector(firebaseSelectors.userProfile);\n\n  /**\n   * Effects logic\n   */\n  function onChangeSetLocationMatch(): void {\n    if (JSON.stringify(match) !== JSON.stringify(storeLocationMatch)) {\n      dispatch(locationActions.matchChange(match));\n    }\n    dispatch(roomsActions.setSelectedRoom((storeLocationMatch.params as any)['roomId']));\n  }\n  function onUnmountSetSelectedRoomToNull(): void {\n    dispatch(roomsActions.setSelectedRoom(null));\n  }\n  function onChangeSetSelectedChat(): void {\n    dispatch(chatsActions.setSelectedChat(selectedRoomData?.chatUid || null));\n  }\n  function onEnterTheRoomAddUserToPlayers(): void {\n    if (!selectedRoomData) return;\n\n\n    if (selectedRoomData?.maxPlayers <= selectedRoomData.players.length) {\n      // TODO toast message\n      return;\n    }\n    if (!selectedRoomData?.players || !userProfile.uid || selectedRoomData.gameMaster.uid === userProfile.uid) return;\n    if (selectedRoomData.players.indexOf(userProfile.uid) !== -1) return;\n\n    const documentRef = firestore.doc(`${FirestoreCollection.ROOMS}/${selectedRoomUid}`);\n    firestore.runTransaction((t: any) => {\n      return t\n        .get(documentRef)\n        .then((doc: any) => {\n          const players = [...doc.data().players, userProfile.uid];\n          return t.update(documentRef, { players });\n        })\n        .catch((err: any) => {\n          // TODO: add toast message\n          // TRANSACTION_FAILURE action dispatched\n          console.log('Transaction failure:', err);\n        });\n    });\n  }\n\n  /**\n   * Effects\n   */\n  useEffect(() => onChangeSetLocationMatch());\n\n  useEffect(() => {\n    onEnterTheRoomAddUserToPlayers();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedRoomUid, selectedRoomData?.createdAt, userProfile.uid]);\n\n  useEffect(() => {\n    return () => onUnmountSetSelectedRoomToNull();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    onChangeSetSelectedChat();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedRoomData?.chatUid]);\n\n  return (\n    <React.Fragment>\n      {selectedRoomUid &&\n        [selectedRoomUid].map(uid => (\n          <DiceServiceContextC key={uid as string}>\n            <RoomView />\n          </DiceServiceContextC>\n        ))}\n    </React.Fragment>\n  );\n}\n"],"sourceRoot":""}