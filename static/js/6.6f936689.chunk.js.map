{"version":3,"sources":["utils/router.utils.ts","modules/Chatter/index.ts","models/dice.model.ts","models/rooms.model.ts","routes/Room/RoomPage/RoomPage.enhancer.tsx","modules/DiceCard/components/DiceNav.tsx","config/dice.config.ts","store/rooms/rooms.actions.ts","services/store.service.ts","services/dice.service.ts","modules/DiceCard/DiceCard.tsx","modules/Players/components/PlayerTile.tsx","modules/Players/Players.tsx","components/SpeedDial.tsx","routes/Room/RoomPage/components/RoomSpeedDial.tsx","routes/Room/RoomPage/RoomPage.tsx","routes/Room/RoomPage/index.ts"],"names":["locationHelper","locationHelperBuilder","history","createBrowserHistory","UserIsAuthenticated","connectedRouterRedirect","redirectPath","RouterPath","HOME_PATH","AuthenticatingComponent","Loader","wrapperDisplayName","authenticatedSelector","firebaseSelectors","authenticatingSelector","redirectAction","newLoc","dispatch","push","type","payload","message","allowRedirectBack","state","firebase","auth","isEmpty","isInitializing","isLoaded","ownProps","getRedirectQueryParam","ROOMS_PATH","Chatter","React","lazy","Dice","Log","createRoomFormModel","roomName","name","label","fullWidth","diceType","options","D4","value","D6","D8","D10","D12","D20","D100","description","multiline","enhancedRoomList","compose","setDisplayName","withRouter","DiceNav","withStyles","theme","createStyles","root","display","backgroundColor","details","flexDirection","content","flex","cover","width","controls","alignItems","paddingLeft","spacing","paddingBottom","playIcon","height","props","classes","Card","className","CardContent","Typography","component","variant","color","CardMedia","image","process","title","diceDefaultConfig","idCanvas","idLabel","idSet","idSelectorDiv","idInfoDiv","useTrueRandom","useShadows","whiteDice","noresult","diceThrow$","diceThrowResult$","roomsActions","action","RoomsAction","SELECTED","SET_DRAWER_OPEN_VALUE","SET_CHAT_OPEN_VALUE","SET_PLAYERS_OPEN_VALUE","SET_DICE_ROLLING","StoreService","store","takeUntil$","Subject","_store$","ReplaySubject","_storeUnsubscribeFn","this","subscribe","next","getState","store$","pipe","map","firestore","data","selectedRoom","filter","room","getSelectedRoomData$","logs","getSelectedRoomDataLogs$","pop","log","distinctUntilChanged","a","b","timestamp","profile","instance","asObservable","DiceService","diceThrowSetArray$","diceBeforeThrow$","roomUid","storeService","getInstance","createSubscriptions","setDiceRolling","takeUntil","diceThrow","console","emit","firestoreAddNewThrow","performDiceThrowWhenNewDiceThrowLogAppears","diceRolling","diceThrowResult","documentRef","doc","FirestoreCollection","ROOMS","runTransaction","t","get","then","newLog","authorUid","uid","Date","now","toString","DICE_ROLL","update","err","getLastRoomLogOnChange$","withLatestFrom","getUserProfile$","DiceCard","position","diceCanvas","nav","top","left","canvasRef","useRef","canvasWidth","current","getBoundingClientRect","useState","diceInitialized","setDiceInitialized","useFirestore","useSelector","userProfile","roomsSelectors","selectedRoomUid","diceService","diceContainerEl","useEffect","window","dice_initialize","hostDestroyed","Paper","elevation","id","ref","PlayerTile","tile","borderRadius","marginRight","maxWidth","overflow","padding","palette","primary","light","titleDisable","warning","masterGame","info","titleBar","background","player","gameMaster","GridListTile","src","photoURL","alt","displayName","GridListTileBar","connected","actionIcon","Tooltip","IconButton","aria-label","Players","flexWrap","justifyContent","paper","gridList","transform","visible","players","firestoreSelectors","selectedRoomPlayers","selectedRoomGameMasterProfile","Slide","direction","in","GridList","cols","Grow","timeout","key","SpeedDialWrapper","actions","open","setOpen","handleClose","SpeedDial","ariaLabel","icon","SpeedDialIcon","onClose","onOpen","SpeedDialAction","tooltipTitle","onClick","callback","RoomSpeedDialWrapper","snackbar","useDispatch","drawerOpened","mainSelectors","isGameMasterOfSelectedRoom","chatOpened","playersOpened","text","snackbarConfig","setSnackbarConfig","actionsAdditional","cb","navigator","permissions","query","result","clipboard","writeText","location","href","Fragment","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","Alert","severity","useStyles","makeStyles","margin","diceWrapper","chatter","zIndex","bottom","right","transition","chatterLower","speedDial","speedDialLower","cssGrid","gridTemplateColumns","gridTemplateRows","rowGap","columnGap","cssItem1","gridColumn","gridRow","cssItem2","match","selectedRoomData","storeLocationMatch","locationSelectors","JSON","stringify","locationActions","matchChange","params","indexOf","onEnterTheRoomAddUserToPlayers","createdAt","chatsActions","setSelectedChat","chatUid","clsx","visbile"],"mappings":"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","file":"static/js/6.6f936689.chunk.js","sourcesContent":["import locationHelperBuilder from 'redux-auth-wrapper/history4/locationHelper';\nimport { connectedRouterRedirect } from 'redux-auth-wrapper/history4/redirect';\nimport { createBrowserHistory } from 'history';\nimport { RouterPath } from '../models/paths';\n\nimport { AppState } from '../store/main';\nimport { firebaseSelectors } from '../store/firebase/firebase.selectors';\nimport { Loader } from '../components/Loader';\n\nconst locationHelper = locationHelperBuilder({});\nconst history = createBrowserHistory();\n\nconst AUTHED_REDIRECT = 'AUTHED_REDIRECT';\nconst UNAUTHED_REDIRECT = 'UNAUTHED_REDIRECT';\n\n/**\n * Higher Order Component that redirects to `/login` instead\n * rendering if user is not authenticated (default of redux-auth-wrapper).\n * @param {Component} componentToWrap - Component to wrap\n * @return {Component} wrappedComponent\n */\nexport const UserIsAuthenticated = connectedRouterRedirect({\n  redirectPath: RouterPath.HOME_PATH,\n  AuthenticatingComponent: Loader,\n  wrapperDisplayName: 'UserIsAuthenticated',\n  // Want to redirect the user when they are done loading and authenticated\n  authenticatedSelector: firebaseSelectors.authenticatedSelector,\n  authenticatingSelector: firebaseSelectors.authenticatingSelector,\n  redirectAction: ((newLoc: any) => (dispatch: any) => {\n    // Use push, replace, and go to navigate around.\n    history.push(newLoc);\n    dispatch({\n      type: UNAUTHED_REDIRECT,\n      payload: { message: 'User is not authenticated.' },\n    });\n  }) as any,\n});\n\n/**\n * Higher Order Component that redirects to listings page or most\n * recent route instead rendering if user is not authenticated. This is useful\n * routes that should not be displayed if a user is logged in, such as the\n * login route.\n * @param {Component} componentToWrap - Component to wrap\n * @return {Component} wrappedComponent\n */\nexport const UserIsNotAuthenticated = connectedRouterRedirect({\n  AuthenticatingComponent: Loader,\n  wrapperDisplayName: 'UserIsNotAuthenticated',\n  allowRedirectBack: false,\n  // Want to redirect the user when they are done loading and authenticated\n  authenticatedSelector: (state: AppState) => {\n    const {\n      firebase: { auth },\n    } = state;\n    return auth.isEmpty;\n  },\n  authenticatingSelector: ({ firebase: { auth, isInitializing } }) => !auth.isLoaded || isInitializing,\n  redirectPath: (state, ownProps) => locationHelper.getRedirectQueryParam(ownProps) || RouterPath.ROOMS_PATH,\n  redirectAction: ((newLoc: any) => (dispatch: any) => {\n    // Use push, replace, and go to navigate around.\n    history.push(newLoc);\n    dispatch({\n      type: AUTHED_REDIRECT,\n      payload: { message: 'User is not authenticated.' },\n    });\n  }) as any,\n});\n\n/*\n/!**\n * Render children based on route config objects\n * @param {Array} routes - Routes settings array\n * @param {Object} match - Routes settings array\n * @param {Object} parentProps - Props to pass to children from parent\n *!/\nexport function renderChildren(routes, match, parentProps) {\n  return routes.map(route => (\n    <Route\n      key={`${match.url}-${route.path}`}\n      path={`${match.url}/${route.path}`}\n      render={props => <route.component {...parentProps} {...props} />}\n    />\n  ));\n}*/\n","import React from 'react';\n\nexport const Chatter = React.lazy(() => import('./Chatter'));\n","export interface IDiceBeforeThrow {\n  vectors: any;\n  notation: any;\n  throwRequestResult: number[];\n  emitResult: boolean;\n}\n\nexport interface IDiceThrowResult {\n  diceSet: string;\n  throwRequestResult: number[];\n  emit: boolean;\n}\n\nexport enum Dice {\n  D4 = 'd4',\n  D6 = 'd6',\n  D8 = 'd8',\n  D10 = 'd10',\n  D12 = 'd12',\n  D20 = 'd20',\n  D100 = 'd100',\n}\n\ninterface IDiceVector {\n  set: Dice;\n  pos: {\n    x: number;\n    y: number;\n    z: number;\n  };\n  velocity: {\n    x: number;\n    y: number;\n    z: number;\n  };\n  angle: {\n    x: number;\n    y: number;\n    z: number;\n  };\n  axis: {\n    x: number;\n    y: number;\n    z: number;\n    a: number;\n  };\n}\n\nexport interface IDiceThrow {\n  diceSet: string;\n  throwRequestResult: number[];\n}\n","import { Dice, IDiceThrowResult } from './dice.model';\n\nexport enum Log {\n  DICE_ROLL = 'DICE_ROLL',\n}\n\nexport interface IProfile {\n  uid: string;\n  avatarUrl: string;\n  displayName: string;\n  email: string;\n  photoURL: string;\n  connected?: boolean;\n}\n\nexport interface IRoomLog {\n  timestamp: string;\n  type: Log;\n  authorUid: string;\n  payload: Omit<IDiceThrowResult, 'emit'>;\n}\n\nexport interface IRoom extends IRoomCreateForm {\n  createdAt: string;\n  gameMaster: IProfile;\n  players: string[];\n  logs: IRoomLog[];\n  chatUid?: string;\n}\n\nexport interface IRoomCreateForm {\n  roomName: string;\n  diceType: Dice[];\n  description: string;\n}\n\nexport const createRoomFormModel = {\n  roomName: { name: 'roomName', label: 'Name of the Room', fullWidth: true },\n  diceType: {\n    name: 'diceType',\n    label: 'Allowed dice',\n    options: [\n      { label: Dice.D4, value: Dice.D4 },\n      { label: Dice.D6, value: Dice.D6 },\n      { label: Dice.D8, value: Dice.D8 },\n      { label: Dice.D10, value: Dice.D10 },\n      { label: Dice.D12, value: Dice.D12 },\n      { label: Dice.D20, value: Dice.D20 },\n      { label: Dice.D100, value: Dice.D100 },\n    ],\n  },\n  description: { name: 'description', label: 'Room description', multiline: true, fullWidth: true },\n};\n\nexport const diceSetFormModel = {\n  diceD4: { name: Dice.D4, label: Dice.D4, defaultValue: 1 },\n  diceD6: { name: Dice.D6, label: Dice.D6, defaultValue: 1 },\n  diceD8: { name: Dice.D8, label: Dice.D8, defaultValue: 1 },\n  diceD10: { name: Dice.D10, label: Dice.D10, defaultValue: 1 },\n  diceD12: { name: Dice.D12, label: Dice.D12, defaultValue: 1 },\n  diceD20: { name: Dice.D20, label: Dice.D20, defaultValue: 1 },\n  diceD100: { name: Dice.D100, label: Dice.D100, defaultValue: 1 },\n};\n","import { compose } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport { setDisplayName } from 'recompose';\nimport { UserIsAuthenticated } from '../../../utils/router.utils';\n\nexport const enhancedRoomList = compose(\n  // Set component display name (more clear in dev/error tools)\n  setDisplayName('EnhancedRoomList'),\n  // Add props.match\n  withRouter,\n  // Redirect to /login if user is not logged in\n  UserIsAuthenticated\n);\n","import React from 'react';\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\nimport { Card, CardContent, CardMedia, Typography } from '@material-ui/core';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      backgroundColor: '#f4f4f260',\n    },\n    details: {\n      display: 'flex',\n      flexDirection: 'column',\n    },\n    content: {\n      flex: '1 0 auto',\n    },\n    cover: {\n      width: 151,\n    },\n    controls: {\n      display: 'flex',\n      alignItems: 'center',\n      paddingLeft: theme.spacing(1),\n      paddingBottom: theme.spacing(1),\n    },\n    playIcon: {\n      height: 38,\n      width: 38,\n    },\n  });\n\ninterface DiceNavProps extends WithStyles<typeof styles> {}\n\nfunction DiceNavC(props: DiceNavProps) {\n  const { classes } = props;\n\n  return (\n    <Card className={classes.root}>\n      <div className={classes.details}>\n        <CardContent className={classes.content}>\n          <Typography component=\"h5\" variant=\"h5\">\n            Live From Space\n          </Typography>\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">\n            Mac Miller\n          </Typography>\n        </CardContent>\n        <div className={classes.controls}>Some text here</div>\n      </div>\n      <CardMedia className={classes.cover} image={`${process.env.PUBLIC_URL}/assets/images/avatar-1.jpg`} title=\"Live from space album cover\" />\n    </Card>\n  );\n}\n\nexport const DiceNav = withStyles(styles)(DiceNavC);\n","export const diceDefaultConfig = {\n  idCanvas: 'canvas',\n  idLabel: 'label',\n  idSet: 'set',\n  idSelectorDiv: 'selector_div',\n  idInfoDiv: 'info_div',\n  useTrueRandom: false,\n  useShadows: true,\n  whiteDice: false,\n  noresult: false,\n  diceThrow$: null,\n  diceThrowResult$: null,\n};\n","import { action } from 'typesafe-actions';\nimport { RoomsAction } from './rooms.model';\n\nexport const roomsActions = {\n  setSelectedRoom: (payload: string | null) => action(RoomsAction.SELECTED, payload),\n  setDrawerOpenValue: (payload: boolean) => action(RoomsAction.SET_DRAWER_OPEN_VALUE, payload),\n  setChatOpenValue: (payload: boolean) => action(RoomsAction.SET_CHAT_OPEN_VALUE, payload),\n  setPlayersOpenValue: (payload: boolean) => action(RoomsAction.SET_PLAYERS_OPEN_VALUE, payload),\n  diceRolling: (payload: boolean) => action(RoomsAction.SET_DICE_ROLLING, payload),\n};\n","import { Observable, ReplaySubject, Subject } from 'rxjs';\nimport { Store } from 'redux';\n\nimport { store } from '../config/store.config';\nimport { AppState } from '../store/main';\nimport { IProfile, IRoom, IRoomLog } from '../models/rooms.model';\nimport { distinctUntilChanged, filter, map } from 'rxjs/operators';\n\nexport class StoreService {\n  private static instance: StoreService | null;\n\n  public store: Store = store;\n\n  private readonly takeUntil$ = new Subject();\n  private readonly _store$ = new ReplaySubject<AppState>(1);\n  private readonly _storeUnsubscribeFn: Function;\n\n  private constructor() {\n    this._storeUnsubscribeFn = this.store.subscribe(() => {\n      this._store$.next(this.store.getState());\n    });\n  }\n\n  public get store$(): Observable<AppState> {\n    return this._store$.asObservable();\n  }\n\n  public getSelectedRoomData$(): Observable<IRoom> {\n    return this.store$.pipe(\n      map(state => state.firestore.data.selectedRoom),\n      filter(room => !!room)\n    ) as Observable<IRoom>;\n  }\n\n  public getSelectedRoomDataLogs$(): Observable<Array<IRoomLog>> {\n    return this.getSelectedRoomData$().pipe(map(room => room.logs));\n  }\n\n  public getLastRoomLogOnChange$(): Observable<IRoomLog> {\n    return this.getSelectedRoomDataLogs$().pipe(\n      map(logs => [...logs].pop()),\n      // @ts-ignore\n      filter(log => !!log),\n      distinctUntilChanged((a, b) => a.timestamp === b.timestamp)\n    ) as Observable<IRoomLog>;\n  }\n\n  public getUserProfile$(): Observable<IProfile> {\n    return this.store$.pipe(map(state => state.firebase.profile));\n  }\n\n  public hostDestroyed(): void {\n    this.takeUntil$.next();\n    this._storeUnsubscribeFn();\n    StoreService.instance = null;\n  }\n\n  static getInstance(): StoreService {\n    if (!StoreService.instance) {\n      StoreService.instance = new StoreService();\n    }\n\n    return StoreService.instance;\n  }\n}\n","import { ReplaySubject, Subject } from 'rxjs';\nimport { firestore } from 'firebase';\nimport { filter, takeUntil, withLatestFrom } from 'rxjs/operators';\nimport { Store } from 'redux';\n\nimport { IDiceBeforeThrow, IDiceThrow, IDiceThrowResult } from '../models/dice.model';\nimport { roomsActions } from '../store/rooms/rooms.actions';\nimport { FirestoreCollection } from '../models/firestore.model';\nimport { IProfile, IRoom, IRoomLog, Log } from '../models/rooms.model';\nimport { store } from '../config/store.config';\nimport { StoreService } from './store.service';\n\nexport class DiceService {\n  private static instance: DiceService | null;\n\n  //TODO implement set dice set\n  public readonly diceThrowSetArray$ = new ReplaySubject<Array<string>>(1);\n  public readonly diceThrow$ = new Subject<IDiceThrow>();\n  public readonly diceBeforeThrow$ = new Subject<IDiceBeforeThrow>();\n  public readonly diceThrowResult$ = new ReplaySubject<IDiceThrowResult>(1);\n  public profile: IProfile | null = null;\n  public roomUid: string | null = null;\n  public store: Store = store;\n  private readonly takeUntil$ = new Subject();\n\n  private readonly storeService: StoreService = StoreService.getInstance();\n\n  private constructor(private firestore: firestore.Firestore) {\n    this.createSubscriptions();\n  }\n\n  public hostDestroyed(): void {\n    this.takeUntil$.next();\n    DiceService.instance = null;\n    this.setDiceRolling(false);\n  }\n\n  static getInstance(firestore: firestore.Firestore): DiceService {\n    if (!DiceService.instance) {\n      DiceService.instance = new DiceService(firestore);\n    }\n\n    return DiceService.instance;\n  }\n\n  private createSubscriptions(): void {\n    this.diceThrow$.pipe(takeUntil(this.takeUntil$)).subscribe(diceThrow => {\n      console.log('diceThrow$: ', diceThrow);\n    });\n\n    this.diceBeforeThrow$.pipe(takeUntil(this.takeUntil$)).subscribe(diceThrow => {\n      this.setDiceRolling(true);\n      console.log('diceBeforeThrow$: ', diceThrow);\n    });\n\n    this.diceThrowResult$.pipe(takeUntil(this.takeUntil$)).subscribe(diceThrow => {\n      this.setDiceRolling(false);\n      diceThrow.emit && this.firestoreAddNewThrow(diceThrow);\n      // console.log('diceThrowResult$: ', diceThrow);\n    });\n\n    this.performDiceThrowWhenNewDiceThrowLogAppears();\n  }\n\n  /**\n   * Set UI flag to tell if dice are rolling\n   */\n  private setDiceRolling(diceRolling: boolean): void {\n    this.store.dispatch(roomsActions.diceRolling(diceRolling));\n  }\n\n  private firestoreAddNewThrow(diceThrowResult: IDiceThrowResult): void {\n    if (!this.roomUid) {\n      return;\n    }\n\n    const { emit, ...payload } = diceThrowResult;\n    const documentRef = this.firestore.doc(`${FirestoreCollection.ROOMS}/${this.roomUid}`);\n\n    this.firestore.runTransaction((t: firestore.Transaction) => {\n      return t\n        .get(documentRef)\n        .then(doc => {\n          const newLog: IRoomLog = {\n            authorUid: this.profile?.uid as string,\n            payload,\n            timestamp: Date.now().toString(),\n            type: Log.DICE_ROLL,\n          };\n          const logs: IRoomLog[] = [...(doc.data() as IRoom).logs, newLog];\n          return t.update(documentRef, { logs });\n        })\n        .catch((err: any) => {\n          // TODO: add toast message\n          // TRANSACTION_FAILURE action dispatched\n          console.log('Transaction failure:', err);\n        });\n    });\n  }\n\n  private performDiceThrowWhenNewDiceThrowLogAppears() {\n    this.storeService\n      .getLastRoomLogOnChange$()\n      .pipe(\n        filter((log: IRoomLog) => log.type === Log.DICE_ROLL),\n        withLatestFrom(this.storeService.getUserProfile$()),\n        filter(([log, profile]) => !!profile.uid && log.authorUid !== profile.uid),\n        takeUntil(this.takeUntil$)\n      )\n      .subscribe(([log]: [IRoomLog, IProfile]) => {\n        this.diceThrow$.next({ ...log.payload });\n      });\n  }\n}\n","import React, { useEffect, useRef, useState } from 'react';\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\nimport { Paper } from '@material-ui/core';\n\nimport { DiceNav } from './components/DiceNav';\nimport { diceDefaultConfig } from '../../config/dice.config';\nimport { DiceService } from '../../services/dice.service';\nimport { useFirestore } from 'react-redux-firebase';\nimport { useSelector } from 'react-redux';\nimport { firebaseSelectors } from '../../store/firebase/firebase.selectors';\nimport { roomsSelectors } from '../../store/rooms/rooms.selectors';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n      height: `calc(100% - ${theme.spacing(2)}px)`,\n      position: 'relative' as 'relative',\n    },\n    diceCanvas: {\n      width: '100%',\n      height: '100%',\n      // position: 'absolute', top: 0, left: 0\n    },\n    nav: {\n      position: 'absolute' as 'absolute',\n      top: theme.spacing(1),\n      left: theme.spacing(1),\n    },\n  });\n\ninterface DiceCardProps extends WithStyles<typeof styles> {}\n\nfunction DiceCardC(props: DiceCardProps) {\n  const { classes } = props;\n\n  const canvasRef = React.useRef(null);\n  const canvasWidth: number = (canvasRef.current && (canvasRef.current as any).getBoundingClientRect().width) || 0;\n\n  const [diceInitialized, setDiceInitialized] = useState(false);\n  const firestore = useFirestore();\n  const profile = useSelector(firebaseSelectors.userProfile);\n  const roomUid = useSelector(roomsSelectors.selectedRoomUid);\n\n  const diceService = DiceService.getInstance(firestore);\n  const diceContainerEl = useRef(null);\n\n  useEffect(() => {\n    diceService.profile = profile;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [profile]);\n\n  useEffect(() => {\n    diceService.roomUid = roomUid || null;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [roomUid]);\n\n  useEffect(() => {\n    if (!diceInitialized && canvasWidth !== 0) {\n      (window as any).dice_initialize(diceContainerEl.current, {\n        ...diceDefaultConfig,\n        diceThrow$: diceService.diceThrow$,\n        diceThrowResult$: diceService.diceThrowResult$,\n        diceBeforeThrow$: diceService.diceBeforeThrow$,\n      });\n      setDiceInitialized(true);\n    }\n    return () => diceService.hostDestroyed();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [canvasWidth]);\n\n  return (\n    <Paper elevation={3} className={classes.root}>\n      <div id=\"diceCanvasContainer\" ref={diceContainerEl} className={classes.diceCanvas}>\n        <div ref={canvasRef} id=\"canvas\" />\n        <nav className={classes.nav}>\n          <DiceNav />\n        </nav>\n      </div>\n    </Paper>\n  );\n}\n\nexport const DiceCard = withStyles(styles)(DiceCardC);\n","import CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport GavelIcon from '@material-ui/icons/Gavel';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport React from 'react';\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\nimport { GridListTile, GridListTileBar, IconButton, Tooltip } from '@material-ui/core';\n\nimport { IProfile } from '../../../models/rooms.model';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    tile: {\n      borderRadius: theme.spacing(1),\n      marginRight: theme.spacing(2),\n      maxWidth: theme.spacing(30),\n      overflow: 'hidden',\n      padding: '0 !Important',\n      width: '100%',\n    },\n    title: {\n      color: theme.palette.primary.light,\n    },\n    titleDisable: {\n      color: theme.palette.warning.light,\n    },\n    masterGame: {\n      color: theme.palette.info.light,\n    },\n    titleBar: {\n      background: 'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\n    },\n  });\n\ninterface PlayerTileProps extends WithStyles<typeof styles> {\n  player: IProfile;\n  gameMaster?: boolean;\n}\n\nfunction PlayerTileC(props: PlayerTileProps) {\n  const { classes, player, gameMaster } = props;\n\n  return (\n    <GridListTile className={classes.tile}>\n      <img src={player.photoURL} alt={player.displayName} />\n      <GridListTileBar\n        title={player.displayName}\n        classes={{\n          root: classes.titleBar,\n          title: player.connected ? classes.title : classes.titleDisable,\n        }}\n        actionIcon={\n          <Tooltip title={player.connected ? 'Online' : 'Offline'}>\n            <IconButton aria-label={`star ${player.displayName}`}>\n              {player.connected ? (\n                <CheckCircleIcon className={classes.title} />\n              ) : (\n                <HighlightOffIcon className={classes.titleDisable} />\n              )}\n            </IconButton>\n          </Tooltip>\n        }\n      />\n\n      {gameMaster && (\n        <Tooltip title={player.connected ? 'Online' : 'Offline'}>\n          <IconButton aria-label={`star ${player.displayName}`}>\n            <GavelIcon className={classes.masterGame} />\n          </IconButton>\n        </Tooltip>\n      )}\n    </GridListTile>\n  );\n}\n\nexport const PlayerTile = withStyles(styles)(PlayerTileC);\n","import React from 'react';\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\nimport { GridList, Grow, Slide } from '@material-ui/core';\nimport { useSelector } from 'react-redux';\n\nimport { firestoreSelectors } from '../../store/firebase/firestore.selectors';\nimport { PlayerTile } from './components/PlayerTile';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'space-around',\n      overflow: 'hidden',\n      backgroundColor: theme.palette.background.paper,\n    },\n    gridList: {\n      height: theme.spacing(20),\n      width: '100%',\n      flexWrap: 'nowrap',\n      transform: 'translateZ(0)',\n    },\n  });\n\ninterface PlayersProps extends WithStyles<typeof styles> {\n  visible?: boolean;\n}\n\nfunction PlayersC(props: PlayersProps) {\n  const { classes, visible } = props;\n\n  const players = useSelector(firestoreSelectors.selectedRoomPlayers);\n  const gameMaster = useSelector(firestoreSelectors.selectedRoomGameMasterProfile);\n\n  return (\n    <Slide direction=\"up\" in={visible}>\n      <GridList className={classes.gridList} cols={2.5}>\n        {gameMaster && (\n          <Grow in timeout={300}>\n            <PlayerTile player={gameMaster} gameMaster />\n          </Grow>\n        )}\n\n        {players &&\n          players.map((player, id) => (\n            <Grow in key={player.uid} timeout={1000 * id + 1300}>\n              <PlayerTile player={player} />\n            </Grow>\n          ))}\n      </GridList>\n    </Slide>\n  );\n}\n\nexport const Players = withStyles(styles)(PlayersC);\n","import React from 'react';\nimport SpeedDial from '@material-ui/lab/SpeedDial';\nimport SpeedDialAction from '@material-ui/lab/SpeedDialAction';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\n\nconst styles = (theme: Theme) => createStyles({});\ntype extend = WithStyles<typeof styles>;\n\nexport interface ISpeedDialAction {\n  icon: React.ReactElement;\n  name: string;\n  callback?: (callback: () => void) => void;\n}\n\ninterface SpeedDialCProps extends extend {\n  direction?: 'up' | 'down' | 'left' | 'right';\n  actions: ISpeedDialAction[];\n}\n\nfunction SpeedDialC(props: SpeedDialCProps) {\n  const { direction = 'left', actions } = props;\n\n  const [open, setOpen] = React.useState(false);\n  const handleClose = () => setOpen(false);\n  const handleOpen = () => setOpen(true);\n\n  return (\n    <SpeedDial\n      ariaLabel=\"SpeedDial example\"\n      icon={<SpeedDialIcon />}\n      onClose={handleClose}\n      onOpen={handleOpen}\n      open={open}\n      direction={direction}\n    >\n      {actions.map(action => (\n        <SpeedDialAction\n          key={action.name}\n          icon={action.icon}\n          tooltipTitle={action.name}\n          onClick={() => (action.callback ? action.callback(handleClose) : handleClose())}\n        />\n      ))}\n    </SpeedDial>\n  );\n}\n\nexport const SpeedDialWrapper = withStyles(styles)(SpeedDialC);\n","import ForumIcon from '@material-ui/icons/Forum';\nimport GroupIcon from '@material-ui/icons/Group';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport React from 'react';\nimport ShareIcon from '@material-ui/icons/Share';\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Snackbar } from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\n\nimport { mainSelectors } from '../../../../store/main.selectors';\nimport { roomsActions } from '../../../../store/rooms/rooms.actions';\nimport { ISpeedDialAction, SpeedDialWrapper } from '../../../../components/SpeedDial';\nimport { roomsSelectors } from '../../../../store/rooms/rooms.selectors';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    snackbar: {\n      top: theme.spacing(8),\n    },\n  });\ninterface RoomSpeedDialCProps extends WithStyles<typeof styles> {}\n\nfunction RoomSpeedDialC(props: RoomSpeedDialCProps) {\n  const { classes } = props;\n  const dispatch = useDispatch();\n\n  const isGameMasterOfSelectedRoom = useSelector(mainSelectors.isGameMasterOfSelectedRoom);\n  const drawerOpened = useSelector(roomsSelectors.drawerOpened);\n  const chatOpened = useSelector(roomsSelectors.chatOpened);\n  const playersOpened = useSelector(roomsSelectors.playersOpened);\n  const [snackbarConfig, setSnackbarConfig] = React.useState<{\n    type: 'success' | 'error';\n    open: boolean;\n    text: string;\n  }>({\n    type: 'success',\n    open: false,\n    text: '',\n  });\n\n  function copyRoomUrlToClipboard(): void {\n    navigator.permissions.query({ name: 'clipboard-write' as any }).then(result => {\n      if (result.state === 'granted' || result.state === 'prompt') {\n        navigator.clipboard.writeText(window.location.href).then(\n          () => setSnackbarConfig({ type: 'success', open: true, text: 'Room URL copied to clipboard!' }),\n          () => setSnackbarConfig({ type: 'error', open: true, text: 'Upss.. there was an error' })\n        );\n      }\n    });\n  }\n\n  const actionsAdditional: ISpeedDialAction[] = isGameMasterOfSelectedRoom ? [] : [];\n  const actions: ISpeedDialAction[] = [\n    {\n      icon: drawerOpened ? <NavigateBeforeIcon /> : <NavigateNextIcon />,\n      name: drawerOpened ? 'Hide Nav' : 'Show Nav',\n      callback: cb => dispatch(roomsActions.setDrawerOpenValue(!drawerOpened)),\n    },\n    {\n      icon: <ForumIcon />,\n      name: chatOpened ? 'Hide chat' : 'Show Chat',\n      callback: cb => dispatch(roomsActions.setChatOpenValue(!chatOpened)),\n    },\n    {\n      icon: <GroupIcon />,\n      name: playersOpened ? 'Hide players' : 'Show players',\n      callback: cb => dispatch(roomsActions.setPlayersOpenValue(!playersOpened)),\n    },\n    {\n      icon: <ShareIcon />,\n      name: 'Copy Room Url',\n      callback: cb => copyRoomUrlToClipboard(),\n    },\n    ...actionsAdditional,\n  ];\n\n  return (\n    <React.Fragment>\n      <SpeedDialWrapper actions={actions} direction={'up'} />\n      <Snackbar\n        className={classes.snackbar}\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n        open={snackbarConfig.open}\n        autoHideDuration={6000}\n        onClose={() => setSnackbarConfig({ ...snackbarConfig, open: false })}\n      >\n        <Alert onClose={() => setSnackbarConfig({ ...snackbarConfig, open: false })} severity={snackbarConfig.type}>\n          {snackbarConfig.text}\n        </Alert>\n      </Snackbar>\n    </React.Fragment>\n  );\n}\n\nexport const RoomSpeedDialWrapper = withStyles(styles)(RoomSpeedDialC);\n","import clsx from 'clsx';\nimport React, { useEffect } from 'react';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useFirestore } from 'react-redux-firebase';\n\nimport { chatsActions } from '../../../store/chats/chats.actions';\nimport { Chatter } from '../../../modules/Chatter';\nimport { DiceCard } from '../../../modules/DiceCard/DiceCard';\nimport { firebaseSelectors } from '../../../store/firebase/firebase.selectors';\nimport { FirestoreCollection } from '../../../models/firestore.model';\nimport { firestoreSelectors } from '../../../store/firebase/firestore.selectors';\nimport { locationActions } from '../../../store/location/location.actions';\nimport { LocationMatch } from '../../../store/location/location.model';\nimport { locationSelectors } from '../../../store/location/location.selectors';\nimport { Players } from '../../../modules/Players/Players';\nimport { roomsActions } from '../../../store/rooms/rooms.actions';\nimport { RoomSpeedDialWrapper } from './components/RoomSpeedDial';\nimport { roomsSelectors } from '../../../store/rooms/rooms.selectors';\n\n// TODO: update grid heights when no profiles\nconst styles = (theme: Theme) => ({\n  root: {\n    position: 'relative' as 'relative',\n    margin: theme.spacing(-6, -4),\n    height: `calc(100% + ${theme.spacing(12)}px)`,\n  },\n  diceWrapper: {},\n  chatter: {\n    zIndex: 100000,\n    position: 'fixed' as 'fixed',\n    bottom: theme.spacing(4),\n    // bottom: theme.spacing(26), // TODO: update height or grid structure\n    right: theme.spacing(2),\n    transition: 'bottom 225ms cubic-bezier(0, 0, 0.2, 1) 0ms',\n  },\n  chatterLower: {\n    bottom: theme.spacing(4),\n  },\n  speedDial: {\n    position: 'absolute' as 'absolute',\n    bottom: theme.spacing(23),\n    left: theme.spacing(3),\n    zIndex: 10,\n    transition: 'bottom 225ms cubic-bezier(0, 0, 0.2, 1) 0ms',\n  },\n  speedDialLower: {\n    bottom: theme.spacing(3),\n  },\n  cssGrid: {\n    height: 'calc(100% - 60px)',\n    display: 'grid',\n    gridTemplateColumns: '1fr',\n    gridTemplateRows: '1fr 160px',\n    rowGap: `${theme.spacing(2)}px`,\n    columnGap: `${theme.spacing(2)}px`,\n    padding: theme.spacing(2, 2, 0, 2),\n  },\n  cssItem1: {\n    gridColumn: 1,\n    gridRow: 1,\n  },\n  cssItem2: {\n    gridColumn: 1,\n    gridRow: 2,\n  },\n});\n\nconst useStyles = makeStyles(styles);\n\nexport interface RoomListProps {\n  match: LocationMatch;\n}\n\nexport function RoomC(props: RoomListProps) {\n  const { match } = props;\n\n  const chatOpened = useSelector(roomsSelectors.chatOpened);\n  const playersOpened = useSelector(roomsSelectors.playersOpened);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const firestore = useFirestore();\n  const selectedRoomData = useSelector(firestoreSelectors.selectedRoom);\n  const selectedRoomUid = useSelector(roomsSelectors.selectedRoomUid);\n  const storeLocationMatch = useSelector(locationSelectors.match);\n  const userProfile = useSelector(firebaseSelectors.userProfile);\n\n  /**\n   * Effects logic\n   */\n  function onChangeSetLocationMatch(): void {\n    if (JSON.stringify(match) !== JSON.stringify(storeLocationMatch)) {\n      dispatch(locationActions.matchChange(match));\n    }\n    dispatch(roomsActions.setSelectedRoom((storeLocationMatch.params as any)['roomId']));\n  }\n  function onUnmountSetSelectedRoomToNull(): void {\n    dispatch(roomsActions.setSelectedRoom(null));\n  }\n  function onChangeSetSelectedChat(): void {\n    dispatch(chatsActions.setSelectedChat(selectedRoomData?.chatUid || null));\n  }\n  function onEnterTheRoomAddUserToPlayers(): void {\n    if (!selectedRoomData?.players || !userProfile.uid || selectedRoomData.gameMaster.uid === userProfile.uid) {\n      return;\n    }\n    debugger;\n\n    if (selectedRoomData.players.indexOf(userProfile.uid) === -1) {\n      let documentRef = firestore.doc(`${FirestoreCollection.ROOMS}/${selectedRoomUid}`);\n      firestore.runTransaction((t: any) => {\n        return t\n          .get(documentRef)\n          .then((doc: any) => {\n            const players = [...doc.data().players, userProfile.uid];\n            return t.update(documentRef, { players });\n          })\n          .catch((err: any) => {\n            // TODO: add toast message\n            // TRANSACTION_FAILURE action dispatched\n            console.log('Transaction failure:', err);\n          });\n      });\n    }\n  }\n\n  /**\n   * Effects\n   */\n  useEffect(() => onChangeSetLocationMatch());\n\n  useEffect(() => {\n    onEnterTheRoomAddUserToPlayers();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedRoomUid, selectedRoomData?.createdAt, userProfile.uid]);\n\n  useEffect(() => {\n    return () => onUnmountSetSelectedRoomToNull();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    onChangeSetSelectedChat();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedRoomData?.chatUid]);\n\n  return (\n    <section className={classes.root}>\n      <nav className={clsx(classes.speedDial, !playersOpened && classes.speedDialLower)}>\n        <RoomSpeedDialWrapper />\n      </nav>\n\n      <article className={clsx(classes.chatter, !playersOpened && classes.chatterLower)}>\n        <Chatter visbile={chatOpened} />\n      </article>\n\n      <div className={classes.cssGrid}>\n        <div className={classes.cssItem1}>\n          <DiceCard />\n        </div>\n        <div className={classes.cssItem2}>\n          <Players visible={playersOpened} />\n        </div>\n      </div>\n    </section>\n  );\n}\n","import { enhancedRoomList } from './RoomPage.enhancer';\nimport { RoomC } from './RoomPage';\n\nexport default enhancedRoomList(RoomC);\n"],"sourceRoot":""}