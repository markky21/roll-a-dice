{"version":3,"sources":["utils/router.utils.ts","models/rooms.model.ts","models/dice.model.ts","modules/Chatter/index.ts","components/FormComponents.tsx","routes/Room/RoomPage/RoomPage.enhancer.tsx","config/dice.config.ts","store/rooms/rooms.actions.ts","services/store.service.ts","services/dice.service.ts","utils/dice.utils.ts","modules/DiceCard/DiceCard.tsx","modules/Players/components/PlayerTile.tsx","modules/Players/Players.tsx","components/SpeedDial.tsx","routes/Room/RoomPage/components/RoomSpeedDial.tsx","modules/DiceDashboard/components/DiceDashboardForm.tsx","modules/DiceDashboard/components/DiceDashboardResult.tsx","modules/DiceDashboard/DiceDashbard.tsx","routes/Room/RoomPage/RoomPage.tsx","routes/Room/RoomPage/index.ts"],"names":["locationHelper","locationHelperBuilder","history","createBrowserHistory","UserIsAuthenticated","connectedRouterRedirect","redirectPath","RouterPath","HOME_PATH","AuthenticatingComponent","Loader","wrapperDisplayName","authenticatedSelector","firebaseSelectors","authenticatingSelector","redirectAction","newLoc","dispatch","push","type","payload","message","allowRedirectBack","state","firebase","auth","isEmpty","isInitializing","isLoaded","ownProps","getRedirectQueryParam","ROOMS_PATH","Log","createRoomFormModel","roomName","name","label","fullWidth","diceType","options","Dice","D4","value","D6","D8","D10","D12","D20","D100","description","multiline","d4","d6","d8","d10","d12","d20","d100","Chatter","React","lazy","useStyles","makeStyles","theme","formField","marginBottom","spacing","sliderFormField","width","marginLeft","FormFieldHelperText","touched","error","FormFieldText","memo","props","classes","component","input","meta","invalid","custom","variant","placeholder","helperText","className","FormFieldCheckboxGroup","children","htmlFor","native","inputProps","id","control","checked","onChange","inputValue","checkboxesFormControls","map","index","includes","key","event","arr","target","splice","indexOf","row","FormFieldSlider","valuetext","min","max","inputRest","labelPlacement","defaultValue","getAriaValueText","aria-labelledby","valueLabelDisplay","step","marks","e","enhancedRoomList","compose","setDisplayName","withRouter","diceDefaultConfig","idCanvas","idLabel","idSet","idSelectorDiv","idInfoDiv","useTrueRandom","useShadows","whiteDice","noresult","diceThrow$","diceThrowResult$","roomsActions","action","RoomsAction","SELECTED","SET_DRAWER_OPEN_VALUE","SET_CHAT_OPEN_VALUE","SET_PLAYERS_OPEN_VALUE","SET_DICE_ROLLING","StoreService","store","takeUntil$","Subject","_store$","ReplaySubject","_storeUnsubscribeFn","this","subscribe","next","getState","store$","pipe","form","diceSetForm","firestore","data","selectedRoom","filter","room","getSelectedRoomData$","logs","getSelectedRoomDataLogs$","pop","log","distinctUntilChanged","a","b","timestamp","profile","instance","asObservable","DiceService","diceBeforeThrow$","roomUid","storeService","getInstance","createSubscriptions","setDiceRolling","takeUntil","diceThrow","emit","firestoreAddNewThrow","performDiceThrowWhenNewDiceThrowLogAppears","diceRolling","diceThrowResult","documentRef","doc","FirestoreCollection","ROOMS","runTransaction","t","get","then","newLog","authorUid","uid","Date","now","toString","DICE_ROLL","update","err","console","getLastRoomLogOnChange$","withLatestFrom","getUserProfile$","getDiceSetForm","values","JSON","stringify","dices","Object","keys","diceName","dice","length","join","diceSetToString","DiceCard","withStyles","createStyles","root","height","position","diceCanvas","canvasRef","useRef","diceContainerEl","useState","diceInitialized","setDiceInitialized","useFirestore","useSelector","userProfile","roomsSelectors","selectedRoomUid","diceService","canvasWidth","current","getBoundingClientRect","useEffect","window","dice_initialize","diceSet$","handleDiceSetFormChanges$","hostDestroyed","Paper","elevation","ref","PlayerTile","tile","borderRadius","marginRight","maxWidth","overflow","padding","title","color","palette","primary","light","titleDisable","warning","masterGame","zIndex","top","right","titleBar","background","player","gameMaster","GridListTile","src","avatarUrl","photoURL","alt","displayName","GridListTileBar","connected","actionIcon","Tooltip","IconButton","aria-label","clsx","Players","display","flexWrap","justifyContent","backgroundColor","paper","gridList","transform","visible","players","firestoreSelectors","selectedRoomPlayers","selectedRoomGameMasterProfile","Slide","direction","in","GridList","cols","Grow","timeout","SpeedDialWrapper","actions","open","setOpen","handleClose","SpeedDial","ariaLabel","icon","SpeedDialIcon","onClose","onOpen","SpeedDialAction","tooltipTitle","onClick","callback","RoomSpeedDialWrapper","snackbar","useDispatch","drawerOpened","mainSelectors","isGameMasterOfSelectedRoom","chatOpened","playersOpened","text","snackbarConfig","setSnackbarConfig","actionsAdditional","cb","navigator","permissions","query","result","clipboard","writeText","location","href","Fragment","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","Alert","severity","inputSlider","paddingRight","minWidth","DiceDashboardForm","reduxForm","initialValues","onSubmit","preventDefault","DiceDashboardResult","throwResult","List","resultObject","diceSet","forEach","ListItem","Typography","renderResultItem","DiceDashboard","details","flexDirection","content","flex","cover","playIcon","roomData","setThrowResult","Card","CardContent","Collapse","CardMedia","image","process","margin","diceWrapper","chatter","bottom","transition","chatterLower","speedDial","left","speedDialLower","cssGrid","gridTemplateColumns","gridTemplateRows","rowGap","columnGap","cssItem1","gridColumn","gridRow","cssItem2","diceDashboard","match","selectedRoomData","storeLocationMatch","locationSelectors","locationActions","matchChange","params","onEnterTheRoomAddUserToPlayers","createdAt","chatsActions","setSelectedChat","chatUid","visbile"],"mappings":"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","file":"static/js/7.2f50c06b.chunk.js","sourcesContent":["import locationHelperBuilder from 'redux-auth-wrapper/history4/locationHelper';\nimport { connectedRouterRedirect } from 'redux-auth-wrapper/history4/redirect';\nimport { createBrowserHistory } from 'history';\nimport { RouterPath } from '../models/paths';\n\nimport { AppState } from '../store/main';\nimport { firebaseSelectors } from '../store/firebase/firebase.selectors';\nimport { Loader } from '../components/Loader';\n\nconst locationHelper = locationHelperBuilder({});\nconst history = createBrowserHistory();\n\nconst AUTHED_REDIRECT = 'AUTHED_REDIRECT';\nconst UNAUTHED_REDIRECT = 'UNAUTHED_REDIRECT';\n\n/**\n * Higher Order Component that redirects to `/login` instead\n * rendering if user is not authenticated (default of redux-auth-wrapper).\n * @param {Component} componentToWrap - Component to wrap\n * @return {Component} wrappedComponent\n */\nexport const UserIsAuthenticated = connectedRouterRedirect({\n  redirectPath: RouterPath.HOME_PATH,\n  AuthenticatingComponent: Loader,\n  wrapperDisplayName: 'UserIsAuthenticated',\n  // Want to redirect the user when they are done loading and authenticated\n  authenticatedSelector: firebaseSelectors.authenticatedSelector,\n  authenticatingSelector: firebaseSelectors.authenticatingSelector,\n  redirectAction: ((newLoc: any) => (dispatch: any) => {\n    // Use push, replace, and go to navigate around.\n    history.push(newLoc);\n    dispatch({\n      type: UNAUTHED_REDIRECT,\n      payload: { message: 'User is not authenticated.' },\n    });\n  }) as any,\n});\n\n/**\n * Higher Order Component that redirects to listings page or most\n * recent route instead rendering if user is not authenticated. This is useful\n * routes that should not be displayed if a user is logged in, such as the\n * login route.\n * @param {Component} componentToWrap - Component to wrap\n * @return {Component} wrappedComponent\n */\nexport const UserIsNotAuthenticated = connectedRouterRedirect({\n  AuthenticatingComponent: Loader,\n  wrapperDisplayName: 'UserIsNotAuthenticated',\n  allowRedirectBack: false,\n  // Want to redirect the user when they are done loading and authenticated\n  authenticatedSelector: (state: AppState) => {\n    const {\n      firebase: { auth },\n    } = state;\n    return auth.isEmpty;\n  },\n  authenticatingSelector: ({ firebase: { auth, isInitializing } }) => !auth.isLoaded || isInitializing,\n  redirectPath: (state, ownProps) => locationHelper.getRedirectQueryParam(ownProps) || RouterPath.ROOMS_PATH,\n  redirectAction: ((newLoc: any) => (dispatch: any) => {\n    // Use push, replace, and go to navigate around.\n    history.push(newLoc);\n    dispatch({\n      type: AUTHED_REDIRECT,\n      payload: { message: 'User is not authenticated.' },\n    });\n  }) as any,\n});\n\n/*\n/!**\n * Render children based on route config objects\n * @param {Array} routes - Routes settings array\n * @param {Object} match - Routes settings array\n * @param {Object} parentProps - Props to pass to children from parent\n *!/\nexport function renderChildren(routes, match, parentProps) {\n  return routes.map(route => (\n    <Route\n      key={`${match.url}-${route.path}`}\n      path={`${match.url}/${route.path}`}\n      render={props => <route.component {...parentProps} {...props} />}\n    />\n  ));\n}*/\n","import { Dice, IDiceThrowResult } from './dice.model';\n\nexport enum Log {\n  DICE_ROLL = 'DICE_ROLL',\n}\n\nexport interface IProfile {\n  uid: string;\n  avatarUrl?: string;\n  displayName: string;\n  email: string;\n  photoURL: string;\n  connected?: boolean;\n}\n\nexport interface IRoomLog {\n  timestamp: string;\n  type: Log;\n  authorUid: string;\n  payload: Omit<IDiceThrowResult, 'emit'>;\n}\n\nexport interface IRoom extends IRoomCreateForm {\n  createdAt: string;\n  gameMaster: IProfile;\n  players: string[];\n  logs: IRoomLog[];\n  chatUid?: string;\n}\n\nexport interface IRoomCreateForm {\n  roomName: string;\n  diceType: Dice[];\n  description: string;\n}\n\nexport const createRoomFormModel = {\n  roomName: { name: 'roomName', label: 'Name of the Room', fullWidth: true },\n  diceType: {\n    name: 'diceType',\n    label: 'Allowed dice',\n    options: [\n      { label: Dice.D4, value: Dice.D4 },\n      { label: Dice.D6, value: Dice.D6 },\n      { label: Dice.D8, value: Dice.D8 },\n      { label: Dice.D10, value: Dice.D10 },\n      { label: Dice.D12, value: Dice.D12 },\n      { label: Dice.D20, value: Dice.D20 },\n      { label: Dice.D100, value: Dice.D100 },\n    ],\n  },\n  description: { name: 'description', label: 'Room description', multiline: true, fullWidth: true },\n  d4: { name: Dice.D4, label: Dice.D4 },\n  d6: { label: Dice.D6, name: Dice.D6 },\n  d8: { label: Dice.D8, name: Dice.D8 },\n  d10: { label: Dice.D10, name: Dice.D10 },\n  d12: { label: Dice.D12, name: Dice.D12 },\n  d20: { label: Dice.D20, name: Dice.D20 },\n  d100: { label: Dice.D100, name: Dice.D100 },\n};\n\nexport const diceSetFormModel = {\n  diceD4: { name: Dice.D4, label: Dice.D4, defaultValue: 1 },\n  diceD6: { name: Dice.D6, label: Dice.D6, defaultValue: 1 },\n  diceD8: { name: Dice.D8, label: Dice.D8, defaultValue: 1 },\n  diceD10: { name: Dice.D10, label: Dice.D10, defaultValue: 1 },\n  diceD12: { name: Dice.D12, label: Dice.D12, defaultValue: 1 },\n  diceD20: { name: Dice.D20, label: Dice.D20, defaultValue: 1 },\n  diceD100: { name: Dice.D100, label: Dice.D100, defaultValue: 1 },\n};\n\nexport interface IDiceDashboardForm {\n  [key: string]: number;\n}\n","export interface IDiceBeforeThrow {\n  vectors: any;\n  notation: any;\n  throwRequestResult: number[];\n  emitResult: boolean;\n}\n\nexport interface IDiceThrowResult {\n  diceSet: string[];\n  result: number[];\n  emit: boolean;\n}\n\nexport enum Dice {\n  D4 = 'd4',\n  D6 = 'd6',\n  D8 = 'd8',\n  D10 = 'd10',\n  D12 = 'd12',\n  D20 = 'd20',\n  D100 = 'd100',\n}\n\ninterface IDiceVector {\n  set: Dice;\n  pos: {\n    x: number;\n    y: number;\n    z: number;\n  };\n  velocity: {\n    x: number;\n    y: number;\n    z: number;\n  };\n  angle: {\n    x: number;\n    y: number;\n    z: number;\n  };\n  axis: {\n    x: number;\n    y: number;\n    z: number;\n    a: number;\n  };\n}\n\nexport interface IDiceThrow {\n  diceSet: string[];\n  result: number[];\n}\n","import React from 'react';\n\nexport const Chatter = React.lazy(() => import('./Chatter'));\n","import React from 'react';\nimport {\n  Checkbox,\n  FormControl,\n  FormControlLabel,\n  FormGroup,\n  FormHelperText,\n  FormLabel,\n  InputLabel,\n  Select,\n  Slider,\n  TextField,\n} from '@material-ui/core';\nimport { Field } from 'redux-form';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\n\n/*\n * Model\n */\ninterface FormFieldGenericProps<T = any> {\n  name: string;\n  label: string;\n  value?: T;\n  min?: number;\n  max?: number;\n  [key: string]: any;\n}\nexport interface IGroupOption {\n  label: string;\n  value: string | number;\n}\n\ninterface FormFieldWithOptionsProps extends FormFieldGenericProps {\n  options: IGroupOption[];\n}\n\n/*\n * Styles\n */\n\nconst styles = (theme: Theme) => ({\n  formField: { marginBottom: theme.spacing(2) },\n  sliderFormField: {\n    width: '100%',\n    marginLeft: 0,\n  },\n});\n\nconst useStyles = makeStyles(styles);\n\n/*\n * Components\n */\n\nexport const FormFieldHelperText = ({ touched, error }: any) => {\n  if (!(touched && error)) {\n    return;\n  } else {\n    return <FormHelperText>{touched && error}</FormHelperText>;\n  }\n};\n\nexport const FormFieldText = React.memo((props: FormFieldGenericProps) => {\n  const classes = useStyles();\n\n  const formField = ({ label, input, meta: { touched, invalid, error }, ...custom }: any) => (\n    <TextField\n      variant=\"outlined\"\n      label={label}\n      placeholder={label}\n      error={touched && invalid}\n      helperText={touched && error}\n      {...input}\n      {...custom}\n    />\n  );\n\n  return <Field {...props} component={formField} className={classes.formField} />;\n});\n\nexport const FormFieldSelect = React.memo((props: FormFieldGenericProps) => {\n  const classes = useStyles();\n\n  const field = ({ input, label, meta: { touched, error }, children, ...custom }: FormFieldGenericProps) => {\n    return (\n      <FormControl error={touched && error}>\n        <InputLabel htmlFor=\"age-native-simple\">Age</InputLabel>\n        <Select\n          variant=\"outlined\"\n          native\n          {...input}\n          {...custom}\n          inputProps={{\n            name: 'age',\n            id: 'age-native-simple',\n          }}\n        >\n          {children}\n        </Select>\n        {FormFieldHelperText({ touched, error })}\n      </FormControl>\n    );\n  };\n\n  return <Field {...props} type=\"checkbox\" component={field} className={classes.formField} />;\n});\n\nexport const FormFieldCheckbox = React.memo((props: FormFieldGenericProps) => {\n  const classes = useStyles();\n\n  const field = ({ input, label }: FormFieldGenericProps) => {\n    return <FormControlLabel control={<Checkbox checked={!!input.value} onChange={input.onChange} />} label={label} />;\n  };\n\n  return <Field {...props} type=\"checkbox\" component={field} className={classes.formField} />;\n});\n\nexport const FormFieldCheckboxGroup = React.memo((props: FormFieldWithOptionsProps) => {\n  const classes = useStyles();\n\n  const field = ({ input, meta, options, label }: FormFieldWithOptionsProps) => {\n    const { name, onChange } = input;\n    const { touched, error } = meta;\n    const inputValue = input.value;\n\n    const checkboxesFormControls = options.map(({ label, value }: any, index: number) => {\n      const handleChange = (event: any) => {\n        const arr = [...inputValue];\n        if (event.target.checked) {\n          arr.push(value);\n        } else {\n          arr.splice(arr.indexOf(value), 1);\n        }\n        return onChange(arr);\n      };\n      const checked = inputValue.includes(value);\n      return (\n        <FormControlLabel\n          key={index}\n          control={<Checkbox checked={checked} onChange={handleChange} name={`${name}[${index}]`} value={value} />}\n          label={label}\n        />\n      );\n    });\n\n    return (\n      <FormControl error={touched && !!error} component=\"fieldset\">\n        <FormLabel component=\"legend\">{label}</FormLabel>\n        <FormGroup row>{checkboxesFormControls}</FormGroup>\n        {FormFieldHelperText({ touched, error })}\n      </FormControl>\n    );\n  };\n\n  return <Field {...props} type=\"checkbox\" component={field} className={classes.formField} />;\n});\n\nexport const FormFieldSlider = React.memo((props: FormFieldGenericProps) => {\n  const classes = useStyles();\n\n  function valuetext(value: number) {\n    return `${value}`;\n  }\n\n  const formField = ({\n    min = 0,\n    max = 16,\n    label,\n    input: { value, onChange, ...inputRest },\n    meta: { touched, invalid, error },\n    ...custom\n  }: any) => {\n    return (\n      <FormControlLabel\n        className={classes.sliderFormField}\n        label={label}\n        labelPlacement=\"start\"\n        control={\n          <Slider\n            defaultValue={0}\n            getAriaValueText={valuetext}\n            aria-labelledby=\"number-of-dices\"\n            valueLabelDisplay=\"auto\"\n            step={1}\n            marks\n            min={min}\n            max={max}\n            value={typeof value === 'number' ? value : 0}\n            onChange={(e: Event, value: number) => onChange(value)}\n            {...inputRest}\n            {...custom}\n          />\n        }\n      />\n    );\n  };\n\n  return <Field {...props} component={formField} className={classes.formField} />;\n});\n","import { compose } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport { setDisplayName } from 'recompose';\nimport { UserIsAuthenticated } from '../../../utils/router.utils';\n\nexport const enhancedRoomList = compose(\n  // Set component display name (more clear in dev/error tools)\n  setDisplayName('EnhancedRoomList'),\n  // Add props.match\n  withRouter,\n  // Redirect to /login if user is not logged in\n  UserIsAuthenticated\n);\n","export const diceDefaultConfig = {\n  idCanvas: 'canvas',\n  idLabel: 'label',\n  idSet: 'set',\n  idSelectorDiv: 'selector_div',\n  idInfoDiv: 'info_div',\n  useTrueRandom: false,\n  useShadows: true,\n  whiteDice: false,\n  noresult: false,\n  diceThrow$: null,\n  diceThrowResult$: null,\n};\n","import { action } from 'typesafe-actions';\nimport { RoomsAction } from './rooms.model';\n\nexport const roomsActions = {\n  setSelectedRoom: (payload: string | null) => action(RoomsAction.SELECTED, payload),\n  setDrawerOpenValue: (payload: boolean) => action(RoomsAction.SET_DRAWER_OPEN_VALUE, payload),\n  setChatOpenValue: (payload: boolean) => action(RoomsAction.SET_CHAT_OPEN_VALUE, payload),\n  setPlayersOpenValue: (payload: boolean) => action(RoomsAction.SET_PLAYERS_OPEN_VALUE, payload),\n  diceRolling: (payload: boolean) => action(RoomsAction.SET_DICE_ROLLING, payload),\n};\n","import { Observable, ReplaySubject, Subject } from 'rxjs';\nimport {AnyAction, Store} from 'redux';\n\nimport { store } from '../config/store.config';\nimport { AppState, IDiceSetForm } from '../store/main';\nimport { IProfile, IRoom, IRoomLog } from '../models/rooms.model';\nimport { distinctUntilChanged, filter, map } from 'rxjs/operators';\n\nexport class StoreService {\n  private static instance: StoreService | null;\n\n  public store: Store = store;\n\n  private readonly takeUntil$ = new Subject();\n  private readonly _store$ = new ReplaySubject<AppState>(1);\n  private readonly _storeUnsubscribeFn: Function;\n\n  private constructor() {\n    this._storeUnsubscribeFn = this.store.subscribe(() => {\n      this._store$.next(this.store.getState());\n    });\n  }\n\n  public get store$(): Observable<AppState> {\n    return this._store$.asObservable();\n  }\n\n  public getDiceSetForm(): Observable<IDiceSetForm> {\n    return this.store$.pipe(map(state => state.form.diceSetForm));\n  }\n\n  public getSelectedRoomData$(): Observable<IRoom> {\n    return this.store$.pipe(\n      map(state => state.firestore.data.selectedRoom),\n      filter(room => !!room)\n    ) as Observable<IRoom>;\n  }\n\n  public getSelectedRoomDataLogs$(): Observable<Array<IRoomLog>> {\n    return this.getSelectedRoomData$().pipe(map(room => room.logs));\n  }\n\n  public getLastRoomLogOnChange$(): Observable<IRoomLog> {\n    return this.getSelectedRoomDataLogs$().pipe(\n      map(logs => [...logs].pop()),\n      // @ts-ignore\n      filter(log => !!log),\n      distinctUntilChanged((a, b) => a.timestamp === b.timestamp)\n    ) as Observable<IRoomLog>;\n  }\n\n  public getUserProfile$(): Observable<IProfile> {\n    return this.store$.pipe(map(state => state.firebase.profile));\n  }\n\n  public dispatch(action: AnyAction): AnyAction {\n    return this.store.dispatch(action);\n  }\n\n  public hostDestroyed(): void {\n    this.takeUntil$.next();\n    this._storeUnsubscribeFn();\n    StoreService.instance = null;\n  }\n\n  static getInstance(): StoreService {\n    if (!StoreService.instance) {\n      StoreService.instance = new StoreService();\n    }\n\n    return StoreService.instance;\n  }\n}\n","import { Observable, ReplaySubject, Subject } from 'rxjs';\nimport { firestore } from 'firebase/app';\nimport { distinctUntilChanged, filter, map, takeUntil, withLatestFrom } from 'rxjs/operators';\n\nimport { IDiceBeforeThrow, IDiceThrow, IDiceThrowResult } from '../models/dice.model';\nimport { roomsActions } from '../store/rooms/rooms.actions';\nimport { FirestoreCollection } from '../models/firestore.model';\nimport { IProfile, IRoom, IRoomLog, Log } from '../models/rooms.model';\nimport { StoreService } from './store.service';\nimport { diceSetToString } from '../utils/dice.utils';\n\nexport class DiceService {\n  private static instance: DiceService | null;\n\n  public readonly diceThrow$ = new Subject<IDiceThrow>();\n  public readonly diceBeforeThrow$ = new Subject<IDiceBeforeThrow>();\n  public readonly diceThrowResult$ = new ReplaySubject<IDiceThrowResult>(1);\n  public profile: IProfile | null = null;\n  public roomUid: string | null = null;\n\n  private readonly takeUntil$ = new Subject();\n  private readonly storeService: StoreService = StoreService.getInstance();\n\n  private constructor(private firestore: firestore.Firestore) {\n    this.createSubscriptions();\n  }\n\n  public hostDestroyed(): void {\n    this.takeUntil$.next();\n    DiceService.instance = null;\n    this.setDiceRolling(false);\n  }\n\n  public get handleDiceSetFormChanges$(): Observable<string> {\n    return this.storeService.getDiceSetForm().pipe(\n      map(form => form?.values),\n      distinctUntilChanged((a, b) => JSON.stringify(a) === JSON.stringify(b)),\n      map(dices => diceSetToString(dices)),\n      takeUntil(this.takeUntil$)\n    );\n  }\n\n  static getInstance(firestore: firestore.Firestore): DiceService {\n    if (!DiceService.instance) {\n      DiceService.instance = new DiceService(firestore);\n    }\n\n    return DiceService.instance;\n  }\n\n  private createSubscriptions(): void {\n    // this.diceThrow$.pipe(takeUntil(this.takeUntil$)).subscribe(diceThrow => {\n    //   console.log('diceThrow$: ', diceThrow);\n    // });\n\n    this.diceBeforeThrow$.pipe(takeUntil(this.takeUntil$)).subscribe(diceThrow => {\n      this.setDiceRolling(true);\n      // console.log('diceBeforeThrow$: ', diceThrow);\n    });\n\n    this.diceThrowResult$.pipe(takeUntil(this.takeUntil$)).subscribe(diceThrow => {\n      this.setDiceRolling(false);\n      diceThrow.emit && this.firestoreAddNewThrow(diceThrow);\n      // console.log('diceThrowResult$: ', diceThrow);\n    });\n\n    this.performDiceThrowWhenNewDiceThrowLogAppears();\n  }\n\n  /**\n   * Set UI flag to tell if dice are rolling\n   */\n  private setDiceRolling(diceRolling: boolean): void {\n    this.storeService.dispatch(roomsActions.diceRolling(diceRolling));\n  }\n\n  private firestoreAddNewThrow(diceThrowResult: IDiceThrowResult): void {\n    if (!this.roomUid) {\n      return;\n    }\n\n    const { emit, ...payload } = diceThrowResult;\n    const documentRef = this.firestore.doc(`${FirestoreCollection.ROOMS}/${this.roomUid}`);\n\n    this.firestore.runTransaction((t: firestore.Transaction) => {\n      return t\n        .get(documentRef)\n        .then(doc => {\n          const newLog: IRoomLog = {\n            authorUid: this.profile?.uid as string,\n            payload,\n            timestamp: Date.now().toString(),\n            type: Log.DICE_ROLL,\n          };\n          const logs: IRoomLog[] = [...(doc.data() as IRoom).logs, newLog];\n          return t.update(documentRef, { logs });\n        })\n        .catch((err: any) => {\n          // TODO: add toast message\n          // TRANSACTION_FAILURE action dispatched\n          console.log('Transaction failure:', err);\n        });\n    });\n  }\n\n  private performDiceThrowWhenNewDiceThrowLogAppears() {\n    this.storeService\n      .getLastRoomLogOnChange$()\n      .pipe(\n        filter((log: IRoomLog) => log.type === Log.DICE_ROLL),\n        withLatestFrom(this.storeService.getUserProfile$()),\n        filter(([log, profile]) => !!profile.uid && log.authorUid !== profile.uid),\n        takeUntil(this.takeUntil$)\n      )\n      .subscribe(([log]: [IRoomLog, IProfile]) => {\n        this.diceThrow$.next({ ...log.payload });\n      });\n  }\n}\n","export function diceSetToString(dices: { [key: string]: Number }) {\n  return Object.keys(dices)\n    .map(diceName => (!!dices[diceName] ? dices[diceName] + diceName : ''))\n    .filter(dice => !!dice.length)\n    .join('+');\n}\n","import React, { useEffect, useRef, useState } from 'react';\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\nimport { Paper } from '@material-ui/core';\nimport { useFirestore } from 'react-redux-firebase';\nimport { useSelector } from 'react-redux';\n\nimport { diceDefaultConfig } from '../../config/dice.config';\nimport { DiceService } from '../../services/dice.service';\nimport { firebaseSelectors } from '../../store/firebase/firebase.selectors';\nimport { roomsSelectors } from '../../store/rooms/rooms.selectors';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n      height: `calc(100% - ${theme.spacing(2)}px)`,\n      position: 'relative' as 'relative',\n    },\n    diceCanvas: {\n      width: '100%',\n      height: '100%',\n    },\n  });\n\ninterface DiceCardProps extends WithStyles<typeof styles> {}\n\nfunction DiceCardC(props: DiceCardProps) {\n  const { classes } = props;\n\n  const canvasRef = React.useRef(null);\n  const diceContainerEl = useRef(null);\n\n  const [diceInitialized, setDiceInitialized] = useState(false);\n  const firestore = useFirestore();\n  const profile = useSelector(firebaseSelectors.userProfile);\n  const roomUid = useSelector(roomsSelectors.selectedRoomUid);\n\n  const diceService = DiceService.getInstance(firestore);\n  const canvasWidth: number = (canvasRef.current && (canvasRef.current as any).getBoundingClientRect().width) || 0;\n\n  useEffect(() => {\n    diceService.profile = profile;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [profile]);\n\n  useEffect(() => {\n    diceService.roomUid = roomUid || null;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [roomUid]);\n\n  useEffect(() => {\n    if (!diceInitialized && canvasWidth !== 0) {\n      (window as any).dice_initialize(diceContainerEl.current, {\n        ...diceDefaultConfig,\n        diceThrow$: diceService.diceThrow$,\n        diceThrowResult$: diceService.diceThrowResult$,\n        diceBeforeThrow$: diceService.diceBeforeThrow$,\n        diceSet$: diceService.handleDiceSetFormChanges$,\n      });\n      setDiceInitialized(true);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [canvasWidth]);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(() => () => diceService.hostDestroyed(), []);\n\n  return (\n    <Paper elevation={3} className={classes.root}>\n      <div id=\"diceCanvasContainer\" ref={diceContainerEl} className={classes.diceCanvas}>\n        <div ref={canvasRef} id=\"canvas\" />\n      </div>\n    </Paper>\n  );\n}\n\nexport const DiceCard = withStyles(styles)(DiceCardC);\n","import clsx from 'clsx';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport GavelIcon from '@material-ui/icons/Gavel';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport React from 'react';\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\nimport { GridListTile, GridListTileBar, IconButton, Tooltip } from '@material-ui/core';\n\nimport { IProfile } from '../../../models/rooms.model';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    tile: {\n      borderRadius: theme.spacing(1),\n      marginRight: theme.spacing(2),\n      maxWidth: theme.spacing(30),\n      overflow: 'hidden',\n      padding: '0 !Important',\n      width: '100%',\n    },\n    title: {\n      color: theme.palette.primary.light,\n    },\n    titleDisable: {\n      color: theme.palette.warning.light,\n    },\n    masterGame: {\n      position: 'absolute' as 'absolute',\n      zIndex: 10,\n      top: 0,\n      right: 0,\n    },\n    titleBar: {\n      background: 'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\n    },\n  });\n\ninterface PlayerTileProps extends WithStyles<typeof styles> {\n  player: IProfile;\n  gameMaster?: boolean;\n}\n\nfunction PlayerTileC(props: PlayerTileProps) {\n  const { classes, player, gameMaster } = props;\n\n  return (\n    <GridListTile className={classes.tile}>\n      <img src={player.avatarUrl || player.photoURL} alt={player.displayName} />\n      <GridListTileBar\n        title={player.displayName}\n        classes={{\n          root: classes.titleBar,\n          title: player.connected ? classes.title : classes.titleDisable,\n        }}\n        actionIcon={\n          <Tooltip title={player.connected ? 'Online' : 'Offline'}>\n            <IconButton aria-label={`star ${player.displayName}`}>\n              {player.connected ? (\n                <CheckCircleIcon className={classes.title} />\n              ) : (\n                <HighlightOffIcon className={classes.titleDisable} />\n              )}\n            </IconButton>\n          </Tooltip>\n        }\n      />\n\n      {gameMaster && (\n        <Tooltip\n          className={clsx(classes.masterGame, player.connected ? classes.title : classes.titleDisable)}\n          title={'Game Master'}\n        >\n          <IconButton aria-label={`star ${player.displayName}`}>\n            <GavelIcon />\n          </IconButton>\n        </Tooltip>\n      )}\n    </GridListTile>\n  );\n}\n\nexport const PlayerTile = React.memo(withStyles(styles)(PlayerTileC));\n","import React from 'react';\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\nimport { GridList, Grow, Slide } from '@material-ui/core';\nimport { useSelector } from 'react-redux';\n\nimport { firestoreSelectors } from '../../store/firebase/firestore.selectors';\nimport { PlayerTile } from './components/PlayerTile';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'space-around',\n      overflow: 'hidden',\n      backgroundColor: theme.palette.background.paper,\n    },\n    gridList: {\n      height: theme.spacing(20),\n      width: '100%',\n      flexWrap: 'nowrap',\n      transform: 'translateZ(0)',\n    },\n  });\n\ninterface PlayersProps extends WithStyles<typeof styles> {\n  visible?: boolean;\n}\n\nfunction PlayersC(props: PlayersProps) {\n  const { classes, visible } = props;\n\n  const players = useSelector(firestoreSelectors.selectedRoomPlayers);\n  const gameMaster = useSelector(firestoreSelectors.selectedRoomGameMasterProfile);\n\n  return (\n    <Slide direction=\"up\" in={visible}>\n      <GridList className={classes.gridList} cols={2.5}>\n        {gameMaster && (\n          <Grow in timeout={300}>\n            <PlayerTile player={gameMaster} gameMaster />\n          </Grow>\n        )}\n\n        {players &&\n          players.map((player, id) => (\n            <Grow in key={player.uid} timeout={1000 * id + 1300}>\n              <PlayerTile player={player} />\n            </Grow>\n          ))}\n      </GridList>\n    </Slide>\n  );\n}\n\nexport const Players = withStyles(styles)(PlayersC);\n","import React from 'react';\nimport SpeedDial from '@material-ui/lab/SpeedDial';\nimport SpeedDialAction from '@material-ui/lab/SpeedDialAction';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\n\nconst styles = (theme: Theme) => createStyles({});\ntype extend = WithStyles<typeof styles>;\n\nexport interface ISpeedDialAction {\n  icon: React.ReactElement;\n  name: string;\n  callback?: (callback: () => void) => void;\n}\n\ninterface SpeedDialCProps extends extend {\n  direction?: 'up' | 'down' | 'left' | 'right';\n  actions: ISpeedDialAction[];\n}\n\nfunction SpeedDialC(props: SpeedDialCProps) {\n  const { direction = 'left', actions } = props;\n\n  const [open, setOpen] = React.useState(false);\n  const handleClose = () => setOpen(false);\n  const handleOpen = () => setOpen(true);\n\n  return (\n    <SpeedDial\n      ariaLabel=\"SpeedDial example\"\n      icon={<SpeedDialIcon />}\n      onClose={handleClose}\n      onOpen={handleOpen}\n      open={open}\n      direction={direction}\n    >\n      {actions.map(action => (\n        <SpeedDialAction\n          key={action.name}\n          icon={action.icon}\n          tooltipTitle={action.name}\n          onClick={() => (action.callback ? action.callback(handleClose) : handleClose())}\n        />\n      ))}\n    </SpeedDial>\n  );\n}\n\nexport const SpeedDialWrapper =  React.memo(withStyles(styles)(SpeedDialC));\n","import ForumIcon from '@material-ui/icons/Forum';\nimport GroupIcon from '@material-ui/icons/Group';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport React from 'react';\nimport ShareIcon from '@material-ui/icons/Share';\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Snackbar } from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\n\nimport { mainSelectors } from '../../../../store/main.selectors';\nimport { roomsActions } from '../../../../store/rooms/rooms.actions';\nimport { ISpeedDialAction, SpeedDialWrapper } from '../../../../components/SpeedDial';\nimport { roomsSelectors } from '../../../../store/rooms/rooms.selectors';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    snackbar: {\n      top: theme.spacing(8),\n    },\n  });\ninterface RoomSpeedDialCProps extends WithStyles<typeof styles> {}\n\nfunction RoomSpeedDialC(props: RoomSpeedDialCProps) {\n  const { classes } = props;\n  const dispatch = useDispatch();\n\n  const isGameMasterOfSelectedRoom = useSelector(mainSelectors.isGameMasterOfSelectedRoom);\n  const drawerOpened = useSelector(roomsSelectors.drawerOpened);\n  const chatOpened = useSelector(roomsSelectors.chatOpened);\n  const playersOpened = useSelector(roomsSelectors.playersOpened);\n  const [snackbarConfig, setSnackbarConfig] = React.useState<{\n    type: 'success' | 'error';\n    open: boolean;\n    text: string;\n  }>({\n    type: 'success',\n    open: false,\n    text: '',\n  });\n\n  function copyRoomUrlToClipboard(): void {\n    navigator.permissions.query({ name: 'clipboard-write' as any }).then(result => {\n      if (result.state === 'granted' || result.state === 'prompt') {\n        navigator.clipboard.writeText(window.location.href).then(\n          () => setSnackbarConfig({ type: 'success', open: true, text: 'Room URL copied to clipboard!' }),\n          () => setSnackbarConfig({ type: 'error', open: true, text: 'Upss.. there was an error' })\n        );\n      }\n    });\n  }\n\n  const actionsAdditional: ISpeedDialAction[] = isGameMasterOfSelectedRoom ? [] : [];\n  const actions: ISpeedDialAction[] = [\n    {\n      icon: drawerOpened ? <NavigateBeforeIcon /> : <NavigateNextIcon />,\n      name: drawerOpened ? 'Hide Nav' : 'Show Nav',\n      callback: cb => dispatch(roomsActions.setDrawerOpenValue(!drawerOpened)),\n    },\n    {\n      icon: <ForumIcon />,\n      name: chatOpened ? 'Hide chat' : 'Show Chat',\n      callback: cb => dispatch(roomsActions.setChatOpenValue(!chatOpened)),\n    },\n    {\n      icon: <GroupIcon />,\n      name: playersOpened ? 'Hide players' : 'Show players',\n      callback: cb => dispatch(roomsActions.setPlayersOpenValue(!playersOpened)),\n    },\n    {\n      icon: <ShareIcon />,\n      name: 'Copy Room Url',\n      callback: cb => copyRoomUrlToClipboard(),\n    },\n    ...actionsAdditional,\n  ];\n\n  return (\n    <React.Fragment>\n      <SpeedDialWrapper actions={actions} direction={'up'} />\n      <Snackbar\n        className={classes.snackbar}\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n        open={snackbarConfig.open}\n        autoHideDuration={6000}\n        onClose={() => setSnackbarConfig({ ...snackbarConfig, open: false })}\n      >\n        <Alert onClose={() => setSnackbarConfig({ ...snackbarConfig, open: false })} severity={snackbarConfig.type}>\n          {snackbarConfig.text}\n        </Alert>\n      </Snackbar>\n    </React.Fragment>\n  );\n}\n\nexport const RoomSpeedDialWrapper = withStyles(styles)(RoomSpeedDialC);\n","import React from 'react';\nimport { InjectedFormProps, reduxForm } from 'redux-form';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\n\nimport { createRoomFormModel } from '../../../models/rooms.model';\nimport { Dice } from '../../../models/dice.model';\nimport { FormFieldSlider } from '../../../components/FormComponents';\n\nconst styles = (theme: Theme) => ({\n  inputSlider: {\n    width: '100%',\n    marginLeft: theme.spacing(0),\n    paddingRight: theme.spacing(2),\n    minWidth: theme.spacing(40),\n  },\n});\n\ninterface DiceDashboardFormProps extends InjectedFormProps {\n  diceType: Dice[];\n}\n\nconst useStyles = makeStyles(styles);\n\nfunction DiceDashboardFormC(props: DiceDashboardFormProps) {\n  const { diceType } = props;\n  const classes = useStyles();\n  return (\n    <form onSubmit={(e: any) => e.preventDefault()}>\n      <h2>Set your dices!</h2>\n\n      <div className={classes.inputSlider}>\n        {diceType?.map(dice => (\n          <FormFieldSlider key={dice} {...(createRoomFormModel[dice] as any)} />\n        ))}\n      </div>\n    </form>\n  );\n}\nexport const DiceDashboardForm = React.memo(\n  reduxForm({\n    form: 'diceSetForm',\n    initialValues: {\n      [Dice.D4]: 0,\n      [Dice.D6]: 0,\n      [Dice.D8]: 0,\n      [Dice.D10]: 0,\n      [Dice.D12]: 0,\n      [Dice.D20]: 0,\n      [Dice.D100]: 0,\n    },\n  })(DiceDashboardFormC as any) as any\n);\n","import React from 'react';\nimport { List, ListItem, Typography } from '@material-ui/core';\n\nimport { IDiceThrowResult } from '../../../models/dice.model';\n\ninterface DiceDashboardResultProps {\n  throwResult: IDiceThrowResult | null;\n}\n\nfunction DiceDashboardResultC(props: DiceDashboardResultProps) {\n  const { throwResult } = props;\n\n  const renderResultItem = () => {\n    if (!throwResult) {\n      return '';\n    }\n\n    const resultObject: any = {};\n    throwResult?.diceSet.forEach((diceName, id) => {\n      resultObject[diceName] = [...(resultObject[diceName] || []), throwResult?.result[id]];\n    });\n\n    return Object.keys(resultObject).map(diceName => (\n      <ListItem key={diceName}>\n        <Typography variant=\"h2\" component=\"div\">\n          {diceName}: {resultObject[diceName].join(', ')}\n        </Typography>\n      </ListItem>\n    ));\n  };\n\n  return (\n    <article>\n      <h2>Throw result:</h2>\n      <List>{renderResultItem()}</List>\n    </article>\n  );\n}\nexport const DiceDashboardResult = DiceDashboardResultC;\n","import React, { useEffect, useState } from 'react';\nimport { Card, CardContent, CardMedia, Collapse, Grow } from '@material-ui/core';\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\nimport { useSelector } from 'react-redux';\n\nimport { DiceDashboardForm } from './components/DiceDashboardForm';\nimport { firestoreSelectors } from '../../store/firebase/firestore.selectors';\nimport { DiceDashboardResult } from './components/DiceDashboardResult';\nimport { DiceService } from '../../services/dice.service';\nimport { useFirestore } from 'react-redux-firebase';\nimport { IDiceThrowResult } from '../../models/dice.model';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      backgroundColor: '#f4f4f280',\n    },\n    details: {\n      display: 'flex',\n      flexDirection: 'column',\n    },\n    content: {\n      flex: '1 0 auto',\n    },\n    cover: {\n      width: theme.spacing(18),\n    },\n    playIcon: {\n      height: 38,\n      width: 38,\n    },\n  });\n\nexport interface DiceDashboardProps extends WithStyles<typeof styles> {\n  visible?: boolean;\n}\n\nfunction DiceDashboardC(props: DiceDashboardProps) {\n  const { classes, visible = true } = props;\n\n  const firestore = useFirestore();\n  const roomData = useSelector(firestoreSelectors.selectedRoom);\n\n  const diceService = DiceService.getInstance(firestore);\n  const [throwResult, setThrowResult] = useState<IDiceThrowResult | null>(null);\n\n  useEffect(() => {\n    diceService.diceThrowResult$.subscribe(result => setThrowResult(result));\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Grow in={!!roomData && visible}>\n      <Card className={classes.root} onClick={() => setThrowResult(null)}>\n        <div className={classes.details}>\n          <CardContent className={classes.content}>\n            <Collapse in={!throwResult}>\n              <DiceDashboardForm diceType={roomData?.diceType} />\n            </Collapse>\n            <Collapse in={!!throwResult}>\n              <DiceDashboardResult throwResult={throwResult}/>\n            </Collapse>\n          </CardContent>\n        </div>\n        <CardMedia\n          className={classes.cover}\n          image={`${process.env.PUBLIC_URL}/assets/images/avatar-1.jpg`}\n          title=\"Bot avatar\"\n        />\n      </Card>\n    </Grow>\n  );\n}\n\nexport const DiceDashboard = withStyles(styles)(DiceDashboardC);\n","import clsx from 'clsx';\nimport React, { useEffect } from 'react';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useFirestore } from 'react-redux-firebase';\n\nimport { chatsActions } from '../../../store/chats/chats.actions';\nimport { Chatter } from '../../../modules/Chatter';\nimport { DiceCard } from '../../../modules/DiceCard/DiceCard';\nimport { firebaseSelectors } from '../../../store/firebase/firebase.selectors';\nimport { FirestoreCollection } from '../../../models/firestore.model';\nimport { firestoreSelectors } from '../../../store/firebase/firestore.selectors';\nimport { locationActions } from '../../../store/location/location.actions';\nimport { LocationMatch } from '../../../store/location/location.model';\nimport { locationSelectors } from '../../../store/location/location.selectors';\nimport { Players } from '../../../modules/Players/Players';\nimport { roomsActions } from '../../../store/rooms/rooms.actions';\nimport { RoomSpeedDialWrapper } from './components/RoomSpeedDial';\nimport { roomsSelectors } from '../../../store/rooms/rooms.selectors';\nimport { DiceDashboard } from '../../../modules/DiceDashboard/DiceDashbard';\n\n// TODO: update grid heights when no profiles\nconst styles = (theme: Theme) => ({\n  root: {\n    position: 'relative' as 'relative',\n    margin: theme.spacing(-6, -4),\n    height: `calc(100% + ${theme.spacing(12)}px)`,\n  },\n  diceWrapper: {},\n  chatter: {\n    zIndex: 100000,\n    position: 'fixed' as 'fixed',\n    bottom: theme.spacing(4),\n    // bottom: theme.spacing(26), // TODO: update height or grid structure\n    right: theme.spacing(2),\n    transition: 'bottom 225ms cubic-bezier(0, 0, 0.2, 1) 0ms',\n  },\n  chatterLower: {\n    bottom: theme.spacing(4),\n  },\n  speedDial: {\n    position: 'absolute' as 'absolute',\n    bottom: theme.spacing(25),\n    left: theme.spacing(3),\n    zIndex: 10,\n    transition: 'bottom 225ms cubic-bezier(0, 0, 0.2, 1) 0ms',\n  },\n  speedDialLower: {\n    bottom: theme.spacing(3),\n  },\n  cssGrid: {\n    height: '100%',\n    display: 'grid',\n    gridTemplateColumns: '1fr',\n    gridTemplateRows: '1fr 160px',\n    rowGap: `${theme.spacing(2)}px`,\n    columnGap: `${theme.spacing(2)}px`,\n    padding: theme.spacing(2, 2, 0, 2),\n  },\n  cssItem1: {\n    gridColumn: 1,\n    gridRow: 1,\n  },\n  cssItem2: {\n    gridColumn: 1,\n    gridRow: 2,\n  },\n  diceDashboard: {\n    position: 'absolute' as 'absolute',\n    top: theme.spacing(3),\n    left: theme.spacing(3),\n  },\n});\n\nconst useStyles = makeStyles(styles);\n\nexport interface RoomListProps {\n  match: LocationMatch;\n}\n\nexport function RoomC(props: RoomListProps) {\n  const { match } = props;\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const firestore = useFirestore();\n\n  const playersOpened = useSelector(roomsSelectors.playersOpened);\n  const chatOpened = useSelector(roomsSelectors.chatOpened);\n  const selectedRoomData = useSelector(firestoreSelectors.selectedRoom);\n  const selectedRoomUid = useSelector(roomsSelectors.selectedRoomUid);\n  const storeLocationMatch = useSelector(locationSelectors.match);\n  const userProfile = useSelector(firebaseSelectors.userProfile);\n  const diceRolling = useSelector(roomsSelectors.diceRolling);\n\n  /**\n   * Effects logic\n   */\n  function onChangeSetLocationMatch(): void {\n    if (JSON.stringify(match) !== JSON.stringify(storeLocationMatch)) {\n      dispatch(locationActions.matchChange(match));\n    }\n    dispatch(roomsActions.setSelectedRoom((storeLocationMatch.params as any)['roomId']));\n  }\n  function onUnmountSetSelectedRoomToNull(): void {\n    dispatch(roomsActions.setSelectedRoom(null));\n  }\n  function onChangeSetSelectedChat(): void {\n    dispatch(chatsActions.setSelectedChat(selectedRoomData?.chatUid || null));\n  }\n  function onEnterTheRoomAddUserToPlayers(): void {\n    if (!selectedRoomData?.players || !userProfile.uid || selectedRoomData.gameMaster.uid === userProfile.uid) {\n      return;\n    }\n\n    if (selectedRoomData.players.indexOf(userProfile.uid) === -1) {\n      let documentRef = firestore.doc(`${FirestoreCollection.ROOMS}/${selectedRoomUid}`);\n      firestore.runTransaction((t: any) => {\n        return t\n          .get(documentRef)\n          .then((doc: any) => {\n            const players = [...doc.data().players, userProfile.uid];\n            return t.update(documentRef, { players });\n          })\n          .catch((err: any) => {\n            // TODO: add toast message\n            // TRANSACTION_FAILURE action dispatched\n            console.log('Transaction failure:', err);\n          });\n      });\n    }\n  }\n\n  /**\n   * Effects\n   */\n  useEffect(() => onChangeSetLocationMatch());\n\n  useEffect(() => {\n    onEnterTheRoomAddUserToPlayers();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedRoomUid, selectedRoomData?.createdAt, userProfile.uid]);\n\n  useEffect(() => {\n    return () => onUnmountSetSelectedRoomToNull();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    onChangeSetSelectedChat();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedRoomData?.chatUid]);\n\n  return (\n    <section className={classes.root}>\n      <div className={clsx(classes.chatter, !playersOpened && classes.chatterLower)}>\n        <Chatter visbile={chatOpened && !diceRolling} />\n      </div>\n\n      <div className={classes.cssGrid}>\n        <div className={classes.cssItem1}>\n          <DiceCard />\n        </div>\n        <div className={classes.cssItem2}>\n          <Players visible={playersOpened} />\n        </div>\n      </div>\n\n      <nav className={clsx(classes.speedDial, !playersOpened && classes.speedDialLower)}>\n        <RoomSpeedDialWrapper />\n      </nav>\n\n      <nav className={classes.diceDashboard}>\n        <DiceDashboard visible={!diceRolling} />\n      </nav>\n    </section>\n  );\n}\n","import { enhancedRoomList } from './RoomPage.enhancer';\nimport { RoomC } from './RoomPage';\n\nexport default enhancedRoomList(RoomC);\n"],"sourceRoot":""}